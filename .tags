!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	core/PGraphics.java	/^  static public final int A = 6;$/;"	f	class:PGraphics
AB	core/PGraphics.java	/^  static public final int AB = 27;$/;"	f	class:PGraphics
ACCURACY	core/PShapeSVG.java	/^      int ACCURACY = 2;$/;"	f	class:PShapeSVG.LinearGradientPaint.LinearGradientContext
ACCURACY	core/PShapeSVG.java	/^      int ACCURACY = 5;$/;"	f	class:PShapeSVG.RadialGradientPaint.RadialGradientContext
ADD	core/PConstants.java	/^  public final static int ADD        = 1 << 1;$/;"	f	interface:PConstants
AG	core/PGraphics.java	/^  static public final int AG = 26;$/;"	f	class:PGraphics
ALIASED_LINE_WIDTH_RANGE	opengl/PGL.java	/^  public static int ALIASED_LINE_WIDTH_RANGE;$/;"	f	class:PGL
ALIASED_POINT_SIZE_RANGE	opengl/PGL.java	/^  public static int ALIASED_POINT_SIZE_RANGE;$/;"	f	class:PGL
ALPHA	core/PConstants.java	/^  static final int ALPHA = 4;  \/\/ image$/;"	f	interface:PConstants
ALPHA	opengl/PGL.java	/^  public static int ALPHA;$/;"	f	class:PGL
ALPHA8	opengl/PGL.java	/^  public static int ALPHA8;$/;"	f	class:PGL
ALPHA_MASK	core/PImage.java	/^  public static final int ALPHA_MASK = 0xff000000;$/;"	f	class:PImage
ALPHA_TEST	opengl/PGL.java	/^  public static int ALPHA_TEST;$/;"	f	class:PGL
ALREADY_BEGAN_CONTOUR_ERROR	opengl/PGraphicsOpenGL.java	/^  static final String ALREADY_BEGAN_CONTOUR_ERROR =$/;"	f	class:PGraphicsOpenGL
ALT	core/PConstants.java	/^  static final int ALT       = KeyEvent.VK_ALT;$/;"	f	interface:PConstants
ALT	event/Event.java	/^  static public final int ALT   = 1 << 3;$/;"	f	class:Event
ALWAYS	opengl/PGL.java	/^  public static int ALWAYS;$/;"	f	class:PGL
AMBIENT	core/PConstants.java	/^  static final int AMBIENT = 0;$/;"	f	interface:PConstants
AR	core/PGraphics.java	/^  static public final int AR = 25;$/;"	f	class:PGraphics
ARC	core/PConstants.java	/^  static final int ARC             = 32;  \/\/ primitive$/;"	f	interface:PConstants
ARGB	core/PConstants.java	/^  static final int ARGB  = 2;  \/\/ image$/;"	f	interface:PConstants
ARGS_BGCOLOR	core/PApplet.java	/^  static public final String ARGS_BGCOLOR = "--bgcolor";$/;"	f	class:PApplet
ARGS_DISPLAY	core/PApplet.java	/^  static public final String ARGS_DISPLAY = "--display";$/;"	f	class:PApplet
ARGS_EDITOR_LOCATION	core/PApplet.java	/^  static public final String ARGS_EDITOR_LOCATION = "--editor-location";$/;"	f	class:PApplet
ARGS_EXTERNAL	core/PApplet.java	/^  static public final String ARGS_EXTERNAL = "--external";$/;"	f	class:PApplet
ARGS_FULL_SCREEN	core/PApplet.java	/^  static public final String ARGS_FULL_SCREEN = "--full-screen";$/;"	f	class:PApplet
ARGS_HIDE_STOP	core/PApplet.java	/^  static public final String ARGS_HIDE_STOP = "--hide-stop";$/;"	f	class:PApplet
ARGS_LOCATION	core/PApplet.java	/^  static public final String ARGS_LOCATION = "--location";$/;"	f	class:PApplet
ARGS_PRESENT	core/PApplet.java	/^  static public final String ARGS_PRESENT = "--present";$/;"	f	class:PApplet
ARGS_SKETCH_FOLDER	core/PApplet.java	/^  static public final String ARGS_SKETCH_FOLDER = "--sketch-path";$/;"	f	class:PApplet
ARGS_STOP_COLOR	core/PApplet.java	/^  static public final String ARGS_STOP_COLOR = "--stop-color";$/;"	f	class:PApplet
ARRAY_BUFFER	opengl/PGL.java	/^  public static int ARRAY_BUFFER;$/;"	f	class:PGL
ARROW	core/PConstants.java	/^  static final int ARROW = Cursor.DEFAULT_CURSOR;$/;"	f	interface:PConstants
AWT	opengl/PJOGL.java	/^  public static final int AWT  = 0; \/\/ http:\/\/jogamp.org\/wiki\/index.php\/Using_JOGL_in_AWT_SWT_and_Swing$/;"	f	class:PJOGL
AsyncImageLoader	core/PApplet.java	/^    public AsyncImageLoader(String filename, String extension, PImage vessel) {$/;"	m	class:PApplet.AsyncImageLoader
AsyncImageLoader	core/PApplet.java	/^  class AsyncImageLoader extends Thread {$/;"	c	class:PApplet
B	core/PGraphics.java	/^  static public final int B = 5;  \/\/ TODO don't do that anymore (?)$/;"	f	class:PGraphics
BACK	opengl/PGL.java	/^  public static int BACK;$/;"	f	class:PGL
BACKSPACE	core/PConstants.java	/^  static final char BACKSPACE = 8;$/;"	f	interface:PConstants
BASELINE	core/PConstants.java	/^  static final int BASELINE = 0;$/;"	f	interface:PConstants
BEEN_LIT	core/PGraphics.java	/^  static public final int BEEN_LIT = 35;$/;"	f	class:PGraphics
BEVEL	core/PConstants.java	/^  static final int BEVEL    = 1 << 5;$/;"	f	interface:PConstants
BEZIER_VERTEX	core/PConstants.java	/^  static public final int BEZIER_VERTEX = 1;$/;"	f	interface:PConstants
BIG_ENDIAN	opengl/PGL.java	/^  protected static boolean BIG_ENDIAN =$/;"	f	class:PGL
BILINEAR	opengl/Texture.java	/^  protected static final int BILINEAR = 4;$/;"	f	class:Texture
BLEND	core/PConstants.java	/^  public final static int BLEND      = 1 << 0;$/;"	f	interface:PConstants
BLEND	opengl/PGL.java	/^  public static int BLEND;$/;"	f	class:PGL
BLEND_DRIVER_ERROR	opengl/PGraphicsOpenGL.java	/^  static final String BLEND_DRIVER_ERROR =$/;"	f	class:PGraphicsOpenGL
BLEND_RENDERER_ERROR	opengl/PGraphicsOpenGL.java	/^  static final String BLEND_RENDERER_ERROR =$/;"	f	class:PGraphicsOpenGL
BLUE_MASK	core/PImage.java	/^  public static final int BLUE_MASK  = 0x000000ff;$/;"	f	class:PImage
BLUR	core/PConstants.java	/^  static final int BLUR      = 11;$/;"	f	interface:PConstants
BOOL	opengl/PGL.java	/^  public static int BOOL;$/;"	f	class:PGL
BOOL_VEC2	opengl/PGL.java	/^  public static int BOOL_VEC2;$/;"	f	class:PGL
BOOL_VEC3	opengl/PGL.java	/^  public static int BOOL_VEC3;$/;"	f	class:PGL
BOOL_VEC4	opengl/PGL.java	/^  public static int BOOL_VEC4;$/;"	f	class:PGL
BOTTOM	core/PConstants.java	/^  static final int BOTTOM = 102;$/;"	f	interface:PConstants
BOX	core/PConstants.java	/^  static final int BOX             = 41;  \/\/ primitive$/;"	f	interface:PConstants
BREAK	core/PConstants.java	/^  static public final int BREAK = 4;$/;"	f	interface:PConstants
BUFFER_SIZE	opengl/PGL.java	/^  public static int BUFFER_SIZE;$/;"	f	class:PGL
BUFFER_USAGE	opengl/PGL.java	/^  public static int BUFFER_USAGE;$/;"	f	class:PGL
BURN	core/PConstants.java	/^  public final static int BURN       = 1 << 13;$/;"	f	interface:PConstants
BYTE	opengl/PGL.java	/^  public static int BYTE;$/;"	f	class:PGL
BlendingContext	core/PGraphicsJava2D.java	/^    private BlendingContext(int mode) {$/;"	m	class:PGraphicsJava2D.BlendingContext	file:
BlendingContext	core/PGraphicsJava2D.java	/^  private static final class BlendingContext implements CompositeContext {$/;"	c	class:PGraphicsJava2D
BufferData	opengl/Texture.java	/^    BufferData(Object nat, IntBuffer rgb, int w, int h) {$/;"	m	class:Texture.BufferData
BufferData	opengl/Texture.java	/^  protected class BufferData {$/;"	c	class:Texture
CAP_BUTT	opengl/LinePath.java	/^  public final static int CAP_BUTT = 0;$/;"	f	class:LinePath
CAP_ROUND	opengl/LinePath.java	/^  public final static int CAP_ROUND = 1;$/;"	f	class:LinePath
CAP_SQUARE	opengl/LinePath.java	/^  public final static int CAP_SQUARE = 2;$/;"	f	class:LinePath
CATEGORY	data/Table.java	/^  static public final int CATEGORY = 5;$/;"	f	class:Table
CCW	opengl/PGL.java	/^  public static int CCW;$/;"	f	class:PGL
CENTER	core/PConstants.java	/^  static final int CENTER   = 3;$/;"	f	interface:PConstants
CHARSET	core/PFont.java	/^  static public char[] CHARSET;$/;"	f	class:PFont
CHATTER	core/PConstants.java	/^  static final int CHATTER   = 0;$/;"	f	interface:PConstants
CHORD	core/PConstants.java	/^  static final int CHORD  = 2;$/;"	f	interface:PConstants
CLAMP	core/PConstants.java	/^  public static final int CLAMP = 0;$/;"	f	interface:PConstants
CLAMP_TO_EDGE	opengl/PGL.java	/^  public static int CLAMP_TO_EDGE;$/;"	f	class:PGL
CLICK	event/MouseEvent.java	/^  static public final int CLICK = 3;$/;"	f	class:MouseEvent
CLOSE	core/PConstants.java	/^  static final int CLOSE = 2;$/;"	f	interface:PConstants
CODED	core/PConstants.java	/^  static final int CODED     = 0xffff;$/;"	f	interface:PConstants
COLOR	opengl/PShader.java	/^  static protected final int COLOR    = 3;$/;"	f	class:PShader
COLOR_ATTACHMENT0	opengl/PGL.java	/^  public static int COLOR_ATTACHMENT0;$/;"	f	class:PGL
COLOR_ATTACHMENT1	opengl/PGL.java	/^  public static int COLOR_ATTACHMENT1;$/;"	f	class:PGL
COLOR_ATTACHMENT2	opengl/PGL.java	/^  public static int COLOR_ATTACHMENT2;$/;"	f	class:PGL
COLOR_ATTACHMENT3	opengl/PGL.java	/^  public static int COLOR_ATTACHMENT3;$/;"	f	class:PGL
COLOR_BUFFER_BIT	opengl/PGL.java	/^  public static int COLOR_BUFFER_BIT;$/;"	f	class:PGL
COMPILE_STATUS	opengl/PGL.java	/^  public static int COMPILE_STATUS;$/;"	f	class:PGL
COMPLAINT	core/PConstants.java	/^  static final int COMPLAINT = 1;$/;"	f	interface:PConstants
COMPRESSED_TEXTURE_FORMATS	opengl/PGL.java	/^  public static int COMPRESSED_TEXTURE_FORMATS;$/;"	f	class:PGL
CONSTANT_ALPHA	opengl/PGL.java	/^  public static int CONSTANT_ALPHA;$/;"	f	class:PGL
CONSTANT_COLOR	opengl/PGL.java	/^  public static int CONSTANT_COLOR;$/;"	f	class:PGL
CONTROL	core/PConstants.java	/^  static final int CONTROL   = KeyEvent.VK_CONTROL;$/;"	f	interface:PConstants
CORNER	core/PConstants.java	/^  static final int CORNER   = 0;$/;"	f	interface:PConstants
CORNERS	core/PConstants.java	/^  static final int CORNERS  = 1;$/;"	f	interface:PConstants
CROSS	core/PConstants.java	/^  static final int CROSS = Cursor.CROSSHAIR_CURSOR;$/;"	f	interface:PConstants
CTRL	event/Event.java	/^  static public final int CTRL  = 1 << 1;$/;"	f	class:Event
CULL_FACE	opengl/PGL.java	/^  public static int CULL_FACE;$/;"	f	class:PGL
CURRENT_VERTEX_ATTRIB	opengl/PGL.java	/^  public static int CURRENT_VERTEX_ATTRIB;$/;"	f	class:PGL
CURVE_VERTEX	core/PConstants.java	/^  static public final int CURVE_VERTEX = 3;$/;"	f	interface:PConstants
CUSTOM	core/PConstants.java	/^  static final int CUSTOM       = 0; \/\/ user-specified fanciness$/;"	f	interface:PConstants
CW	opengl/PGL.java	/^  public static int CW;$/;"	f	class:PGL
DA	core/PGraphics.java	/^  static public final int DA = 6;$/;"	f	class:PGraphics
DARKEST	core/PConstants.java	/^  public final static int DARKEST    = 1 << 4;$/;"	f	interface:PConstants
DB	core/PGraphics.java	/^  static public final int DB = 5;$/;"	f	class:PGraphics
DEBUG	core/PApplet.java	/^  static final boolean DEBUG = false;$/;"	f	class:PApplet
DECR	opengl/PGL.java	/^  public static int DECR;$/;"	f	class:PGL
DECR_WRAP	opengl/PGL.java	/^  public static int DECR_WRAP;$/;"	f	class:PGL
DEFAULT_HEIGHT	core/PApplet.java	/^  static public final int DEFAULT_HEIGHT = 100;$/;"	f	class:PApplet
DEFAULT_IN_EDGES	opengl/PGL.java	/^  protected static int DEFAULT_IN_EDGES      = 128;$/;"	f	class:PGL
DEFAULT_IN_TEXTURES	opengl/PGL.java	/^  protected static int DEFAULT_IN_TEXTURES   = 64;$/;"	f	class:PGL
DEFAULT_IN_VERTICES	opengl/PGL.java	/^  protected static int DEFAULT_IN_VERTICES   = 64;$/;"	f	class:PGL
DEFAULT_STROKE_CAP	core/PGraphics.java	/^  static protected final int DEFAULT_STROKE_CAP = ROUND;$/;"	f	class:PGraphics
DEFAULT_STROKE_JOIN	core/PGraphics.java	/^  static protected final int DEFAULT_STROKE_JOIN = MITER;$/;"	f	class:PGraphics
DEFAULT_STROKE_WEIGHT	core/PGraphics.java	/^  static protected final float DEFAULT_STROKE_WEIGHT = 1;$/;"	f	class:PGraphics
DEFAULT_TESS_INDICES	opengl/PGL.java	/^  protected static int DEFAULT_TESS_INDICES  = 128;$/;"	f	class:PGL
DEFAULT_TESS_VERTICES	opengl/PGL.java	/^  protected static int DEFAULT_TESS_VERTICES = 64;$/;"	f	class:PGL
DEFAULT_VERTICES	core/PGraphics.java	/^  public static final int DEFAULT_VERTICES = 512;$/;"	f	class:PGraphics
DEFAULT_WIDTH	core/PApplet.java	/^  static public final int DEFAULT_WIDTH = 100;$/;"	f	class:PApplet
DEG_TO_RAD	core/PConstants.java	/^  static final float DEG_TO_RAD = PI\/180.0f;$/;"	f	interface:PConstants
DELETE	core/PConstants.java	/^  static final char DELETE    = 127;$/;"	f	interface:PConstants
DELETE_STATUS	opengl/PGL.java	/^  public static int DELETE_STATUS;$/;"	f	class:PGL
DEPTH24_STENCIL8	opengl/PGL.java	/^  public static int DEPTH24_STENCIL8;$/;"	f	class:PGL
DEPTH_ATTACHMENT	opengl/PGL.java	/^  public static int DEPTH_ATTACHMENT;$/;"	f	class:PGL
DEPTH_BITS	opengl/PGL.java	/^  public static int DEPTH_BITS;$/;"	f	class:PGL
DEPTH_BUFFER_BIT	opengl/PGL.java	/^  public static int DEPTH_BUFFER_BIT;$/;"	f	class:PGL
DEPTH_COMPONENT	opengl/PGL.java	/^  public static int DEPTH_COMPONENT;$/;"	f	class:PGL
DEPTH_COMPONENT16	opengl/PGL.java	/^  public static int DEPTH_COMPONENT16;$/;"	f	class:PGL
DEPTH_COMPONENT24	opengl/PGL.java	/^  public static int DEPTH_COMPONENT24;$/;"	f	class:PGL
DEPTH_COMPONENT32	opengl/PGL.java	/^  public static int DEPTH_COMPONENT32;$/;"	f	class:PGL
DEPTH_STENCIL	opengl/PGL.java	/^  public static int DEPTH_STENCIL;$/;"	f	class:PGL
DEPTH_TEST	opengl/PGL.java	/^  public static int DEPTH_TEST;$/;"	f	class:PGL
DEPTH_WRITEMASK	opengl/PGL.java	/^  public static int DEPTH_WRITEMASK;$/;"	f	class:PGL
DG	core/PGraphics.java	/^  static public final int DG = 4;$/;"	f	class:PGraphics
DIAMETER	core/PConstants.java	/^  static final int DIAMETER = 3;$/;"	f	interface:PConstants
DIFFERENCE	core/PConstants.java	/^  public final static int DIFFERENCE = 1 << 5;$/;"	f	interface:PConstants
DILATE	core/PConstants.java	/^  static final int DILATE    = 18;$/;"	f	interface:PConstants
DIRECTIONAL	core/PConstants.java	/^  static final int DIRECTIONAL  = 1;$/;"	f	interface:PConstants
DISABLE_DEPTH_MASK	core/PConstants.java	/^  static final int DISABLE_DEPTH_MASK         =  5;$/;"	f	interface:PConstants
DISABLE_DEPTH_SORT	core/PConstants.java	/^  static final int DISABLE_DEPTH_SORT         = -3;$/;"	f	interface:PConstants
DISABLE_DEPTH_TEST	core/PConstants.java	/^  static final int DISABLE_DEPTH_TEST         =  2;$/;"	f	interface:PConstants
DISABLE_NATIVE_FONTS	core/PConstants.java	/^  static final int DISABLE_NATIVE_FONTS       = -1;$/;"	f	interface:PConstants
DISABLE_OPENGL_ERRORS	core/PConstants.java	/^  static final int DISABLE_OPENGL_ERRORS      =  4;$/;"	f	interface:PConstants
DISABLE_OPTIMIZED_STROKE	core/PConstants.java	/^  static final int DISABLE_OPTIMIZED_STROKE   =  6;$/;"	f	interface:PConstants
DISABLE_RETINA_PIXELS	core/PConstants.java	/^  static final int DISABLE_RETINA_PIXELS      = -10;$/;"	f	interface:PConstants
DISABLE_STROKE_PERSPECTIVE	core/PConstants.java	/^  static final int DISABLE_STROKE_PERSPECTIVE = -7;$/;"	f	interface:PConstants
DISABLE_STROKE_PURE	core/PConstants.java	/^  static final int DISABLE_STROKE_PURE        = -9;$/;"	f	interface:PConstants
DISABLE_TEXTURE_MIPMAPS	core/PConstants.java	/^  static final int DISABLE_TEXTURE_MIPMAPS    =  8;$/;"	f	interface:PConstants
DITHER	opengl/PGL.java	/^  public static int DITHER;$/;"	f	class:PGL
DODGE	core/PConstants.java	/^  public final static int DODGE      = 1 << 12;$/;"	f	interface:PConstants
DONT_CARE	opengl/PGL.java	/^  public static int DONT_CARE;$/;"	f	class:PGL
DOUBLE	data/Table.java	/^  static public final int DOUBLE = 4;$/;"	f	class:Table
DOWN	core/PConstants.java	/^  static final int DOWN      = KeyEvent.VK_DOWN;$/;"	f	interface:PConstants
DR	core/PGraphics.java	/^  static public final int DR = 3;  \/\/ TODO needs to not be shared, this is a material property$/;"	f	class:PGraphics
DRAG	event/MouseEvent.java	/^  static public final int DRAG = 4;$/;"	f	class:MouseEvent
DRAW_FRAMEBUFFER	opengl/PGL.java	/^  public static int DRAW_FRAMEBUFFER;$/;"	f	class:PGL
DRAW_TIMEOUT_MILLIS	opengl/PJOGL.java	/^  protected static int DRAW_TIMEOUT_MILLIS = 500;$/;"	f	class:PJOGL
DST_ALPHA	opengl/PGL.java	/^  public static int DST_ALPHA;$/;"	f	class:PGL
DST_COLOR	opengl/PGL.java	/^  public static int DST_COLOR;$/;"	f	class:PGL
DXF	core/PConstants.java	/^  static final String DXF    = "processing.dxf.RawDXF";$/;"	f	interface:PConstants
DYNAMIC_DRAW	opengl/PGL.java	/^  public static int DYNAMIC_DRAW;$/;"	f	class:PGL
EB	core/PGraphics.java	/^  static public final int EB = 34;$/;"	f	class:PGraphics
EDGE	core/PGraphics.java	/^  static public final int EDGE = 12;$/;"	f	class:PGraphics
EDGE_CLOSE	opengl/PGraphicsOpenGL.java	/^  static protected final int EDGE_CLOSE  = -1;$/;"	f	class:PGraphicsOpenGL
EDGE_MIDDLE	opengl/PGraphicsOpenGL.java	/^  static protected final int EDGE_MIDDLE = 0;$/;"	f	class:PGraphicsOpenGL
EDGE_SINGLE	opengl/PGraphicsOpenGL.java	/^  static protected final int EDGE_SINGLE = 3;$/;"	f	class:PGraphicsOpenGL
EDGE_START	opengl/PGraphicsOpenGL.java	/^  static protected final int EDGE_START  = 1;$/;"	f	class:PGraphicsOpenGL
EDGE_STOP	opengl/PGraphicsOpenGL.java	/^  static protected final int EDGE_STOP   = 2;$/;"	f	class:PGraphicsOpenGL
EG	core/PGraphics.java	/^  static public final int EG = 33;$/;"	f	class:PGraphics
ELEMENT_ARRAY_BUFFER	opengl/PGL.java	/^  public static int ELEMENT_ARRAY_BUFFER;$/;"	f	class:PGL
ELLIPSE	core/PConstants.java	/^  static final int ELLIPSE         = 31;  \/\/ primitive$/;"	f	interface:PConstants
ENABLE_DEPTH_MASK	core/PConstants.java	/^  static final int ENABLE_DEPTH_MASK          = -5;$/;"	f	interface:PConstants
ENABLE_DEPTH_SORT	core/PConstants.java	/^  static final int ENABLE_DEPTH_SORT          =  3;$/;"	f	interface:PConstants
ENABLE_DEPTH_TEST	core/PConstants.java	/^  static final int ENABLE_DEPTH_TEST          = -2;$/;"	f	interface:PConstants
ENABLE_NATIVE_FONTS	core/PConstants.java	/^  static final int ENABLE_NATIVE_FONTS        =  1;$/;"	f	interface:PConstants
ENABLE_OPENGL_ERRORS	core/PConstants.java	/^  static final int ENABLE_OPENGL_ERRORS       = -4;$/;"	f	interface:PConstants
ENABLE_OPTIMIZED_STROKE	core/PConstants.java	/^  static final int ENABLE_OPTIMIZED_STROKE    = -6;$/;"	f	interface:PConstants
ENABLE_RETINA_PIXELS	core/PConstants.java	/^  static final int ENABLE_RETINA_PIXELS       =  10;$/;"	f	interface:PConstants
ENABLE_STROKE_PERSPECTIVE	core/PConstants.java	/^  static final int ENABLE_STROKE_PERSPECTIVE  =  7;$/;"	f	interface:PConstants
ENABLE_STROKE_PURE	core/PConstants.java	/^  static final int ENABLE_STROKE_PURE         =  9;$/;"	f	interface:PConstants
ENABLE_TEXTURE_MIPMAPS	core/PConstants.java	/^  static final int ENABLE_TEXTURE_MIPMAPS     = -8;$/;"	f	interface:PConstants
ENTER	core/PConstants.java	/^  static final char ENTER     = 10;$/;"	f	interface:PConstants
ENTER	event/MouseEvent.java	/^  static public final int ENTER = 6;$/;"	f	class:MouseEvent
EPSILON	core/PConstants.java	/^  static final float EPSILON = 0.0001f;$/;"	f	interface:PConstants
EQUAL	opengl/PGL.java	/^  public static int EQUAL;$/;"	f	class:PGL
ER	core/PGraphics.java	/^  static public final int ER = 32;$/;"	f	class:PGraphics
ERODE	core/PConstants.java	/^  static final int ERODE     = 17;$/;"	f	interface:PConstants
ERROR_BACKGROUND_IMAGE_FORMAT	core/PConstants.java	/^  static final String ERROR_BACKGROUND_IMAGE_FORMAT =$/;"	f	interface:PConstants
ERROR_BACKGROUND_IMAGE_SIZE	core/PConstants.java	/^  static final String ERROR_BACKGROUND_IMAGE_SIZE =$/;"	f	interface:PConstants
ERROR_MIN_MAX	core/PApplet.java	/^  static final String ERROR_MIN_MAX =$/;"	f	class:PApplet
ERROR_PUSHMATRIX_OVERFLOW	core/PConstants.java	/^  static final String ERROR_PUSHMATRIX_OVERFLOW =$/;"	f	interface:PConstants
ERROR_PUSHMATRIX_UNDERFLOW	core/PConstants.java	/^  static final String ERROR_PUSHMATRIX_UNDERFLOW =$/;"	f	interface:PConstants
ERROR_TEXTFONT_NULL_PFONT	core/PConstants.java	/^  static final String ERROR_TEXTFONT_NULL_PFONT =$/;"	f	interface:PConstants
ESC	core/PConstants.java	/^  static final char ESC       = 27;$/;"	f	interface:PConstants
EVENTS_TOOLKIT	opengl/PJOGL.java	/^  protected static int EVENTS_TOOLKIT;$/;"	f	class:PJOGL
EXCLUSION	core/PConstants.java	/^  public final static int EXCLUSION  = 1 << 6;$/;"	f	interface:PConstants
EXIT	event/MouseEvent.java	/^  static public final int EXIT = 7;$/;"	f	class:MouseEvent
EXPAND_MAX	opengl/LinePath.java	/^  static final int EXPAND_MAX = 500;$/;"	f	class:LinePath
EXTENSIONS	opengl/PGL.java	/^  public static int EXTENSIONS;$/;"	f	class:PGL
EXTERNAL_MOVE	core/PApplet.java	/^  static public final String EXTERNAL_MOVE = "__MOVE__";$/;"	f	class:PApplet
EXTERNAL_STOP	core/PApplet.java	/^  static public final String EXTERNAL_STOP = "__STOP__";$/;"	f	class:PApplet
EXTRA_CHARS	core/PFont.java	/^  static final char[] EXTRA_CHARS = {$/;"	f	class:PFont
Event	event/Event.java	/^  public Event(Object nativeObject, long millis, int action, int modifiers) {$/;"	m	class:Event
Event	event/Event.java	/^public class Event {$/;"	c
FALSE	opengl/PGL.java	/^  public static int FALSE;$/;"	f	class:PGL
FASTEST	opengl/PGL.java	/^  public static int FASTEST;$/;"	f	class:PGL
FB_STACK_DEPTH	opengl/PGraphicsOpenGL.java	/^  static protected final int FB_STACK_DEPTH = 16;$/;"	f	class:PGraphicsOpenGL
FLOAT	data/Table.java	/^  static public final int FLOAT = 3;$/;"	f	class:Table
FLOAT	opengl/PGL.java	/^  public static int FLOAT;$/;"	f	class:PGL
FLOAT1	opengl/PShader.java	/^    static final int FLOAT1    = 4;$/;"	f	class:PShader.UniformValue
FLOAT1VEC	opengl/PShader.java	/^    static final int FLOAT1VEC = 12;$/;"	f	class:PShader.UniformValue
FLOAT2	opengl/PShader.java	/^    static final int FLOAT2    = 5;$/;"	f	class:PShader.UniformValue
FLOAT2VEC	opengl/PShader.java	/^    static final int FLOAT2VEC = 13;$/;"	f	class:PShader.UniformValue
FLOAT3	opengl/PShader.java	/^    static final int FLOAT3    = 6;$/;"	f	class:PShader.UniformValue
FLOAT3VEC	opengl/PShader.java	/^    static final int FLOAT3VEC = 14;$/;"	f	class:PShader.UniformValue
FLOAT4	opengl/PShader.java	/^    static final int FLOAT4    = 7;$/;"	f	class:PShader.UniformValue
FLOAT4VEC	opengl/PShader.java	/^    static final int FLOAT4VEC = 15;$/;"	f	class:PShader.UniformValue
FLOAT_EPS	opengl/PGL.java	/^  protected static float FLOAT_EPS = Float.MIN_VALUE;$/;"	f	class:PGL
FLOAT_MAT2	opengl/PGL.java	/^  public static int FLOAT_MAT2;$/;"	f	class:PGL
FLOAT_MAT3	opengl/PGL.java	/^  public static int FLOAT_MAT3;$/;"	f	class:PGL
FLOAT_MAT4	opengl/PGL.java	/^  public static int FLOAT_MAT4;$/;"	f	class:PGL
FLOAT_VEC2	opengl/PGL.java	/^  public static int FLOAT_VEC2;$/;"	f	class:PGL
FLOAT_VEC3	opengl/PGL.java	/^  public static int FLOAT_VEC3;$/;"	f	class:PGL
FLOAT_VEC4	opengl/PGL.java	/^  public static int FLOAT_VEC4;$/;"	f	class:PGL
FLUSH_CONTINUOUSLY	opengl/PGraphicsOpenGL.java	/^  static protected final int FLUSH_CONTINUOUSLY = 0;$/;"	f	class:PGraphicsOpenGL
FLUSH_VERTEX_COUNT	opengl/PGL.java	/^  protected static int FLUSH_VERTEX_COUNT = MAX_VERTEX_INDEX1;$/;"	f	class:PGL
FLUSH_WHEN_FULL	opengl/PGraphicsOpenGL.java	/^  static protected final int FLUSH_WHEN_FULL    = 1;$/;"	f	class:PGraphicsOpenGL
FRAGMENT_SHADER	opengl/PGL.java	/^  public static int FRAGMENT_SHADER;$/;"	f	class:PGL
FRAMEBUFFER	opengl/PGL.java	/^  public static int FRAMEBUFFER;$/;"	f	class:PGL
FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	opengl/PGL.java	/^  public static int FRAMEBUFFER_ATTACHMENT_OBJECT_NAME;$/;"	f	class:PGL
FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	opengl/PGL.java	/^  public static int FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE;$/;"	f	class:PGL
FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	opengl/PGL.java	/^  public static int FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE;$/;"	f	class:PGL
FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	opengl/PGL.java	/^  public static int FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL;$/;"	f	class:PGL
FRAMEBUFFER_COMPLETE	opengl/PGL.java	/^  public static int FRAMEBUFFER_COMPLETE;$/;"	f	class:PGL
FRAMEBUFFER_ERROR	opengl/PGL.java	/^  protected static final String FRAMEBUFFER_ERROR =$/;"	f	class:PGL
FRAMEBUFFER_INCOMPLETE_ATTACHMENT	opengl/PGL.java	/^  public static int FRAMEBUFFER_INCOMPLETE_ATTACHMENT;$/;"	f	class:PGL
FRAMEBUFFER_INCOMPLETE_DIMENSIONS	opengl/PGL.java	/^  public static int FRAMEBUFFER_INCOMPLETE_DIMENSIONS;$/;"	f	class:PGL
FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER	opengl/PGL.java	/^  public static int FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER;$/;"	f	class:PGL
FRAMEBUFFER_INCOMPLETE_FORMATS	opengl/PGL.java	/^  public static int FRAMEBUFFER_INCOMPLETE_FORMATS;$/;"	f	class:PGL
FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	opengl/PGL.java	/^  public static int FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT;$/;"	f	class:PGL
FRAMEBUFFER_INCOMPLETE_READ_BUFFER	opengl/PGL.java	/^  public static int FRAMEBUFFER_INCOMPLETE_READ_BUFFER;$/;"	f	class:PGL
FRAMEBUFFER_UNSUPPORTED	opengl/PGL.java	/^  public static int FRAMEBUFFER_UNSUPPORTED;$/;"	f	class:PGL
FRONT	opengl/PGL.java	/^  public static int FRONT;$/;"	f	class:PGL
FRONT_AND_BACK	opengl/PGL.java	/^  public static int FRONT_AND_BACK;$/;"	f	class:PGL
FUNC_ADD	opengl/PGL.java	/^  public static int FUNC_ADD;$/;"	f	class:PGL
FUNC_MAX	opengl/PGL.java	/^  public static int FUNC_MAX;$/;"	f	class:PGL
FUNC_MIN	opengl/PGL.java	/^  public static int FUNC_MIN;$/;"	f	class:PGL
FUNC_REVERSE_SUBTRACT	opengl/PGL.java	/^  public static int FUNC_REVERSE_SUBTRACT;$/;"	f	class:PGL
FUNC_SUBTRACT	opengl/PGL.java	/^  public static int FUNC_SUBTRACT;$/;"	f	class:PGL
FloatDict	data/FloatDict.java	/^  public FloatDict() {$/;"	m	class:FloatDict
FloatDict	data/FloatDict.java	/^  public FloatDict(BufferedReader reader) {$/;"	m	class:FloatDict
FloatDict	data/FloatDict.java	/^  public FloatDict(String[] keys, float[] values) {$/;"	m	class:FloatDict
FloatDict	data/FloatDict.java	/^  public FloatDict(int length) {$/;"	m	class:FloatDict
FloatDict	data/FloatDict.java	/^public class FloatDict {$/;"	c
FloatList	data/FloatList.java	/^  public FloatList() {$/;"	m	class:FloatList
FloatList	data/FloatList.java	/^  public FloatList(Iterable<Float> iter) {$/;"	m	class:FloatList
FloatList	data/FloatList.java	/^  public FloatList(float[] list) {$/;"	m	class:FloatList
FloatList	data/FloatList.java	/^  public FloatList(int length) {$/;"	m	class:FloatList
FloatList	data/FloatList.java	/^public class FloatList implements Iterable<Float> {$/;"	c
FloatToS15_16	opengl/LinePath.java	/^  static int FloatToS15_16(float flt) {$/;"	m	class:LinePath
Font	core/PShapeSVG.java	/^    public Font(PShapeSVG parent, XML properties) {$/;"	m	class:PShapeSVG.Font
Font	core/PShapeSVG.java	/^  public class Font extends PShapeSVG {$/;"	c	class:PShapeSVG
FontFace	core/PShapeSVG.java	/^    public FontFace(PShapeSVG parent, XML properties) {$/;"	m	class:PShapeSVG.FontFace
FontFace	core/PShapeSVG.java	/^  class FontFace extends PShapeSVG {$/;"	c	class:PShapeSVG
FontGlyph	core/PShapeSVG.java	/^    public FontGlyph(PShapeSVG parent, XML properties, Font font) {$/;"	m	class:PShapeSVG.FontGlyph
FontGlyph	core/PShapeSVG.java	/^  public class FontGlyph extends PShapeSVG {  \/\/ extends Path$/;"	c	class:PShapeSVG
FontOutline	opengl/PGL.java	/^  protected interface FontOutline {$/;"	i	class:PGL
FontOutline	opengl/PJOGL.java	/^    public FontOutline(char ch, Object font) {$/;"	m	class:PJOGL.FontOutline
FontOutline	opengl/PJOGL.java	/^  protected class FontOutline implements PGL.FontOutline {$/;"	c	class:PJOGL
FontTexture	opengl/FontTexture.java	/^  public FontTexture(PGraphicsOpenGL pg, PFont font, boolean is3D) {$/;"	m	class:FontTexture
FontTexture	opengl/FontTexture.java	/^class FontTexture implements PConstants {$/;"	c
FrameBuffer	opengl/FrameBuffer.java	/^  FrameBuffer() {$/;"	m	class:FrameBuffer
FrameBuffer	opengl/FrameBuffer.java	/^  FrameBuffer(int w, int h) {$/;"	m	class:FrameBuffer
FrameBuffer	opengl/FrameBuffer.java	/^  FrameBuffer(int w, int h, boolean screen) {$/;"	m	class:FrameBuffer
FrameBuffer	opengl/FrameBuffer.java	/^  FrameBuffer(int w, int h, int samples, int colorBuffers,$/;"	m	class:FrameBuffer
FrameBuffer	opengl/FrameBuffer.java	/^public class FrameBuffer implements PConstants {$/;"	c
G	core/PGraphics.java	/^  static public final int G = 4;  \/\/ fill stored here, transform in place$/;"	f	class:PGraphics
GENERATE_MIPMAP_HINT	opengl/PGL.java	/^  public static int GENERATE_MIPMAP_HINT;$/;"	f	class:PGL
GEOMETRY	core/PShape.java	/^  static public final int GEOMETRY = 3;$/;"	f	class:PShape
GEQUAL	opengl/PGL.java	/^  public static int GEQUAL;$/;"	f	class:PGL
GIF	core/PConstants.java	/^  static final int GIF   = 3;$/;"	f	interface:PConstants
GLResource	opengl/PGraphicsOpenGL.java	/^    GLResource(int id, int context) {$/;"	m	class:PGraphicsOpenGL.GLResource
GLResource	opengl/PGraphicsOpenGL.java	/^  protected static class GLResource {$/;"	c	class:PGraphicsOpenGL
GLSL_VERSION	opengl/PGraphicsOpenGL.java	/^  static public String GLSL_VERSION;$/;"	f	class:PGraphicsOpenGL
GLUCallback	opengl/PJOGL.java	/^    protected class GLUCallback extends GLUtessellatorCallbackAdapter {$/;"	c	class:PJOGL.Tessellator
GRAY	core/PConstants.java	/^  static final int GRAY      = 12;$/;"	f	interface:PConstants
GREATER	opengl/PGL.java	/^  public static int GREATER;$/;"	f	class:PGL
GREEN_MASK	core/PImage.java	/^  public static final int GREEN_MASK = 0x0000ff00;$/;"	f	class:PImage
GROUP	core/PConstants.java	/^  static final int GROUP           = 0;   \/\/ createShape()$/;"	f	interface:PConstants
Glyph	core/PFont.java	/^    protected Glyph(char c) {$/;"	m	class:PFont.Glyph
Glyph	core/PFont.java	/^    public Glyph() {$/;"	m	class:PFont.Glyph
Glyph	core/PFont.java	/^    public Glyph(DataInputStream is) throws IOException {$/;"	m	class:PFont.Glyph
Glyph	core/PFont.java	/^  public class Glyph {$/;"	c	class:PFont
Gradient	core/PShapeSVG.java	/^    public Gradient(PShapeSVG parent, XML properties) {$/;"	m	class:PShapeSVG.Gradient
Gradient	core/PShapeSVG.java	/^  static class Gradient extends PShapeSVG {$/;"	c	class:PShapeSVG
HALF_PI	core/PConstants.java	/^  static final float HALF_PI = (float) (Math.PI \/ 2.0);$/;"	f	interface:PConstants
HAND	core/PConstants.java	/^  static final int HAND  = Cursor.HAND_CURSOR;$/;"	f	interface:PConstants
HARD_LIGHT	core/PConstants.java	/^  public final static int HARD_LIGHT = 1 << 10;$/;"	f	interface:PConstants
HAS_NORMAL	core/PGraphics.java	/^  static public final int HAS_NORMAL = 36;$/;"	f	class:PGraphics
HIGH_FLOAT	opengl/PGL.java	/^  public static int HIGH_FLOAT;$/;"	f	class:PGL
HIGH_INT	opengl/PGL.java	/^  public static int HIGH_INT;$/;"	f	class:PGL
HINT_COUNT	core/PConstants.java	/^  static final int HINT_COUNT                 = 11;$/;"	f	interface:PConstants
HSB	core/PConstants.java	/^  static final int HSB   = 3;  \/\/ color$/;"	f	interface:PConstants
HashMapBlows	data/Table.java	/^    HashMapBlows() { }$/;"	m	class:Table.HashMapBlows
HashMapBlows	data/Table.java	/^    HashMapBlows(DataInputStream input) throws IOException {$/;"	m	class:Table.HashMapBlows
HashMapBlows	data/Table.java	/^  class HashMapBlows {$/;"	c	class:Table
IMAGE	core/PConstants.java	/^  static final int IMAGE      = 2;$/;"	f	interface:PConstants
IMMEDIATE	opengl/PGraphicsOpenGL.java	/^  static protected final int IMMEDIATE = 0;$/;"	f	class:PGraphicsOpenGL
INCONSISTENT_SHADER_TYPES	opengl/PGraphicsOpenGL.java	/^  static final String INCONSISTENT_SHADER_TYPES =$/;"	f	class:PGraphicsOpenGL
INCR	opengl/PGL.java	/^  public static int INCR;$/;"	f	class:PGL
INCR_WRAP	opengl/PGL.java	/^  public static int INCR_WRAP;$/;"	f	class:PGL
INDEX_TYPE	opengl/PGL.java	/^  protected static int INDEX_TYPE   = 0x1403; \/\/ GL_UNSIGNED_SHORT$/;"	f	class:PGL
INFO_LOG_LENGTH	opengl/PGL.java	/^  public static int INFO_LOG_LENGTH;$/;"	f	class:PGL
INIT_INDEX_BUFFER_SIZE	opengl/PGraphicsOpenGL.java	/^  protected static final int INIT_INDEX_BUFFER_SIZE   = 512;$/;"	f	class:PGraphicsOpenGL
INIT_SIZE	opengl/LinePath.java	/^  static final int INIT_SIZE = 20;$/;"	f	class:LinePath
INIT_VERTEX_BUFFER_SIZE	opengl/PGraphicsOpenGL.java	/^  protected static final int INIT_VERTEX_BUFFER_SIZE  = 256;$/;"	f	class:PGraphicsOpenGL
INSIDE_BEGIN_END_ERROR	core/PShape.java	/^  public static final String INSIDE_BEGIN_END_ERROR =$/;"	f	class:PShape
INT	data/Table.java	/^  static public final int INT = 1;$/;"	f	class:Table
INT	opengl/PGL.java	/^  public static int INT;$/;"	f	class:PGL
INT1	opengl/PShader.java	/^    static final int INT1      = 0;$/;"	f	class:PShader.UniformValue
INT1VEC	opengl/PShader.java	/^    static final int INT1VEC   = 8;$/;"	f	class:PShader.UniformValue
INT2	opengl/PShader.java	/^    static final int INT2      = 1;$/;"	f	class:PShader.UniformValue
INT2VEC	opengl/PShader.java	/^    static final int INT2VEC   = 9;$/;"	f	class:PShader.UniformValue
INT3	opengl/PShader.java	/^    static final int INT3      = 2;$/;"	f	class:PShader.UniformValue
INT3VEC	opengl/PShader.java	/^    static final int INT3VEC   = 10;$/;"	f	class:PShader.UniformValue
INT4	opengl/PShader.java	/^    static final int INT4      = 3;$/;"	f	class:PShader.UniformValue
INT4VEC	opengl/PShader.java	/^    static final int INT4VEC   = 11;$/;"	f	class:PShader.UniformValue
INT_VEC2	opengl/PGL.java	/^  public static int INT_VEC2;$/;"	f	class:PGL
INT_VEC3	opengl/PGL.java	/^  public static int INT_VEC3;$/;"	f	class:PGL
INT_VEC4	opengl/PGL.java	/^  public static int INT_VEC4;$/;"	f	class:PGL
INVALID_FILTER_SHADER_ERROR	opengl/PGraphicsOpenGL.java	/^  static final String INVALID_FILTER_SHADER_ERROR =$/;"	f	class:PGraphicsOpenGL
INVERT	core/PConstants.java	/^  static final int INVERT    = 13;$/;"	f	interface:PConstants
INVERT	opengl/PGL.java	/^  public static int INVERT;$/;"	f	class:PGL
ImageCache	core/PGraphicsJava2D.java	/^  class ImageCache {$/;"	c	class:PGraphicsJava2D
InGeometry	opengl/PGraphicsOpenGL.java	/^    InGeometry(PGraphicsOpenGL pg, int mode) {$/;"	m	class:PGraphicsOpenGL.InGeometry
InGeometry	opengl/PGraphicsOpenGL.java	/^  static protected class InGeometry {$/;"	c	class:PGraphicsOpenGL
IndexCache	opengl/PGraphicsOpenGL.java	/^    IndexCache() {$/;"	m	class:PGraphicsOpenGL.IndexCache
IndexCache	opengl/PGraphicsOpenGL.java	/^  static protected class IndexCache {$/;"	c	class:PGraphicsOpenGL
IntDict	data/IntDict.java	/^  public IntDict() {$/;"	m	class:IntDict
IntDict	data/IntDict.java	/^  public IntDict(BufferedReader reader) {$/;"	m	class:IntDict
IntDict	data/IntDict.java	/^  public IntDict(String[] keys, int[] values) {$/;"	m	class:IntDict
IntDict	data/IntDict.java	/^  public IntDict(int length) {$/;"	m	class:IntDict
IntDict	data/IntDict.java	/^public class IntDict {$/;"	c
IntList	data/IntList.java	/^  public IntList() {$/;"	m	class:IntList
IntList	data/IntList.java	/^  public IntList(Iterable<Integer> iter) {$/;"	m	class:IntList
IntList	data/IntList.java	/^  public IntList(int length) {$/;"	m	class:IntList
IntList	data/IntList.java	/^  public IntList(int[] source) {$/;"	m	class:IntList
IntList	data/IntList.java	/^public class IntList implements Iterable<Integer> {$/;"	c
InternalEventQueue	core/PApplet.java	/^  class InternalEventQueue {$/;"	c	class:PApplet
JAVA2D	core/PConstants.java	/^  static final String JAVA2D = "processing.core.PGraphicsJava2D";$/;"	f	interface:PConstants
JOIN_BEVEL	opengl/LinePath.java	/^  public final static int JOIN_BEVEL = 2;$/;"	f	class:LinePath
JOIN_MITER	opengl/LinePath.java	/^  public final static int JOIN_MITER = 0;$/;"	f	class:LinePath
JOIN_ROUND	opengl/LinePath.java	/^  public final static int JOIN_ROUND = 1;$/;"	f	class:LinePath
JPEG	core/PConstants.java	/^  static final int JPEG  = 2;$/;"	f	interface:PConstants
JSONArray	data/JSONArray.java	/^  protected JSONArray(JSONTokener x) {$/;"	m	class:JSONArray
JSONArray	data/JSONArray.java	/^  protected JSONArray(Object array) {$/;"	m	class:JSONArray
JSONArray	data/JSONArray.java	/^  public JSONArray() {$/;"	m	class:JSONArray
JSONArray	data/JSONArray.java	/^  public JSONArray(FloatList list) {$/;"	m	class:JSONArray
JSONArray	data/JSONArray.java	/^  public JSONArray(IntList list) {$/;"	m	class:JSONArray
JSONArray	data/JSONArray.java	/^  public JSONArray(Reader reader) {$/;"	m	class:JSONArray
JSONArray	data/JSONArray.java	/^  public JSONArray(StringList list) {$/;"	m	class:JSONArray
JSONArray	data/JSONArray.java	/^public class JSONArray {$/;"	c
JSONObject	data/JSONObject.java	/^  protected JSONObject(HashMap<String, Object> map) {$/;"	m	class:JSONObject
JSONObject	data/JSONObject.java	/^  protected JSONObject(JSONTokener x) {$/;"	m	class:JSONObject
JSONObject	data/JSONObject.java	/^  protected JSONObject(Object bean) {$/;"	m	class:JSONObject
JSONObject	data/JSONObject.java	/^  public JSONObject() {$/;"	m	class:JSONObject
JSONObject	data/JSONObject.java	/^  public JSONObject(FloatDict dict) {$/;"	m	class:JSONObject
JSONObject	data/JSONObject.java	/^  public JSONObject(IntDict dict) {$/;"	m	class:JSONObject
JSONObject	data/JSONObject.java	/^  public JSONObject(Reader reader) {$/;"	m	class:JSONObject
JSONObject	data/JSONObject.java	/^  public JSONObject(StringDict dict) {$/;"	m	class:JSONObject
JSONObject	data/JSONObject.java	/^public class JSONObject {$/;"	c
JSONTokener	data/JSONTokener.java	/^  public JSONTokener(InputStream inputStream) {$/;"	m	class:JSONTokener
JSONTokener	data/JSONTokener.java	/^  public JSONTokener(Reader reader) {$/;"	m	class:JSONTokener
JSONTokener	data/JSONTokener.java	/^  public JSONTokener(String s) {$/;"	m	class:JSONTokener
JSONTokener	data/JSONTokener.java	/^class JSONTokener {$/;"	c
KEEP	opengl/PGL.java	/^  public static int KEEP;$/;"	f	class:PGL
KEY	event/Event.java	/^  static public final int KEY = 1;$/;"	f	class:Event
KeyEvent	event/KeyEvent.java	/^  public KeyEvent(Object nativeObject,$/;"	m	class:KeyEvent
KeyEvent	event/KeyEvent.java	/^public class KeyEvent extends Event {$/;"	c
LANDSCAPE	core/PConstants.java	/^  static final int LANDSCAPE = 2;$/;"	f	interface:PConstants
LEFT	core/PConstants.java	/^  static final int LEFT      = KeyEvent.VK_LEFT;$/;"	f	interface:PConstants
LEQUAL	opengl/PGL.java	/^  public static int LEQUAL;$/;"	f	class:PGL
LESS	opengl/PGL.java	/^  public static int LESS;$/;"	f	class:PGL
LIGHT	opengl/PShader.java	/^  static protected final int LIGHT    = 4;$/;"	f	class:PShader
LIGHTEST	core/PConstants.java	/^  public final static int LIGHTEST   = 1 << 3;$/;"	f	interface:PConstants
LINE	core/PConstants.java	/^  static final int LINE            = 4;   \/\/ primitive$/;"	f	interface:PConstants
LINE	opengl/PShader.java	/^  static protected final int LINE     = 1;$/;"	f	class:PShader
LINEAR	opengl/PGL.java	/^  public static int LINEAR;$/;"	f	class:PGL
LINEAR	opengl/Texture.java	/^  protected static final int LINEAR = 3;$/;"	f	class:Texture
LINEAR_MIPMAP_LINEAR	opengl/PGL.java	/^  public static int LINEAR_MIPMAP_LINEAR;$/;"	f	class:PGL
LINEAR_MIPMAP_NEAREST	opengl/PGL.java	/^  public static int LINEAR_MIPMAP_NEAREST;$/;"	f	class:PGL
LINES	core/PConstants.java	/^  static final int LINES           = 5;   \/\/ beginShape(), createShape()$/;"	f	interface:PConstants
LINES	opengl/PGL.java	/^  public static int LINES;$/;"	f	class:PGL
LINE_LOOP	core/PConstants.java	/^  static final int LINE_LOOP       = 51;$/;"	f	interface:PConstants
LINE_LOOP	opengl/PGL.java	/^  public static int LINE_LOOP;$/;"	f	class:PGL
LINE_SMOOTH	opengl/PGL.java	/^  public static int LINE_SMOOTH;$/;"	f	class:PGL
LINE_STRIP	core/PConstants.java	/^  static final int LINE_STRIP      = 50;  \/\/ beginShape()$/;"	f	interface:PConstants
LINE_STRIP	opengl/PGL.java	/^  public static int LINE_STRIP;$/;"	f	class:PGL
LINK_STATUS	opengl/PGL.java	/^  public static int LINK_STATUS;$/;"	f	class:PGL
LINUX	core/PConstants.java	/^  static final int LINUX   = 3;$/;"	f	interface:PConstants
LONG	data/Table.java	/^  static public final int LONG = 2;$/;"	f	class:Table
LOW_FLOAT	opengl/PGL.java	/^  public static int LOW_FLOAT;$/;"	f	class:PGL
LOW_INT	opengl/PGL.java	/^  public static int LOW_INT;$/;"	f	class:PGL
LUMINANCE	opengl/PGL.java	/^  public static int LUMINANCE;$/;"	f	class:PGL
LUMINANCE_ALPHA	opengl/PGL.java	/^  public static int LUMINANCE_ALPHA;$/;"	f	class:PGL
LinePath	opengl/LinePath.java	/^  public LinePath() {$/;"	m	class:LinePath
LinePath	opengl/LinePath.java	/^  public LinePath(int rule) {$/;"	m	class:LinePath
LinePath	opengl/LinePath.java	/^  public LinePath(int rule, int initialCapacity) {$/;"	m	class:LinePath
LinePath	opengl/LinePath.java	/^public class LinePath {$/;"	c
LineStroker	opengl/LineStroker.java	/^  public LineStroker() {$/;"	m	class:LineStroker
LineStroker	opengl/LineStroker.java	/^  public LineStroker(LineStroker output, int lineWidth, int capStyle, int joinStyle,$/;"	m	class:LineStroker
LineStroker	opengl/LineStroker.java	/^public class LineStroker  {$/;"	c
LinearGradient	core/PShapeSVG.java	/^    public LinearGradient(PShapeSVG parent, XML properties) {$/;"	m	class:PShapeSVG.LinearGradient
LinearGradient	core/PShapeSVG.java	/^  class LinearGradient extends Gradient {$/;"	c	class:PShapeSVG
LinearGradientContext	core/PShapeSVG.java	/^      public LinearGradientContext(float tx1, float ty1, float tx2, float ty2) {$/;"	m	class:PShapeSVG.LinearGradientPaint.LinearGradientContext
LinearGradientContext	core/PShapeSVG.java	/^    public class LinearGradientContext implements PaintContext {$/;"	c	class:PShapeSVG.LinearGradientPaint
LinearGradientPaint	core/PShapeSVG.java	/^    public LinearGradientPaint(float x1, float y1, float x2, float y2,$/;"	m	class:PShapeSVG.LinearGradientPaint
LinearGradientPaint	core/PShapeSVG.java	/^  class LinearGradientPaint implements Paint {$/;"	c	class:PShapeSVG
MACOSX	core/PConstants.java	/^  static final int MACOSX  = 2;$/;"	f	interface:PConstants
MAT2	opengl/PShader.java	/^    static final int MAT2      = 16;$/;"	f	class:PShader.UniformValue
MAT3	opengl/PShader.java	/^    static final int MAT3      = 17;$/;"	f	class:PShader.UniformValue
MAT4	opengl/PShader.java	/^    static final int MAT4      = 18;$/;"	f	class:PShader.UniformValue
MATRIX	opengl/PShapeOpenGL.java	/^  static protected final int MATRIX    = 3;$/;"	f	class:PShapeOpenGL
MATRIX_STACK_DEPTH	core/PGraphics.java	/^  static final int MATRIX_STACK_DEPTH = 32;$/;"	f	class:PGraphics
MATRIX_STACK_DEPTH	opengl/PGraphicsOpenGL.java	/^  static protected final int MATRIX_STACK_DEPTH = 32;$/;"	f	class:PGraphicsOpenGL
MAX_BUFFER_CACHE_SIZE	opengl/Texture.java	/^  public static final int MAX_BUFFER_CACHE_SIZE = 3;$/;"	f	class:Texture
MAX_CAPS_JOINS_LENGTH	opengl/PGL.java	/^  protected static int MAX_CAPS_JOINS_LENGTH = 5000;$/;"	f	class:PGL
MAX_COMBINED_TEXTURE_IMAGE_UNITS	opengl/PGL.java	/^  public static int MAX_COMBINED_TEXTURE_IMAGE_UNITS;$/;"	f	class:PGL
MAX_FLOAT	core/PConstants.java	/^  static final float MAX_FLOAT = Float.MAX_VALUE;$/;"	f	interface:PConstants
MAX_FONT_TEX_SIZE	opengl/PGL.java	/^  protected static int MAX_FONT_TEX_SIZE = 1024;$/;"	f	class:PGL
MAX_INT	core/PConstants.java	/^  static final int MAX_INT = Integer.MAX_VALUE;$/;"	f	interface:PConstants
MAX_LIGHTS	opengl/PGL.java	/^  protected static int MAX_LIGHTS = 8;$/;"	f	class:PGL
MAX_POINT_ACCURACY	opengl/PGraphicsOpenGL.java	/^  final static protected int   MAX_POINT_ACCURACY    = 200;$/;"	f	class:PGraphicsOpenGL
MAX_SAMPLES	opengl/PGL.java	/^  public static int MAX_SAMPLES;$/;"	f	class:PGL
MAX_TEXTURE_IMAGE_UNITS	opengl/PGL.java	/^  public static int MAX_TEXTURE_IMAGE_UNITS;$/;"	f	class:PGL
MAX_TEXTURE_MAX_ANISOTROPY	opengl/PGL.java	/^  public static int MAX_TEXTURE_MAX_ANISOTROPY;$/;"	f	class:PGL
MAX_TEXTURE_SIZE	opengl/PGL.java	/^  public static int MAX_TEXTURE_SIZE;$/;"	f	class:PGL
MAX_UPDATES	opengl/Texture.java	/^  protected static final int MAX_UPDATES = 10;$/;"	f	class:Texture
MAX_VERTEX_ATTRIBS	opengl/PGL.java	/^  public static int MAX_VERTEX_ATTRIBS;$/;"	f	class:PGL
MAX_VERTEX_INDEX	opengl/PGL.java	/^  protected static int MAX_VERTEX_INDEX  = 32767;$/;"	f	class:PGL
MAX_VERTEX_INDEX1	opengl/PGL.java	/^  protected static int MAX_VERTEX_INDEX1 = MAX_VERTEX_INDEX + 1;$/;"	f	class:PGL
MAX_VERTEX_TEXTURE_IMAGE_UNITS	opengl/PGL.java	/^  public static int MAX_VERTEX_TEXTURE_IMAGE_UNITS;$/;"	f	class:PGL
MEDIUM_FLOAT	opengl/PGL.java	/^  public static int MEDIUM_FLOAT;$/;"	f	class:PGL
MEDIUM_INT	opengl/PGL.java	/^  public static int MEDIUM_INT;$/;"	f	class:PGL
META	event/Event.java	/^  static public final int META  = 1 << 2;$/;"	f	class:Event
MIN_ARRAYCOPY_SIZE	opengl/PGL.java	/^  protected static int MIN_ARRAYCOPY_SIZE = 2;$/;"	f	class:PGL
MIN_CAPS_JOINS_WEIGHT	opengl/PGL.java	/^  protected static float MIN_CAPS_JOINS_WEIGHT = 2f;$/;"	f	class:PGL
MIN_DIRECT_BUFFER_SIZE	opengl/PGL.java	/^  protected static int MIN_DIRECT_BUFFER_SIZE = 1;$/;"	f	class:PGL
MIN_FLOAT	core/PConstants.java	/^  static final float MIN_FLOAT = -Float.MAX_VALUE;$/;"	f	interface:PConstants
MIN_FONT_TEX_SIZE	opengl/PGL.java	/^  protected static int MIN_FONT_TEX_SIZE = 256;$/;"	f	class:PGL
MIN_INT	core/PConstants.java	/^  static final int MIN_INT = Integer.MIN_VALUE;$/;"	f	interface:PConstants
MIN_MEMORY	opengl/Texture.java	/^  protected static final int MIN_MEMORY = 5;$/;"	f	class:Texture
MIN_POINT_ACCURACY	opengl/PGraphicsOpenGL.java	/^  final static protected int   MIN_POINT_ACCURACY    = 20;$/;"	f	class:PGraphicsOpenGL
MIN_WINDOW_HEIGHT	core/PApplet.java	/^  static public final int MIN_WINDOW_HEIGHT = 128;$/;"	f	class:PApplet
MIN_WINDOW_WIDTH	core/PApplet.java	/^  static public final int MIN_WINDOW_WIDTH = 128;$/;"	f	class:PApplet
MIPMAPS_ENABLED	opengl/PGL.java	/^  protected static boolean MIPMAPS_ENABLED = true;$/;"	f	class:PGL
MISSING_FBO_ERROR	opengl/PGL.java	/^  protected static final String MISSING_FBO_ERROR =$/;"	f	class:PGL
MISSING_FRAGMENT_SHADER	opengl/PGraphicsOpenGL.java	/^  static final String MISSING_FRAGMENT_SHADER =$/;"	f	class:PGraphicsOpenGL
MISSING_GLFUNC_ERROR	opengl/PGL.java	/^  protected static final String MISSING_GLFUNC_ERROR =$/;"	f	class:PGL
MISSING_GLSL_ERROR	opengl/PGL.java	/^  protected static final String MISSING_GLSL_ERROR =$/;"	f	class:PGL
MISSING_UV_TEXCOORDS_ERROR	opengl/PGraphicsOpenGL.java	/^  static final String MISSING_UV_TEXCOORDS_ERROR =$/;"	f	class:PGraphicsOpenGL
MISSING_VERTEX_SHADER	opengl/PGraphicsOpenGL.java	/^  static final String MISSING_VERTEX_SHADER =$/;"	f	class:PGraphicsOpenGL
MITER	core/PConstants.java	/^  static final int MITER    = 1 << 3;$/;"	f	interface:PConstants
MODEL	core/PConstants.java	/^  static final int MODEL = 4;$/;"	f	interface:PConstants
MODELVIEW	core/PConstants.java	/^  static final int MODELVIEW  = 1;$/;"	f	interface:PConstants
MOUSE	event/Event.java	/^  static public final int MOUSE = 2;$/;"	f	class:Event
MOVE	core/PConstants.java	/^  static final int MOVE  = Cursor.MOVE_CURSOR;$/;"	f	interface:PConstants
MOVE	event/MouseEvent.java	/^  static public final int MOVE = 5;$/;"	f	class:MouseEvent
MULTIPLY	core/PConstants.java	/^  public final static int MULTIPLY   = 1 << 7;$/;"	f	interface:PConstants
MULTISAMPLE	opengl/PGL.java	/^  public static int MULTISAMPLE;$/;"	f	class:PGL
MouseEvent	event/MouseEvent.java	/^  public MouseEvent(Object nativeObject,$/;"	m	class:MouseEvent
MouseEvent	event/MouseEvent.java	/^public class MouseEvent extends Event {$/;"	c
NEAREST	opengl/PGL.java	/^  public static int NEAREST;$/;"	f	class:PGL
NESTED_DRAW_ERROR	opengl/PGraphicsOpenGL.java	/^  static final String NESTED_DRAW_ERROR =$/;"	f	class:PGraphicsOpenGL
NEVER	opengl/PGL.java	/^  public static int NEVER;$/;"	f	class:PGL
NEWT	opengl/PJOGL.java	/^  public static final int NEWT = 1; \/\/ http:\/\/jogamp.org\/jogl\/doc\/NEWT-Overview.html$/;"	f	class:PJOGL
NEWTKeyListener	opengl/PJOGL.java	/^  protected class NEWTKeyListener extends com.jogamp.newt.event.KeyAdapter {$/;"	c	class:PJOGL
NEWTMouseListener	opengl/PJOGL.java	/^  protected class NEWTMouseListener extends com.jogamp.newt.event.MouseAdapter {$/;"	c	class:PJOGL
NEWTWindowListener	opengl/PJOGL.java	/^  protected class NEWTWindowListener implements com.jogamp.newt.event.WindowListener {$/;"	c	class:PJOGL
NICEST	opengl/PGL.java	/^  public static int NICEST;$/;"	f	class:PGL
NORMAL	core/PConstants.java	/^  static final int NORMAL     = 1;$/;"	f	interface:PConstants
NORMAL_MODE_AUTO	core/PGraphics.java	/^  static protected final int NORMAL_MODE_AUTO = 0;$/;"	f	class:PGraphics
NORMAL_MODE_AUTO	opengl/PShapeOpenGL.java	/^  static protected final int NORMAL_MODE_AUTO = 0;$/;"	f	class:PShapeOpenGL
NORMAL_MODE_SHAPE	core/PGraphics.java	/^  static protected final int NORMAL_MODE_SHAPE = 1;$/;"	f	class:PGraphics
NORMAL_MODE_SHAPE	opengl/PShapeOpenGL.java	/^  static protected final int NORMAL_MODE_SHAPE = 1;$/;"	f	class:PShapeOpenGL
NORMAL_MODE_VERTEX	core/PGraphics.java	/^  static protected final int NORMAL_MODE_VERTEX = 2;$/;"	f	class:PGraphics
NORMAL_MODE_VERTEX	opengl/PShapeOpenGL.java	/^  static protected final int NORMAL_MODE_VERTEX = 2;$/;"	f	class:PShapeOpenGL
NOTEQUAL	opengl/PGL.java	/^  public static int NOTEQUAL;$/;"	f	class:PGL
NO_BEGIN_CONTOUR_ERROR	opengl/PGraphicsOpenGL.java	/^  static final String NO_BEGIN_CONTOUR_ERROR =$/;"	f	class:PGraphicsOpenGL
NO_COLOR_SHADER_ERROR	opengl/PGraphicsOpenGL.java	/^  static final String NO_COLOR_SHADER_ERROR =$/;"	f	class:PGraphicsOpenGL
NO_LIGHT_SHADER_ERROR	opengl/PGraphicsOpenGL.java	/^  static final String NO_LIGHT_SHADER_ERROR =$/;"	f	class:PGraphicsOpenGL
NO_TEXLIGHT_SHADER_ERROR	opengl/PGraphicsOpenGL.java	/^  static final String NO_TEXLIGHT_SHADER_ERROR =$/;"	f	class:PGraphicsOpenGL
NO_TEXTURE_SHADER_ERROR	opengl/PGraphicsOpenGL.java	/^  static final String NO_TEXTURE_SHADER_ERROR =$/;"	f	class:PGraphicsOpenGL
NULL	data/JSONObject.java	/^  public static final Object NULL = new Null();$/;"	f	class:JSONObject
NUM_COMPRESSED_TEXTURE_FORMATS	opengl/PGL.java	/^  public static int NUM_COMPRESSED_TEXTURE_FORMATS;$/;"	f	class:PGL
NX	core/PGraphics.java	/^  static public final int NX = 9; \/\/ normal$/;"	f	class:PGraphics
NY	core/PGraphics.java	/^  static public final int NY = 10;$/;"	f	class:PGraphics
NZ	core/PGraphics.java	/^  static public final int NZ = 11;$/;"	f	class:PGraphics
Null	data/JSONObject.java	/^  private static final class Null {$/;"	c	class:JSONObject
OBJFace	core/PShapeOBJ.java	/^    OBJFace() {$/;"	m	class:PShapeOBJ.OBJFace
OBJFace	core/PShapeOBJ.java	/^  static protected class OBJFace {$/;"	c	class:PShapeOBJ
OBJMaterial	core/PShapeOBJ.java	/^    OBJMaterial() {$/;"	m	class:PShapeOBJ.OBJMaterial
OBJMaterial	core/PShapeOBJ.java	/^    OBJMaterial(String name) {$/;"	m	class:PShapeOBJ.OBJMaterial
OBJMaterial	core/PShapeOBJ.java	/^  static protected class OBJMaterial {$/;"	c	class:PShapeOBJ
ONE	opengl/PGL.java	/^  public static int ONE;$/;"	f	class:PGL
ONE_MINUS_CONSTANT_ALPHA	opengl/PGL.java	/^  public static int ONE_MINUS_CONSTANT_ALPHA;$/;"	f	class:PGL
ONE_MINUS_CONSTANT_COLOR	opengl/PGL.java	/^  public static int ONE_MINUS_CONSTANT_COLOR;$/;"	f	class:PGL
ONE_MINUS_DST_COLOR	opengl/PGL.java	/^  public static int ONE_MINUS_DST_COLOR;$/;"	f	class:PGL
ONE_MINUS_SRC_ALPHA	opengl/PGL.java	/^  public static int ONE_MINUS_SRC_ALPHA;$/;"	f	class:PGL
ONE_MINUS_SRC_COLOR	opengl/PGL.java	/^  public static int ONE_MINUS_SRC_COLOR;$/;"	f	class:PGL
OPAQUE	core/PConstants.java	/^  static final int OPAQUE    = 14;$/;"	f	interface:PConstants
OPEN	core/PConstants.java	/^  static final int OPEN = 1;$/;"	f	interface:PConstants
OPENGL	core/PConstants.java	/^  static final String OPENGL = P3D;$/;"	f	interface:PConstants
OPENGL_EXTENSIONS	opengl/PGraphicsOpenGL.java	/^  static public String OPENGL_EXTENSIONS;$/;"	f	class:PGraphicsOpenGL
OPENGL_RENDERER	opengl/PGraphicsOpenGL.java	/^  static public String OPENGL_RENDERER;$/;"	f	class:PGraphicsOpenGL
OPENGL_THREAD_ERROR	opengl/PGraphicsOpenGL.java	/^  static final String OPENGL_THREAD_ERROR =$/;"	f	class:PGraphicsOpenGL
OPENGL_VENDOR	opengl/PGraphicsOpenGL.java	/^  static public String OPENGL_VENDOR;$/;"	f	class:PGraphicsOpenGL
OPENGL_VERSION	opengl/PGraphicsOpenGL.java	/^  static public String OPENGL_VERSION;$/;"	f	class:PGraphicsOpenGL
OP_NONE	opengl/PGraphicsOpenGL.java	/^  static protected final int OP_NONE  = 0;$/;"	f	class:PGraphicsOpenGL
OP_READ	opengl/PGraphicsOpenGL.java	/^  static protected final int OP_READ  = 1;$/;"	f	class:PGraphicsOpenGL
OP_WRITE	opengl/PGraphicsOpenGL.java	/^  static protected final int OP_WRITE = 2;$/;"	f	class:PGraphicsOpenGL
ORTHOGRAPHIC	core/PConstants.java	/^  static final int ORTHOGRAPHIC = 2; \/\/ 2D isometric projection$/;"	f	interface:PConstants
OTHER	core/PConstants.java	/^  static final int OTHER   = 0;$/;"	f	interface:PConstants
OUTSIDE_BEGIN_END_ERROR	core/PShape.java	/^  public static final String OUTSIDE_BEGIN_END_ERROR =$/;"	f	class:PShape
OVERLAY	core/PConstants.java	/^  public final static int OVERLAY    = 1 << 9;$/;"	f	interface:PConstants
P2D	core/PConstants.java	/^  static final String P2D    = "processing.opengl.PGraphics2D";$/;"	f	interface:PConstants
P3D	core/PConstants.java	/^  static final String P3D    = "processing.opengl.PGraphics3D";$/;"	f	interface:PConstants
PACK_ALIGNMENT	opengl/PGL.java	/^  public static int PACK_ALIGNMENT;$/;"	f	class:PGL
PATH	core/PConstants.java	/^  static final int PATH            = 21;  \/\/ separate these two$/;"	f	interface:PConstants
PATH	core/PShape.java	/^  static public final int PATH = 2;$/;"	f	class:PShape
PApplet	core/PApplet.java	/^public class PApplet extends Applet$/;"	c
PConstants	core/PConstants.java	/^public interface PConstants {$/;"	i
PDF	core/PConstants.java	/^  static final String PDF    = "processing.pdf.PGraphicsPDF";$/;"	f	interface:PConstants
PERLIN_SIZE	core/PApplet.java	/^  static final int PERLIN_SIZE = 4095;$/;"	f	class:PApplet
PERLIN_YWRAP	core/PApplet.java	/^  static final int PERLIN_YWRAP = 1<<PERLIN_YWRAPB;$/;"	f	class:PApplet
PERLIN_YWRAPB	core/PApplet.java	/^  static final int PERLIN_YWRAPB = 4;$/;"	f	class:PApplet
PERLIN_ZWRAP	core/PApplet.java	/^  static final int PERLIN_ZWRAP = 1<<PERLIN_ZWRAPB;$/;"	f	class:PApplet
PERLIN_ZWRAPB	core/PApplet.java	/^  static final int PERLIN_ZWRAPB = 8;$/;"	f	class:PApplet
PERSPECTIVE	core/PConstants.java	/^  static final int PERSPECTIVE  = 3; \/\/ perspective matrix$/;"	f	interface:PConstants
PFont	core/PFont.java	/^  public PFont() { }  \/\/ for subclasses$/;"	m	class:PFont
PFont	core/PFont.java	/^  public PFont(Font font, boolean smooth) {$/;"	m	class:PFont
PFont	core/PFont.java	/^  public PFont(Font font, boolean smooth, char charset[]) {$/;"	m	class:PFont
PFont	core/PFont.java	/^  public PFont(Font font, boolean smooth, char charset[], boolean stream) {$/;"	m	class:PFont
PFont	core/PFont.java	/^  public PFont(InputStream input) throws IOException {$/;"	m	class:PFont
PFont	core/PFont.java	/^public class PFont implements PConstants {$/;"	c
PGL	opengl/PGL.java	/^  public PGL() { }$/;"	m	class:PGL
PGL	opengl/PGL.java	/^  public PGL(PGraphicsOpenGL pg) {$/;"	m	class:PGL
PGL	opengl/PGL.java	/^public abstract class PGL {$/;"	c
PGLListener	opengl/PJOGL.java	/^    public PGLListener() {}$/;"	m	class:PJOGL.PGLListener
PGLListener	opengl/PJOGL.java	/^  protected class PGLListener implements GLEventListener {$/;"	c	class:PJOGL
PGraphics	core/PGraphics.java	/^  public PGraphics() {$/;"	m	class:PGraphics
PGraphics	core/PGraphics.java	/^public class PGraphics extends PImage implements PConstants {$/;"	c
PGraphics2D	opengl/PGraphics2D.java	/^  public PGraphics2D() {$/;"	m	class:PGraphics2D
PGraphics2D	opengl/PGraphics2D.java	/^public class PGraphics2D extends PGraphicsOpenGL {$/;"	c
PGraphics3D	opengl/PGraphics3D.java	/^  public PGraphics3D() {$/;"	m	class:PGraphics3D
PGraphics3D	opengl/PGraphics3D.java	/^public class PGraphics3D extends PGraphicsOpenGL {$/;"	c
PGraphicsJava2D	core/PGraphicsJava2D.java	/^  public PGraphicsJava2D() { }$/;"	m	class:PGraphicsJava2D
PGraphicsJava2D	core/PGraphicsJava2D.java	/^public class PGraphicsJava2D extends PGraphics {$/;"	c
PGraphicsOpenGL	opengl/PGraphicsOpenGL.java	/^  public PGraphicsOpenGL() {$/;"	m	class:PGraphicsOpenGL
PGraphicsOpenGL	opengl/PGraphicsOpenGL.java	/^public class PGraphicsOpenGL extends PGraphics {$/;"	c
PGraphicsRetina2D	core/PGraphicsRetina2D.java	/^  public PGraphicsRetina2D() {$/;"	m	class:PGraphicsRetina2D
PGraphicsRetina2D	core/PGraphicsRetina2D.java	/^public class PGraphicsRetina2D extends PGraphicsJava2D {$/;"	c
PI	core/PConstants.java	/^  static final float PI = (float) Math.PI;$/;"	f	interface:PConstants
PIE	core/PConstants.java	/^  static final int PIE    = 3;$/;"	f	interface:PConstants
PImage	core/PImage.java	/^  public PImage() {$/;"	m	class:PImage
PImage	core/PImage.java	/^  public PImage(Image img) {$/;"	m	class:PImage
PImage	core/PImage.java	/^  public PImage(int width, int height) {$/;"	m	class:PImage
PImage	core/PImage.java	/^  public PImage(int width, int height, int format) {$/;"	m	class:PImage
PImage	core/PImage.java	/^public class PImage implements PConstants, Cloneable {$/;"	c
PJOGL	opengl/PJOGL.java	/^  public PJOGL(PGraphicsOpenGL pg) {$/;"	m	class:PJOGL
PJOGL	opengl/PJOGL.java	/^public class PJOGL extends PGL {$/;"	c
PMatrix	core/PMatrix.java	/^public interface PMatrix {$/;"	i
PMatrix2D	core/PMatrix2D.java	/^  public PMatrix2D() {$/;"	m	class:PMatrix2D
PMatrix2D	core/PMatrix2D.java	/^  public PMatrix2D(PMatrix matrix) {$/;"	m	class:PMatrix2D
PMatrix2D	core/PMatrix2D.java	/^  public PMatrix2D(float m00, float m01, float m02,$/;"	m	class:PMatrix2D
PMatrix2D	core/PMatrix2D.java	/^public class PMatrix2D implements PMatrix {$/;"	c
PMatrix3D	core/PMatrix3D.java	/^  public PMatrix3D() {$/;"	m	class:PMatrix3D
PMatrix3D	core/PMatrix3D.java	/^  public PMatrix3D(PMatrix matrix) {$/;"	m	class:PMatrix3D
PMatrix3D	core/PMatrix3D.java	/^  public PMatrix3D(float m00, float m01, float m02, float m03,$/;"	m	class:PMatrix3D
PMatrix3D	core/PMatrix3D.java	/^  public PMatrix3D(float m00, float m01, float m02,$/;"	m	class:PMatrix3D
PMatrix3D	core/PMatrix3D.java	/^public final class PMatrix3D implements PMatrix \/*, PConstants*\/ {$/;"	c
POINT	core/PConstants.java	/^  static final int POINT           = 2;   \/\/ primitive$/;"	f	interface:PConstants
POINT	opengl/PShader.java	/^  static protected final int POINT    = 0;$/;"	f	class:PShader
POINT	opengl/Texture.java	/^  protected static final int POINT = 2;$/;"	f	class:Texture
POINTS	core/PConstants.java	/^  static final int POINTS          = 3;   \/\/ vertices$/;"	f	interface:PConstants
POINTS	opengl/PGL.java	/^  public static int POINTS;$/;"	f	class:PGL
POINT_ACCURACY_FACTOR	opengl/PGraphicsOpenGL.java	/^  final static protected float POINT_ACCURACY_FACTOR = 10.0f;$/;"	f	class:PGraphicsOpenGL
POINT_SMOOTH	opengl/PGL.java	/^  public static int POINT_SMOOTH;$/;"	f	class:PGL
POLY	opengl/PShader.java	/^  static protected final int POLY     = 2;$/;"	f	class:PShader
POLYGON	core/PConstants.java	/^  static final int POLYGON         = 20;  \/\/ in the end, probably cannot$/;"	f	interface:PConstants
POLYGON_OFFSET_FILL	opengl/PGL.java	/^  public static int POLYGON_OFFSET_FILL;$/;"	f	class:PGL
POLYGON_SMOOTH	opengl/PGL.java	/^  public static int POLYGON_SMOOTH;$/;"	f	class:PGL
PORTRAIT	core/PConstants.java	/^  static final int PORTRAIT = 1;$/;"	f	interface:PConstants
POSTERIZE	core/PConstants.java	/^  static final int POSTERIZE = 15;$/;"	f	interface:PConstants
PRECISIONB	core/PImage.java	/^  static final int PRECISIONB = 15;$/;"	f	class:PImage
PRECISIONF	core/PImage.java	/^  static final int PRECISIONF = 1 << PRECISIONB;$/;"	f	class:PImage
PREC_ALPHA_SHIFT	core/PImage.java	/^  static final int PREC_ALPHA_SHIFT = 24-PRECISIONB;$/;"	f	class:PImage
PREC_MAXVAL	core/PImage.java	/^  static final int PREC_MAXVAL = PRECISIONF-1;$/;"	f	class:PImage
PREC_RED_SHIFT	core/PImage.java	/^  static final int PREC_RED_SHIFT = 16-PRECISIONB;$/;"	f	class:PImage
PRESS	event/KeyEvent.java	/^  static public final int PRESS = 1;$/;"	f	class:KeyEvent
PRESS	event/MouseEvent.java	/^  static public final int PRESS = 1;$/;"	f	class:MouseEvent
PRIMITIVE	core/PShape.java	/^  static public final int PRIMITIVE = 1;$/;"	f	class:PShape
PROBLEM	core/PConstants.java	/^  static final int PROBLEM   = 2;$/;"	f	interface:PConstants
PROFILE	opengl/PJOGL.java	/^  public static int PROFILE = 2;$/;"	f	class:PJOGL
PROJECT	core/PConstants.java	/^  static final int PROJECT  = 1 << 2;  \/\/ called 'square' in the svg spec$/;"	f	interface:PConstants
PROJECTION	core/PConstants.java	/^  static final int PROJECTION = 0;$/;"	f	interface:PConstants
PShader	opengl/PShader.java	/^  public PShader() {$/;"	m	class:PShader
PShader	opengl/PShader.java	/^  public PShader(PApplet parent) {$/;"	m	class:PShader
PShader	opengl/PShader.java	/^  public PShader(PApplet parent, String vertFilename, String fragFilename) {$/;"	m	class:PShader
PShader	opengl/PShader.java	/^  public PShader(PApplet parent, String[] vertSource, String[] fragSource) {$/;"	m	class:PShader
PShader	opengl/PShader.java	/^  public PShader(PApplet parent, URL vertURL, URL fragURL) {$/;"	m	class:PShader
PShader	opengl/PShader.java	/^public class PShader implements PConstants {$/;"	c
PShape	core/PShape.java	/^  public PShape() {$/;"	m	class:PShape
PShape	core/PShape.java	/^  public PShape(int family) {$/;"	m	class:PShape
PShape	core/PShape.java	/^public class PShape implements PConstants {$/;"	c
PShapeOBJ	core/PShapeOBJ.java	/^  protected PShapeOBJ(OBJFace face, OBJMaterial mtl,$/;"	m	class:PShapeOBJ
PShapeOBJ	core/PShapeOBJ.java	/^  public PShapeOBJ(PApplet parent, BufferedReader reader) {$/;"	m	class:PShapeOBJ
PShapeOBJ	core/PShapeOBJ.java	/^  public PShapeOBJ(PApplet parent, BufferedReader reader, String basePath) {$/;"	m	class:PShapeOBJ
PShapeOBJ	core/PShapeOBJ.java	/^  public PShapeOBJ(PApplet parent, String filename) {$/;"	m	class:PShapeOBJ
PShapeOBJ	core/PShapeOBJ.java	/^public class PShapeOBJ extends PShape {$/;"	c
PShapeOpenGL	opengl/PShapeOpenGL.java	/^  PShapeOpenGL() {$/;"	m	class:PShapeOpenGL
PShapeOpenGL	opengl/PShapeOpenGL.java	/^  public PShapeOpenGL(PApplet parent, int family) {$/;"	m	class:PShapeOpenGL
PShapeOpenGL	opengl/PShapeOpenGL.java	/^public class PShapeOpenGL extends PShape {$/;"	c
PShapeSVG	core/PShapeSVG.java	/^  protected PShapeSVG(PShapeSVG parent, XML properties, boolean parseKids) {$/;"	m	class:PShapeSVG
PShapeSVG	core/PShapeSVG.java	/^  public PShapeSVG(XML svg) {$/;"	m	class:PShapeSVG
PShapeSVG	core/PShapeSVG.java	/^public class PShapeSVG extends PShape {$/;"	c
PStyle	core/PStyle.java	/^public class PStyle implements PConstants {$/;"	c
PVector	core/PVector.java	/^  public PVector() {$/;"	m	class:PVector
PVector	core/PVector.java	/^  public PVector(float x, float y) {$/;"	m	class:PVector
PVector	core/PVector.java	/^  public PVector(float x, float y, float z) {$/;"	m	class:PVector
PVector	core/PVector.java	/^public class PVector implements Serializable {$/;"	c
Parameters	opengl/Texture.java	/^    public Parameters() {$/;"	m	class:Texture.Parameters
Parameters	opengl/Texture.java	/^    public Parameters(Parameters src) {$/;"	m	class:Texture.Parameters
Parameters	opengl/Texture.java	/^    public Parameters(int format) {$/;"	m	class:Texture.Parameters
Parameters	opengl/Texture.java	/^    public Parameters(int format, int sampling) {$/;"	m	class:Texture.Parameters
Parameters	opengl/Texture.java	/^    public Parameters(int format, int sampling, boolean mipmaps) {$/;"	m	class:Texture.Parameters
Parameters	opengl/Texture.java	/^    public Parameters(int format, int sampling, boolean mipmaps, int wrap) {$/;"	m	class:Texture.Parameters
Parameters	opengl/Texture.java	/^  static public class Parameters {$/;"	c	class:Texture
PathIterator	opengl/LinePath.java	/^    PathIterator(LinePath p2df) {$/;"	m	class:LinePath.PathIterator
PathIterator	opengl/LinePath.java	/^  static public class PathIterator {$/;"	c	class:LinePath
QUAD	core/PConstants.java	/^  static final int QUAD            = 16;  \/\/ primitive$/;"	f	interface:PConstants
QUADRATIC_VERTEX	core/PConstants.java	/^  static public final int QUADRATIC_VERTEX = 2;$/;"	f	interface:PConstants
QUADS	core/PConstants.java	/^  static final int QUADS           = 17;  \/\/ vertices$/;"	f	interface:PConstants
QUAD_BEZIER_VERTEX	core/PConstants.java	/^  static public final int QUAD_BEZIER_VERTEX = 2;  \/\/ should not have been exposed$/;"	f	interface:PConstants
QUAD_POINT_SIGNS	opengl/PGraphicsOpenGL.java	/^  final static protected float[][] QUAD_POINT_SIGNS =$/;"	f	class:PGraphicsOpenGL
QUAD_STRIP	core/PConstants.java	/^  static final int QUAD_STRIP      = 18;  \/\/ vertices$/;"	f	interface:PConstants
QUARTER_PI	core/PConstants.java	/^  static final float QUARTER_PI = (float) (Math.PI \/ 4.0);$/;"	f	interface:PConstants
R	core/PGraphics.java	/^  static public final int R = 3;  \/\/ actual rgb, after lighting$/;"	f	class:PGraphics
RADIUS	core/PConstants.java	/^  static final int RADIUS   = 2;$/;"	f	interface:PConstants
RAD_TO_DEG	core/PConstants.java	/^  static final float RAD_TO_DEG = 180.0f\/PI;$/;"	f	interface:PConstants
READ_FRAMEBUFFER	opengl/PGL.java	/^  public static int READ_FRAMEBUFFER;$/;"	f	class:PGL
READ_ONLY	opengl/PGL.java	/^  public static int READ_ONLY;$/;"	f	class:PGL
READ_WRITE	opengl/PGL.java	/^  public static int READ_WRITE;$/;"	f	class:PGL
RECT	core/PConstants.java	/^  static final int RECT            = 30;  \/\/ primitive$/;"	f	interface:PConstants
RED_MASK	core/PImage.java	/^  public static final int RED_MASK   = 0x00ff0000;$/;"	f	class:PImage
RELEASE	event/KeyEvent.java	/^  static public final int RELEASE = 2;$/;"	f	class:KeyEvent
RELEASE	event/MouseEvent.java	/^  static public final int RELEASE = 2;$/;"	f	class:MouseEvent
RENDERBUFFER	opengl/PGL.java	/^  public static int RENDERBUFFER;$/;"	f	class:PGL
RENDERBUFFER_ALPHA_SIZE	opengl/PGL.java	/^  public static int RENDERBUFFER_ALPHA_SIZE;$/;"	f	class:PGL
RENDERBUFFER_BLUE_SIZE	opengl/PGL.java	/^  public static int RENDERBUFFER_BLUE_SIZE;$/;"	f	class:PGL
RENDERBUFFER_DEPTH_SIZE	opengl/PGL.java	/^  public static int RENDERBUFFER_DEPTH_SIZE;$/;"	f	class:PGL
RENDERBUFFER_GREEN_SIZE	opengl/PGL.java	/^  public static int RENDERBUFFER_GREEN_SIZE;$/;"	f	class:PGL
RENDERBUFFER_HEIGHT	opengl/PGL.java	/^  public static int RENDERBUFFER_HEIGHT;$/;"	f	class:PGL
RENDERBUFFER_INTERNAL_FORMAT	opengl/PGL.java	/^  public static int RENDERBUFFER_INTERNAL_FORMAT;$/;"	f	class:PGL
RENDERBUFFER_RED_SIZE	opengl/PGL.java	/^  public static int RENDERBUFFER_RED_SIZE;$/;"	f	class:PGL
RENDERBUFFER_STENCIL_SIZE	opengl/PGL.java	/^  public static int RENDERBUFFER_STENCIL_SIZE;$/;"	f	class:PGL
RENDERBUFFER_WIDTH	opengl/PGL.java	/^  public static int RENDERBUFFER_WIDTH;$/;"	f	class:PGL
RENDERER	opengl/PGL.java	/^  public static int RENDERER;$/;"	f	class:PGL
REPEAT	core/PConstants.java	/^  public static final int REPEAT = 1;$/;"	f	interface:PConstants
REPEAT	opengl/PGL.java	/^  public static int REPEAT;$/;"	f	class:PGL
REPLACE	core/PConstants.java	/^  public final static int REPLACE    = 0;$/;"	f	interface:PConstants
REPLACE	opengl/PGL.java	/^  public static int REPLACE;$/;"	f	class:PGL
REQUESTED_ALPHA_BITS	opengl/PGL.java	/^  protected static int REQUESTED_ALPHA_BITS   = 8;$/;"	f	class:PGL
REQUESTED_DEPTH_BITS	opengl/PGL.java	/^  protected static int REQUESTED_DEPTH_BITS   = 24;$/;"	f	class:PGL
REQUESTED_STENCIL_BITS	opengl/PGL.java	/^  protected static int REQUESTED_STENCIL_BITS = 8;$/;"	f	class:PGL
RETAINED	opengl/PGraphicsOpenGL.java	/^  static protected final int RETAINED  = 1;$/;"	f	class:PGraphicsOpenGL
RETURN	core/PConstants.java	/^  static final char RETURN    = 13;$/;"	f	interface:PConstants
RGB	core/PConstants.java	/^  static final int RGB   = 1;  \/\/ image & color$/;"	f	interface:PConstants
RGB	opengl/PGL.java	/^  public static int RGB;$/;"	f	class:PGL
RGB565	opengl/PGL.java	/^  public static int RGB565;$/;"	f	class:PGL
RGB5_A1	opengl/PGL.java	/^  public static int RGB5_A1;$/;"	f	class:PGL
RGB8	opengl/PGL.java	/^  public static int RGB8;$/;"	f	class:PGL
RGBA	opengl/PGL.java	/^  public static int RGBA;$/;"	f	class:PGL
RGBA4	opengl/PGL.java	/^  public static int RGBA4;$/;"	f	class:PGL
RGBA8	opengl/PGL.java	/^  public static int RGBA8;$/;"	f	class:PGL
RIGHT	core/PConstants.java	/^  static final int RIGHT     = KeyEvent.VK_RIGHT;$/;"	f	interface:PConstants
ROTATE	opengl/PShapeOpenGL.java	/^  static protected final int ROTATE    = 1;$/;"	f	class:PShapeOpenGL
ROUND	core/PConstants.java	/^  static final int ROUND    = 1 << 1;$/;"	f	interface:PConstants
ROUND_JOIN_INTERNAL_THRESHOLD	opengl/LineStroker.java	/^  private static final long ROUND_JOIN_INTERNAL_THRESHOLD = 1000000000L;$/;"	f	class:LineStroker	file:
ROUND_JOIN_THRESHOLD	opengl/LineStroker.java	/^  private static final long ROUND_JOIN_THRESHOLD = 100000000L;$/;"	f	class:LineStroker	file:
RadialGradient	core/PShapeSVG.java	/^    public RadialGradient(PShapeSVG parent, XML properties) {$/;"	m	class:PShapeSVG.RadialGradient
RadialGradient	core/PShapeSVG.java	/^  class RadialGradient extends Gradient {$/;"	c	class:PShapeSVG
RadialGradientContext	core/PShapeSVG.java	/^    public class RadialGradientContext implements PaintContext {$/;"	c	class:PShapeSVG.RadialGradientPaint
RadialGradientPaint	core/PShapeSVG.java	/^    public RadialGradientPaint(float cx, float cy, float radius,$/;"	m	class:PShapeSVG.RadialGradientPaint
RadialGradientPaint	core/PShapeSVG.java	/^  class RadialGradientPaint implements Paint {$/;"	c	class:PShapeSVG
RegisteredMethods	core/PApplet.java	/^  class RegisteredMethods {$/;"	c	class:PApplet
RendererChangeException	core/PApplet.java	/^  static public class RendererChangeException extends RuntimeException { }$/;"	c	class:PApplet
RowIndexIterator	data/Table.java	/^    public RowIndexIterator(Table table, int[] indices) {$/;"	m	class:Table.RowIndexIterator
RowIndexIterator	data/Table.java	/^  static class RowIndexIterator implements Iterator<TableRow> {$/;"	c	class:Table
RowIterator	data/Table.java	/^    public RowIterator(Table table) {$/;"	m	class:Table.RowIterator
RowIterator	data/Table.java	/^  static class RowIterator implements Iterator<TableRow> {$/;"	c	class:Table
RowPointer	data/Table.java	/^    public RowPointer(Table table, int row) {$/;"	m	class:Table.RowPointer
RowPointer	data/Table.java	/^  static class RowPointer implements TableRow {$/;"	c	class:Table
S15_16ToFloat	opengl/LinePath.java	/^  static float S15_16ToFloat(int fix) {$/;"	m	class:LinePath
SA	core/PGraphics.java	/^  static public final int SA = 16;$/;"	f	class:PGraphics
SAMPLER2D	opengl/PShader.java	/^    static final int SAMPLER2D = 19;$/;"	f	class:PShader.UniformValue
SAMPLER_2D	opengl/PGL.java	/^  public static int SAMPLER_2D;$/;"	f	class:PGL
SAMPLER_CUBE	opengl/PGL.java	/^  public static int SAMPLER_CUBE;$/;"	f	class:PGL
SAMPLES	opengl/PGL.java	/^  public static int SAMPLES;$/;"	f	class:PGL
SAMPLE_ALPHA_TO_COVERAGE	opengl/PGL.java	/^  public static int SAMPLE_ALPHA_TO_COVERAGE;$/;"	f	class:PGL
SAMPLE_COVERAGE	opengl/PGL.java	/^  public static int SAMPLE_COVERAGE;$/;"	f	class:PGL
SAVE_SURFACE_TO_PIXELS_HACK	opengl/PGL.java	/^  protected static boolean SAVE_SURFACE_TO_PIXELS_HACK = true;$/;"	f	class:PGL
SB	core/PGraphics.java	/^  static public final int SB = 15;$/;"	f	class:PGraphics
SCALE	opengl/PShapeOpenGL.java	/^  static protected final int SCALE     = 2;$/;"	f	class:PShapeOpenGL
SCISSOR_TEST	opengl/PGL.java	/^  public static int SCISSOR_TEST;$/;"	f	class:PGL
SCREEN	core/PConstants.java	/^  public final static int SCREEN     = 1 << 8;$/;"	f	interface:PConstants
SEG_CLOSE	opengl/LinePath.java	/^  public static final byte SEG_CLOSE = 2;$/;"	f	class:LinePath
SEG_CLOSE	opengl/PGL.java	/^  protected static int SEG_CLOSE;$/;"	f	class:PGL
SEG_CUBICTO	opengl/PGL.java	/^  protected static int SEG_CUBICTO;$/;"	f	class:PGL
SEG_LINETO	opengl/LinePath.java	/^  public static final byte SEG_LINETO = 1;$/;"	f	class:LinePath
SEG_LINETO	opengl/PGL.java	/^  protected static int SEG_LINETO;$/;"	f	class:PGL
SEG_MOVETO	opengl/LinePath.java	/^  public static final byte SEG_MOVETO  = 0;$/;"	f	class:LinePath
SEG_MOVETO	opengl/PGL.java	/^  protected static int SEG_MOVETO;$/;"	f	class:PGL
SEG_QUADTO	opengl/PGL.java	/^  protected static int SEG_QUADTO;$/;"	f	class:PGL
SG	core/PGraphics.java	/^  static public final int SG = 14;$/;"	f	class:PGraphics
SHADER_NEED_LIGHT_ATTRIBS	opengl/PGraphicsOpenGL.java	/^  static final String SHADER_NEED_LIGHT_ATTRIBS =$/;"	f	class:PGraphicsOpenGL
SHADER_PREPROCESSOR_DIRECTIVE	opengl/PGL.java	/^  protected static final String SHADER_PREPROCESSOR_DIRECTIVE =$/;"	f	class:PGL
SHADER_SOURCE_LENGTH	opengl/PGL.java	/^  public static int SHADER_SOURCE_LENGTH;$/;"	f	class:PGL
SHADER_TYPE	opengl/PGL.java	/^  public static int SHADER_TYPE;$/;"	f	class:PGL
SHADING_LANGUAGE_VERSION	opengl/PGL.java	/^  public static int SHADING_LANGUAGE_VERSION;$/;"	f	class:PGL
SHAPE	core/PConstants.java	/^  static final int SHAPE = 5;$/;"	f	interface:PConstants
SHAPE_TEXT_SUPPORTED	opengl/PGL.java	/^  protected static boolean SHAPE_TEXT_SUPPORTED;$/;"	f	class:PGL
SHIFT	core/PConstants.java	/^  static final int SHIFT     = KeyEvent.VK_SHIFT;$/;"	f	interface:PConstants
SHIFT	event/Event.java	/^  static public final int SHIFT = 1 << 0;$/;"	f	class:Event
SHINE	core/PGraphics.java	/^  static public final int SHINE = 31;$/;"	f	class:PGraphics
SHORT	opengl/PGL.java	/^  public static int SHORT;$/;"	f	class:PGL
SINCOS_LENGTH	core/PGraphics.java	/^  static final protected int SINCOS_LENGTH = (int) (360f \/ SINCOS_PRECISION);$/;"	f	class:PGraphics
SINCOS_PRECISION	core/PGraphics.java	/^  static final protected float SINCOS_PRECISION = 0.5f;$/;"	f	class:PGraphics
SIZEOF_BYTE	opengl/PGL.java	/^  protected static int SIZEOF_BYTE  = Byte.SIZE \/ 8;$/;"	f	class:PGL
SIZEOF_FLOAT	opengl/PGL.java	/^  protected static int SIZEOF_FLOAT = Float.SIZE \/ 8;$/;"	f	class:PGL
SIZEOF_INDEX	opengl/PGL.java	/^  protected static int SIZEOF_INDEX = SIZEOF_SHORT;$/;"	f	class:PGL
SIZEOF_INT	opengl/PGL.java	/^  protected static int SIZEOF_INT   = Integer.SIZE \/ 8;$/;"	f	class:PGL
SIZEOF_SHORT	opengl/PGL.java	/^  protected static int SIZEOF_SHORT = Short.SIZE \/ 8;$/;"	f	class:PGL
SOFT_LIGHT	core/PConstants.java	/^  public final static int SOFT_LIGHT = 1 << 11;$/;"	f	interface:PConstants
SPB	core/PGraphics.java	/^  static public final int SPB = 30;$/;"	f	class:PGraphics
SPG	core/PGraphics.java	/^  static public final int SPG = 29;$/;"	f	class:PGraphics
SPHERE	core/PConstants.java	/^  static final int SPHERE          = 40;  \/\/ primitive$/;"	f	interface:PConstants
SPOT	core/PConstants.java	/^  static final int SPOT = 3;$/;"	f	interface:PConstants
SPR	core/PGraphics.java	/^  static public final int SPR = 28;$/;"	f	class:PGraphics
SQUARE	core/PConstants.java	/^  static final int SQUARE   = 1 << 0;  \/\/ called 'butt' in the svg spec$/;"	f	interface:PConstants
SR	core/PGraphics.java	/^  static public final int SR = 13;$/;"	f	class:PGraphics
SRC_ALPHA	opengl/PGL.java	/^  public static int SRC_ALPHA;$/;"	f	class:PGL
SRC_ALPHA_SATURATE	opengl/PGL.java	/^  public static int SRC_ALPHA_SATURATE;$/;"	f	class:PGL
SRC_COLOR	opengl/PGL.java	/^  public static int SRC_COLOR;$/;"	f	class:PGL
STATIC_DRAW	opengl/PGL.java	/^  public static int STATIC_DRAW;$/;"	f	class:PGL
STENCIL_ATTACHMENT	opengl/PGL.java	/^  public static int STENCIL_ATTACHMENT;$/;"	f	class:PGL
STENCIL_BITS	opengl/PGL.java	/^  public static int STENCIL_BITS;$/;"	f	class:PGL
STENCIL_BUFFER_BIT	opengl/PGL.java	/^  public static int STENCIL_BUFFER_BIT;$/;"	f	class:PGL
STENCIL_INDEX	opengl/PGL.java	/^  public static int STENCIL_INDEX;$/;"	f	class:PGL
STENCIL_INDEX1	opengl/PGL.java	/^  public static int STENCIL_INDEX1;$/;"	f	class:PGL
STENCIL_INDEX4	opengl/PGL.java	/^  public static int STENCIL_INDEX4;$/;"	f	class:PGL
STENCIL_INDEX8	opengl/PGL.java	/^  public static int STENCIL_INDEX8;$/;"	f	class:PGL
STENCIL_TEST	opengl/PGL.java	/^  public static int STENCIL_TEST;$/;"	f	class:PGL
STREAM_DRAW	opengl/PGL.java	/^  public static int STREAM_DRAW;$/;"	f	class:PGL
STRING	data/Table.java	/^  static public final int STRING = 0;$/;"	f	class:Table
STROKE_DISPLACEMENT	opengl/PGL.java	/^  protected static float STROKE_DISPLACEMENT = 0.999f;$/;"	f	class:PGL
STYLE_STACK_DEPTH	core/PGraphics.java	/^  static final int STYLE_STACK_DEPTH = 64;$/;"	f	class:PGraphics
SUBTRACT	core/PConstants.java	/^  public final static int SUBTRACT   = 1 << 2;$/;"	f	interface:PConstants
SW	core/PGraphics.java	/^  static public final int SW = 17;$/;"	f	class:PGraphics
Sort	data/Sort.java	/^  public Sort() { }$/;"	m	class:Sort
Sort	data/Sort.java	/^public abstract class Sort implements Runnable {$/;"	c
StringDict	data/StringDict.java	/^  public StringDict() {$/;"	m	class:StringDict
StringDict	data/StringDict.java	/^  public StringDict(BufferedReader reader) {$/;"	m	class:StringDict
StringDict	data/StringDict.java	/^  public StringDict(String[] keys, String[] values) {$/;"	m	class:StringDict
StringDict	data/StringDict.java	/^  public StringDict(int length) {$/;"	m	class:StringDict
StringDict	data/StringDict.java	/^public class StringDict {$/;"	c
StringList	data/StringList.java	/^  public StringList() {$/;"	m	class:StringList
StringList	data/StringList.java	/^  public StringList(Iterable<String> iter) {$/;"	m	class:StringList
StringList	data/StringList.java	/^  public StringList(String[] list) {$/;"	m	class:StringList
StringList	data/StringList.java	/^  public StringList(int length) {$/;"	m	class:StringList
StringList	data/StringList.java	/^public class StringList implements Iterable<String> {$/;"	c
TAB	core/PConstants.java	/^  static final char TAB       = 9;$/;"	f	interface:PConstants
TARGA	core/PConstants.java	/^  static final int TARGA = 1;$/;"	f	interface:PConstants
TAU	core/PConstants.java	/^  static final float TAU = (float) (2.0 * Math.PI);$/;"	f	interface:PConstants
TESSELLATION_ERROR	opengl/PGraphicsOpenGL.java	/^  static final String TESSELLATION_ERROR =$/;"	f	class:PGraphicsOpenGL
TESS_WINDING_NONZERO	opengl/PGL.java	/^  public static int TESS_WINDING_NONZERO;$/;"	f	class:PGL
TESS_WINDING_ODD	opengl/PGL.java	/^  public static int TESS_WINDING_ODD;$/;"	f	class:PGL
TEX2D	opengl/Texture.java	/^  protected static final int TEX2D   = 0;$/;"	f	class:Texture
TEXLIGHT	opengl/PShader.java	/^  static protected final int TEXLIGHT = 6;$/;"	f	class:PShader
TEXRECT	opengl/Texture.java	/^  protected static final int TEXRECT = 1;$/;"	f	class:Texture
TEXT	core/PConstants.java	/^  static final int TEXT  = Cursor.TEXT_CURSOR;$/;"	f	interface:PConstants
TEXTURE	opengl/PShader.java	/^  static protected final int TEXTURE  = 5;$/;"	f	class:PShader
TEXTURE0	opengl/PGL.java	/^  public static int TEXTURE0;$/;"	f	class:PGL
TEXTURE1	opengl/PGL.java	/^  public static int TEXTURE1;$/;"	f	class:PGL
TEXTURE2	opengl/PGL.java	/^  public static int TEXTURE2;$/;"	f	class:PGL
TEXTURE3	opengl/PGL.java	/^  public static int TEXTURE3;$/;"	f	class:PGL
TEXTURE_2D	opengl/PGL.java	/^  public static int TEXTURE_2D;$/;"	f	class:PGL
TEXTURE_BINDING_2D	opengl/PGL.java	/^  public static int TEXTURE_BINDING_2D;$/;"	f	class:PGL
TEXTURE_BINDING_RECTANGLE	opengl/PGL.java	/^  public static int TEXTURE_BINDING_RECTANGLE;$/;"	f	class:PGL
TEXTURE_CUBE_MAP	opengl/PGL.java	/^  public static int TEXTURE_CUBE_MAP;$/;"	f	class:PGL
TEXTURE_CUBE_MAP_NEGATIVE_X	opengl/PGL.java	/^  public static int TEXTURE_CUBE_MAP_NEGATIVE_X;$/;"	f	class:PGL
TEXTURE_CUBE_MAP_NEGATIVE_Y	opengl/PGL.java	/^  public static int TEXTURE_CUBE_MAP_NEGATIVE_Y;$/;"	f	class:PGL
TEXTURE_CUBE_MAP_NEGATIVE_Z	opengl/PGL.java	/^  public static int TEXTURE_CUBE_MAP_NEGATIVE_Z;$/;"	f	class:PGL
TEXTURE_CUBE_MAP_POSITIVE_X	opengl/PGL.java	/^  public static int TEXTURE_CUBE_MAP_POSITIVE_X;$/;"	f	class:PGL
TEXTURE_CUBE_MAP_POSITIVE_Y	opengl/PGL.java	/^  public static int TEXTURE_CUBE_MAP_POSITIVE_Y;$/;"	f	class:PGL
TEXTURE_CUBE_MAP_POSITIVE_Z	opengl/PGL.java	/^  public static int TEXTURE_CUBE_MAP_POSITIVE_Z;$/;"	f	class:PGL
TEXTURE_MAG_FILTER	opengl/PGL.java	/^  public static int TEXTURE_MAG_FILTER;$/;"	f	class:PGL
TEXTURE_MAX_ANISOTROPY	opengl/PGL.java	/^  public static int TEXTURE_MAX_ANISOTROPY;$/;"	f	class:PGL
TEXTURE_MIN_FILTER	opengl/PGL.java	/^  public static int TEXTURE_MIN_FILTER;$/;"	f	class:PGL
TEXTURE_RECTANGLE	opengl/PGL.java	/^  public static int TEXTURE_RECTANGLE;$/;"	f	class:PGL
TEXTURE_WRAP_R	opengl/PGL.java	/^  public static int TEXTURE_WRAP_R;$/;"	f	class:PGL
TEXTURE_WRAP_S	opengl/PGL.java	/^  public static int TEXTURE_WRAP_S;$/;"	f	class:PGL
TEXTURE_WRAP_T	opengl/PGL.java	/^  public static int TEXTURE_WRAP_T;$/;"	f	class:PGL
TEXUNIT_ERROR	opengl/PGL.java	/^  protected static final String TEXUNIT_ERROR =$/;"	f	class:PGL
THIRD_PI	core/PConstants.java	/^  static final float THIRD_PI = (float) (Math.PI \/ 3.0);$/;"	f	interface:PConstants
THRESHOLD	core/PConstants.java	/^  static final int THRESHOLD = 16;$/;"	f	interface:PConstants
TIFF	core/PConstants.java	/^  static final int TIFF  = 0;$/;"	f	interface:PConstants
TIFF_ERROR	core/PImage.java	/^  static final String TIFF_ERROR =$/;"	f	class:PImage
TIFF_HEADER	core/PImage.java	/^  static byte TIFF_HEADER[] = {$/;"	f	class:PImage
TOO_LONG_STROKE_PATH_ERROR	opengl/PGraphicsOpenGL.java	/^  static final String TOO_LONG_STROKE_PATH_ERROR =$/;"	f	class:PGraphicsOpenGL
TOO_MANY_SMOOTH_CALLS_ERROR	opengl/PGraphicsOpenGL.java	/^  static final String TOO_MANY_SMOOTH_CALLS_ERROR =$/;"	f	class:PGraphicsOpenGL
TOP	core/PConstants.java	/^  static final int TOP = 101;$/;"	f	interface:PConstants
TOUCH	event/Event.java	/^  static public final int TOUCH = 3;$/;"	f	class:Event
TRANSLATE	opengl/PShapeOpenGL.java	/^  static protected final int TRANSLATE = 0;$/;"	f	class:PShapeOpenGL
TRIANGLE	core/PConstants.java	/^  static final int TRIANGLE        = 8;   \/\/ primitive$/;"	f	interface:PConstants
TRIANGLES	core/PConstants.java	/^  static final int TRIANGLES       = 9;   \/\/ vertices$/;"	f	interface:PConstants
TRIANGLES	opengl/PGL.java	/^  public static int TRIANGLES;$/;"	f	class:PGL
TRIANGLE_FAN	core/PConstants.java	/^  static final int TRIANGLE_FAN    = 11;  \/\/ vertices$/;"	f	interface:PConstants
TRIANGLE_FAN	opengl/PGL.java	/^  public static int TRIANGLE_FAN;$/;"	f	class:PGL
TRIANGLE_STRIP	core/PConstants.java	/^  static final int TRIANGLE_STRIP  = 10;  \/\/ vertices$/;"	f	interface:PConstants
TRIANGLE_STRIP	opengl/PGL.java	/^  public static int TRIANGLE_STRIP;$/;"	f	class:PGL
TRILINEAR	opengl/Texture.java	/^  protected static final int TRILINEAR = 5;$/;"	f	class:Texture
TRUE	opengl/PGL.java	/^  public static int TRUE;$/;"	f	class:PGL
TWO_PI	core/PConstants.java	/^  static final float TWO_PI = (float) (2.0 * Math.PI);$/;"	f	interface:PConstants
TX	core/PGraphics.java	/^  static public final int TX = 18; \/\/ transformed xyzw$/;"	f	class:PGraphics
TY	core/PGraphics.java	/^  static public final int TY = 19;$/;"	f	class:PGraphics
TYPE	event/KeyEvent.java	/^  static public final int TYPE = 3;$/;"	f	class:KeyEvent
TZ	core/PGraphics.java	/^  static public final int TZ = 20;$/;"	f	class:PGraphics
Table	data/Table.java	/^  public Table() {$/;"	m	class:Table
Table	data/Table.java	/^  public Table(File file) throws IOException {$/;"	m	class:Table
Table	data/Table.java	/^  public Table(File file, String options) throws IOException {$/;"	m	class:Table
Table	data/Table.java	/^  public Table(InputStream input) throws IOException {$/;"	m	class:Table
Table	data/Table.java	/^  public Table(InputStream input, String options) throws IOException {$/;"	m	class:Table
Table	data/Table.java	/^  public Table(Iterable<TableRow> rows) {$/;"	m	class:Table
Table	data/Table.java	/^  public Table(ResultSet rs) {$/;"	m	class:Table
Table	data/Table.java	/^public class Table {$/;"	c
TableRow	data/TableRow.java	/^public interface TableRow {$/;"	i
TessGeometry	opengl/PGraphicsOpenGL.java	/^    TessGeometry(PGraphicsOpenGL pg, int mode) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
TessGeometry	opengl/PGraphicsOpenGL.java	/^  static protected class TessGeometry {$/;"	c	class:PGraphicsOpenGL
Tessellator	opengl/PGL.java	/^  protected interface Tessellator {$/;"	i	class:PGL
Tessellator	opengl/PGraphicsOpenGL.java	/^    public Tessellator() {$/;"	m	class:PGraphicsOpenGL.Tessellator
Tessellator	opengl/PGraphicsOpenGL.java	/^  static protected class Tessellator {$/;"	c	class:PGraphicsOpenGL
Tessellator	opengl/PJOGL.java	/^    public Tessellator(TessellatorCallback callback) {$/;"	m	class:PJOGL.Tessellator
Tessellator	opengl/PJOGL.java	/^  protected class Tessellator implements PGL.Tessellator {$/;"	c	class:PJOGL
TessellatorCallback	opengl/PGL.java	/^  protected interface TessellatorCallback  {$/;"	i	class:PGL
TessellatorCallback	opengl/PGraphicsOpenGL.java	/^    protected class TessellatorCallback implements PGL.TessellatorCallback {$/;"	c	class:PGraphicsOpenGL.Tessellator
TexCache	opengl/PGraphicsOpenGL.java	/^    TexCache() {$/;"	m	class:PGraphicsOpenGL.TexCache
TexCache	opengl/PGraphicsOpenGL.java	/^  static protected class TexCache {$/;"	c	class:PGraphicsOpenGL
Texture	opengl/Texture.java	/^  public Texture() {$/;"	m	class:Texture
Texture	opengl/Texture.java	/^  public Texture(int width, int height) {$/;"	m	class:Texture
Texture	opengl/Texture.java	/^  public Texture(int width, int height, Object params) {$/;"	m	class:Texture
Texture	opengl/Texture.java	/^public class Texture implements PConstants {$/;"	c
TextureInfo	opengl/FontTexture.java	/^    TextureInfo(int tidx, int cropX, int cropY, int cropW, int cropH,$/;"	m	class:FontTexture.TextureInfo
TextureInfo	opengl/FontTexture.java	/^  class TextureInfo {$/;"	c	class:FontTexture
TouchEvent	event/TouchEvent.java	/^  public TouchEvent(Object nativeObject, long millis, int action, int modifiers) {$/;"	m	class:TouchEvent
TouchEvent	event/TouchEvent.java	/^public class TouchEvent extends Event {$/;"	c
Triangle	opengl/PGraphicsOpenGL.java	/^    Triangle(int i0, int i1, int i2, PImage tex, float dist) {$/;"	m	class:PGraphicsOpenGL.Triangle
Triangle	opengl/PGraphicsOpenGL.java	/^  class Triangle {$/;"	c	class:PGraphicsOpenGL
U	core/PGraphics.java	/^  static public final int U = 7; \/\/ texture$/;"	f	class:PGraphics
UNKNOWN_SHADER_KIND_ERROR	opengl/PGraphicsOpenGL.java	/^  static final String UNKNOWN_SHADER_KIND_ERROR =$/;"	f	class:PGraphicsOpenGL
UNPACK_ALIGNMENT	opengl/PGL.java	/^  public static int UNPACK_ALIGNMENT;$/;"	f	class:PGL
UNSIGNED_BYTE	opengl/PGL.java	/^  public static int UNSIGNED_BYTE;$/;"	f	class:PGL
UNSIGNED_INT	opengl/PGL.java	/^  public static int UNSIGNED_INT;$/;"	f	class:PGL
UNSIGNED_SHORT	opengl/PGL.java	/^  public static int UNSIGNED_SHORT;$/;"	f	class:PGL
UNSIGNED_SHORT_4_4_4_4	opengl/PGL.java	/^  public static int UNSIGNED_SHORT_4_4_4_4;$/;"	f	class:PGL
UNSIGNED_SHORT_5_5_5_1	opengl/PGL.java	/^  public static int UNSIGNED_SHORT_5_5_5_1;$/;"	f	class:PGL
UNSIGNED_SHORT_5_6_5	opengl/PGL.java	/^  public static int UNSIGNED_SHORT_5_6_5;$/;"	f	class:PGL
UNSUPPORTED_GLPROF_ERROR	opengl/PGL.java	/^  protected static final String UNSUPPORTED_GLPROF_ERROR =$/;"	f	class:PGL
UNSUPPORTED_SHAPE_FORMAT_ERROR	opengl/PGraphicsOpenGL.java	/^  static final String UNSUPPORTED_SHAPE_FORMAT_ERROR =$/;"	f	class:PGraphicsOpenGL
UNSUPPORTED_SMOOTH_ERROR	opengl/PGraphicsOpenGL.java	/^  static final String UNSUPPORTED_SMOOTH_ERROR =$/;"	f	class:PGraphicsOpenGL
UNSUPPORTED_SMOOTH_LEVEL_ERROR	opengl/PGraphicsOpenGL.java	/^  static final String UNSUPPORTED_SMOOTH_LEVEL_ERROR =$/;"	f	class:PGraphicsOpenGL
UP	core/PConstants.java	/^  static final int UP        = KeyEvent.VK_UP;$/;"	f	interface:PConstants
USE_DIRECT_BUFFERS	opengl/PGL.java	/^  protected static boolean USE_DIRECT_BUFFERS = true;$/;"	f	class:PGL
USE_FBOLAYER_BY_DEFAULT	opengl/PGL.java	/^  protected static boolean USE_FBOLAYER_BY_DEFAULT = false;$/;"	f	class:PGL
USE_JOGL_FBOLAYER	opengl/PJOGL.java	/^  protected static boolean USE_JOGL_FBOLAYER;$/;"	f	class:PJOGL
UniformValue	opengl/PShader.java	/^    UniformValue(int type, Object value) {$/;"	m	class:PShader.UniformValue
UniformValue	opengl/PShader.java	/^  protected class UniformValue {$/;"	c	class:PShader
V	core/PGraphics.java	/^  static public final int V = 8;$/;"	f	class:PGraphics
VALIDATE_STATUS	opengl/PGL.java	/^  public static int VALIDATE_STATUS;$/;"	f	class:PGL
VENDOR	opengl/PGL.java	/^  public static int VENDOR;$/;"	f	class:PGL
VERSION	opengl/PGL.java	/^  public static int VERSION;$/;"	f	class:PGL
VERTEX	core/PConstants.java	/^  static public final int VERTEX = 0;$/;"	f	interface:PConstants
VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	opengl/PGL.java	/^  public static int VERTEX_ATTRIB_ARRAY_BUFFER_BINDING;$/;"	f	class:PGL
VERTEX_ATTRIB_ARRAY_ENABLED	opengl/PGL.java	/^  public static int VERTEX_ATTRIB_ARRAY_ENABLED;$/;"	f	class:PGL
VERTEX_ATTRIB_ARRAY_NORMALIZED	opengl/PGL.java	/^  public static int VERTEX_ATTRIB_ARRAY_NORMALIZED;$/;"	f	class:PGL
VERTEX_ATTRIB_ARRAY_POINTER	opengl/PGL.java	/^  public static int VERTEX_ATTRIB_ARRAY_POINTER;$/;"	f	class:PGL
VERTEX_ATTRIB_ARRAY_SIZE	opengl/PGL.java	/^  public static int VERTEX_ATTRIB_ARRAY_SIZE;$/;"	f	class:PGL
VERTEX_ATTRIB_ARRAY_STRIDE	opengl/PGL.java	/^  public static int VERTEX_ATTRIB_ARRAY_STRIDE;$/;"	f	class:PGL
VERTEX_ATTRIB_ARRAY_TYPE	opengl/PGL.java	/^  public static int VERTEX_ATTRIB_ARRAY_TYPE;$/;"	f	class:PGL
VERTEX_FIELD_COUNT	core/PGraphics.java	/^  static public final int VERTEX_FIELD_COUNT = 37;$/;"	f	class:PGraphics
VERTEX_SHADER	opengl/PGL.java	/^  public static int VERTEX_SHADER;$/;"	f	class:PGL
VIEWPORT	opengl/PGL.java	/^  public static int VIEWPORT;$/;"	f	class:PGL
VW	core/PGraphics.java	/^  static public final int VW = 24;$/;"	f	class:PGraphics
VX	core/PGraphics.java	/^  static public final int VX = 21; \/\/ view space coords$/;"	f	class:PGraphics
VY	core/PGraphics.java	/^  static public final int VY = 22;$/;"	f	class:PGraphics
VZ	core/PGraphics.java	/^  static public final int VZ = 23;$/;"	f	class:PGraphics
WAIT	core/PConstants.java	/^  static final int WAIT  = Cursor.WAIT_CURSOR;$/;"	f	interface:PConstants
WHEEL	event/MouseEvent.java	/^  static public final int WHEEL = 8;$/;"	f	class:MouseEvent
WHITESPACE	core/PConstants.java	/^  static final String WHITESPACE = " \\t\\n\\r\\f\\u00A0";$/;"	f	interface:PConstants
WIKI	opengl/PGL.java	/^  protected static final String WIKI =$/;"	f	class:PGL
WINDOWS	core/PConstants.java	/^  static final int WINDOWS = 1;$/;"	f	interface:PConstants
WINDOW_TOOLKIT	opengl/PJOGL.java	/^  protected static int WINDOW_TOOLKIT;$/;"	f	class:PJOGL
WIND_EVEN_ODD	opengl/LinePath.java	/^  public static final int WIND_EVEN_ODD       = 0;$/;"	f	class:LinePath
WIND_NON_ZERO	opengl/LinePath.java	/^  public static final int WIND_NON_ZERO       = 1;$/;"	f	class:LinePath
WRITE_ONLY	opengl/PGL.java	/^  public static int WRITE_ONLY;$/;"	f	class:PGL
WRONG_SHADER_TYPE_ERROR	opengl/PGraphicsOpenGL.java	/^  static final String WRONG_SHADER_TYPE_ERROR =$/;"	f	class:PGraphicsOpenGL
X	core/PConstants.java	/^  static public final int X = 0;$/;"	f	interface:PConstants
XML	data/XML.java	/^  protected XML() { }$/;"	m	class:XML
XML	data/XML.java	/^  protected XML(XML parent, Node node) {$/;"	m	class:XML
XML	data/XML.java	/^  public XML(File file) throws IOException, ParserConfigurationException, SAXException {$/;"	m	class:XML
XML	data/XML.java	/^  public XML(File file, String options) throws IOException, ParserConfigurationException, SAXException {$/;"	m	class:XML
XML	data/XML.java	/^  public XML(InputStream input) throws IOException, ParserConfigurationException, SAXException {$/;"	m	class:XML
XML	data/XML.java	/^  public XML(InputStream input, String options) throws IOException, ParserConfigurationException, SAXException {$/;"	m	class:XML
XML	data/XML.java	/^  public XML(Reader reader) throws IOException, ParserConfigurationException, SAXException {$/;"	m	class:XML
XML	data/XML.java	/^  public XML(String name) {$/;"	m	class:XML
XML	data/XML.java	/^  public XML(final Reader reader, String options) throws IOException, ParserConfigurationException, SAXException {$/;"	m	class:XML
XML	data/XML.java	/^public class XML implements Serializable {$/;"	c
Y	core/PConstants.java	/^  static public final int Y = 1;$/;"	f	interface:PConstants
Z	core/PConstants.java	/^  static public final int Z = 2;$/;"	f	interface:PConstants
ZERO	opengl/PGL.java	/^  public static int ZERO;$/;"	f	class:PGL
a	core/PImage.java	/^  private int r, g, b, a;$/;"	f	class:PImage	file:
abs	core/PApplet.java	/^  static public final float abs(float n) {$/;"	m	class:PApplet
abs	core/PApplet.java	/^  static public final int abs(int n) {$/;"	m	class:PApplet
abs	core/PMatrix2D.java	/^  static private final float abs(float a) {$/;"	m	class:PMatrix2D	file:
abs	core/PMatrix3D.java	/^  static private final float abs(float a) {$/;"	m	class:PMatrix3D	file:
accessLightAttribs	opengl/PShader.java	/^  protected boolean accessLightAttribs() {$/;"	m	class:PShader
accessNormals	opengl/PShader.java	/^  protected boolean accessNormals() {$/;"	m	class:PShader
accessTexCoords	opengl/PShader.java	/^  protected boolean accessTexCoords() {$/;"	m	class:PShader
accurate2DStrokes	opengl/PGraphicsOpenGL.java	/^    boolean accurate2DStrokes;$/;"	f	class:PGraphicsOpenGL.Tessellator
acos	core/PApplet.java	/^  static public final float acos(float value) {$/;"	m	class:PApplet
action	event/Event.java	/^  protected int action;$/;"	f	class:Event
activeTexUnit	opengl/PGL.java	/^  protected static int activeTexUnit = 0;$/;"	f	class:PGL
activeTexture	opengl/PGL.java	/^  public void activeTexture(int texture) {$/;"	m	class:PGL
activeTextureImpl	opengl/PGL.java	/^  protected abstract void activeTextureImpl(int texture);$/;"	m	class:PGL
activeTextureImpl	opengl/PJOGL.java	/^  protected void activeTextureImpl(int texture) {$/;"	m	class:PJOGL
add	core/PApplet.java	/^    synchronized void add(Event e) {$/;"	m	class:PApplet.InternalEventQueue
add	core/PApplet.java	/^    void add(Object object, Method method) {$/;"	m	class:PApplet.RegisteredMethods
add	core/PVector.java	/^  public void add(PVector v) {$/;"	m	class:PVector
add	core/PVector.java	/^  public void add(float x, float y, float z) {$/;"	m	class:PVector
add	core/PVector.java	/^  static public PVector add(PVector v1, PVector v2) {$/;"	m	class:PVector
add	core/PVector.java	/^  static public PVector add(PVector v1, PVector v2, PVector target) {$/;"	m	class:PVector
add	data/FloatDict.java	/^  public void add(String key, float amount) {$/;"	m	class:FloatDict
add	data/FloatList.java	/^  public void add(int index, float amount) {$/;"	m	class:FloatList
add	data/IntDict.java	/^  public void add(String key, int amount) {$/;"	m	class:IntDict
add	data/IntList.java	/^  public void add(int index, int amount) {$/;"	m	class:IntList
addAllGlyphsToTexture	opengl/FontTexture.java	/^  public void addAllGlyphsToTexture(PGraphicsOpenGL pg, PFont font) {$/;"	m	class:FontTexture
addArc	opengl/PGraphicsOpenGL.java	/^    void addArc(float x, float y, float w, float h,$/;"	m	class:PGraphicsOpenGL.InGeometry
addBevel3D	opengl/PGraphicsOpenGL.java	/^    int addBevel3D(int i0, int index, short[] lastInd, short firstInd,$/;"	m	class:PGraphicsOpenGL.Tessellator
addBezierVertex	opengl/PGraphicsOpenGL.java	/^    public void addBezierVertex(float x2, float y2, float z2,$/;"	m	class:PGraphicsOpenGL.InGeometry
addBezierVertex	opengl/PGraphicsOpenGL.java	/^    void addBezierVertex(int i) {$/;"	m	class:PGraphicsOpenGL.Tessellator
addBox	opengl/PGraphicsOpenGL.java	/^    void addBox(float w, float h, float d,$/;"	m	class:PGraphicsOpenGL.InGeometry
addChild	core/PShape.java	/^  public void addChild(PShape who) {$/;"	m	class:PShape
addChild	core/PShape.java	/^  public void addChild(PShape who, int idx) {$/;"	m	class:PShape
addChild	data/XML.java	/^  public XML addChild(String tag) {$/;"	m	class:XML
addChild	data/XML.java	/^  public XML addChild(XML child) {$/;"	m	class:XML
addChild	opengl/PShapeOpenGL.java	/^  public void addChild(PShape who) {$/;"	m	class:PShapeOpenGL
addChild	opengl/PShapeOpenGL.java	/^  public void addChild(PShape who, int idx) {$/;"	m	class:PShapeOpenGL
addChildren	core/PShapeOBJ.java	/^  protected void addChildren(ArrayList<OBJFace> faces,$/;"	m	class:PShapeOBJ
addColumn	data/Table.java	/^  public void addColumn() {$/;"	m	class:Table
addColumn	data/Table.java	/^  public void addColumn(String title) {$/;"	m	class:Table
addColumn	data/Table.java	/^  public void addColumn(String title, int type) {$/;"	m	class:Table
addCurveVertex	opengl/PGraphicsOpenGL.java	/^    public void addCurveVertex(float x, float y, float z, boolean brk) {$/;"	m	class:PGraphicsOpenGL.InGeometry
addCurveVertex	opengl/PGraphicsOpenGL.java	/^    void addCurveVertex(int i) {$/;"	m	class:PGraphicsOpenGL.Tessellator
addCurveVertexSegment	opengl/PGraphicsOpenGL.java	/^    void addCurveVertexSegment(int i, float x1, float y1, float z1,$/;"	m	class:PGraphicsOpenGL.Tessellator
addDupIndex	opengl/PGraphicsOpenGL.java	/^    void addDupIndex(int idx) {$/;"	m	class:PGraphicsOpenGL.Tessellator
addEdge	opengl/PGraphicsOpenGL.java	/^    int addEdge(int i, int j, boolean start, boolean end) {$/;"	m	class:PGraphicsOpenGL.InGeometry
addEllipse	opengl/PGraphicsOpenGL.java	/^    void addEllipse(float x, float y, float w, float h,$/;"	m	class:PGraphicsOpenGL.InGeometry
addGlyph	core/PFont.java	/^  protected void addGlyph(char c) {$/;"	m	class:PFont
addIndex	opengl/PGraphicsOpenGL.java	/^      protected void addIndex(int tessIdx) {$/;"	m	class:PGraphicsOpenGL.Tessellator.TessellatorCallback
addLine	opengl/PGraphicsOpenGL.java	/^    void addLine(float x1, float y1, float z1,$/;"	m	class:PGraphicsOpenGL.InGeometry
addLineSegment2D	opengl/PGraphicsOpenGL.java	/^    int addLineSegment2D(int i0, int i1, int index,$/;"	m	class:PGraphicsOpenGL.Tessellator
addLineSegment3D	opengl/PGraphicsOpenGL.java	/^    int addLineSegment3D(int i0, int i1, int index, short[] lastInd,$/;"	m	class:PGraphicsOpenGL.Tessellator
addListeners	core/PApplet.java	/^  public void addListeners(Component comp) {$/;"	m	class:PApplet
addName	core/PShape.java	/^  public void addName(String nom, PShape shape) {$/;"	m	class:PShape
addNew	opengl/PGraphicsOpenGL.java	/^    int addNew() {$/;"	m	class:PGraphicsOpenGL.IndexCache
addNew	opengl/PGraphicsOpenGL.java	/^    int addNew(int index) {$/;"	m	class:PGraphicsOpenGL.IndexCache
addPoint	opengl/PGraphicsOpenGL.java	/^    void addPoint(float x, float y, float z, boolean fill, boolean stroke) {$/;"	m	class:PGraphicsOpenGL.InGeometry
addPolyVertex	opengl/PGraphicsOpenGL.java	/^    void addPolyVertex(InGeometry in, int i, boolean clampXY) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
addPolyVertex	opengl/PGraphicsOpenGL.java	/^    void addPolyVertex(float x, float y, float z,$/;"	m	class:PGraphicsOpenGL.TessGeometry
addPolyVertices	opengl/PGraphicsOpenGL.java	/^    void addPolyVertices(InGeometry in, boolean clampXY) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
addPolyVertices	opengl/PGraphicsOpenGL.java	/^    void addPolyVertices(InGeometry in, int i0, int i1, boolean clampXY) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
addQuad	opengl/PGraphicsOpenGL.java	/^    void addQuad(float x1, float y1, float z1,$/;"	m	class:PGraphicsOpenGL.InGeometry
addQuadStripEdges	opengl/PGraphicsOpenGL.java	/^    void addQuadStripEdges() {$/;"	m	class:PGraphicsOpenGL.InGeometry
addQuadraticVertex	opengl/PGraphicsOpenGL.java	/^    public void addQuadraticVertex(float cx, float cy, float cz,$/;"	m	class:PGraphicsOpenGL.InGeometry
addQuadraticVertex	opengl/PGraphicsOpenGL.java	/^    void addQuadraticVertex(int i) {$/;"	m	class:PGraphicsOpenGL.Tessellator
addQuadsEdges	opengl/PGraphicsOpenGL.java	/^    void addQuadsEdges() {$/;"	m	class:PGraphicsOpenGL.InGeometry
addRect	opengl/PGraphicsOpenGL.java	/^    void addRect(float a, float b, float c, float d,$/;"	m	class:PGraphicsOpenGL.InGeometry
addRow	data/Table.java	/^  public TableRow addRow() {$/;"	m	class:Table
addRow	data/Table.java	/^  public TableRow addRow(Object[] columnData) {$/;"	m	class:Table
addRow	data/Table.java	/^  public TableRow addRow(TableRow source) {$/;"	m	class:Table
addSphere	opengl/PGraphicsOpenGL.java	/^    int[] addSphere(float r, int detailU, int detailV,$/;"	m	class:PGraphicsOpenGL.InGeometry
addStrokeVertex	opengl/PGraphicsOpenGL.java	/^    void addStrokeVertex(float x, float y, float z, int c, float w) {$/;"	m	class:PGraphicsOpenGL.Tessellator
addTexture	opengl/FontTexture.java	/^  public boolean addTexture(PGraphicsOpenGL pg) {$/;"	m	class:FontTexture
addTexture	opengl/PGraphicsOpenGL.java	/^    void addTexture(PImage img, int firsti, int firstb, int lasti, int lastb) {$/;"	m	class:PGraphicsOpenGL.TexCache
addTexture	opengl/PGraphicsOpenGL.java	/^  protected Texture addTexture(PImage img) {$/;"	m	class:PGraphicsOpenGL
addTexture	opengl/PGraphicsOpenGL.java	/^  protected Texture addTexture(PImage img, Texture.Parameters params) {$/;"	m	class:PGraphicsOpenGL
addTexture	opengl/PShapeOpenGL.java	/^  protected void addTexture(PImage tex) {$/;"	m	class:PShapeOpenGL
addToTexture	opengl/FontTexture.java	/^  protected void addToTexture(PGraphicsOpenGL pg, int idx, PFont.Glyph glyph) {$/;"	m	class:FontTexture
addToTexture	opengl/FontTexture.java	/^  public TextureInfo addToTexture(PGraphicsOpenGL pg, PFont.Glyph glyph) {$/;"	m	class:FontTexture
addTriangle	opengl/PGraphicsOpenGL.java	/^    void addTriangle(float x1, float y1, float z1,$/;"	m	class:PGraphicsOpenGL.InGeometry
addTriangleFanEdges	opengl/PGraphicsOpenGL.java	/^    void addTriangleFanEdges() {$/;"	m	class:PGraphicsOpenGL.InGeometry
addTriangleStripEdges	opengl/PGraphicsOpenGL.java	/^    void addTriangleStripEdges() {$/;"	m	class:PGraphicsOpenGL.InGeometry
addTrianglesEdges	opengl/PGraphicsOpenGL.java	/^    void addTrianglesEdges() {$/;"	m	class:PGraphicsOpenGL.InGeometry
addVertex	opengl/PGL.java	/^    public void addVertex(double[] v);$/;"	m	interface:PGL.Tessellator
addVertex	opengl/PGraphicsOpenGL.java	/^    int addVertex(float x, float y, boolean brk) {$/;"	m	class:PGraphicsOpenGL.InGeometry
addVertex	opengl/PGraphicsOpenGL.java	/^    int addVertex(float x, float y, float z, boolean brk) {$/;"	m	class:PGraphicsOpenGL.InGeometry
addVertex	opengl/PGraphicsOpenGL.java	/^    int addVertex(float x, float y, float z,$/;"	m	class:PGraphicsOpenGL.InGeometry
addVertex	opengl/PGraphicsOpenGL.java	/^    int addVertex(float x, float y,$/;"	m	class:PGraphicsOpenGL.InGeometry
addVertex	opengl/PGraphicsOpenGL.java	/^    void addVertex(int i) {$/;"	m	class:PGraphicsOpenGL.Tessellator
addVertex	opengl/PJOGL.java	/^    public void addVertex(double[] v) {$/;"	m	class:PJOGL.Tessellator
aggregate	opengl/PShapeOpenGL.java	/^  protected void aggregate() {$/;"	m	class:PShapeOpenGL
aggregateImpl	opengl/PShapeOpenGL.java	/^  protected void aggregateImpl() {$/;"	m	class:PShapeOpenGL
allocCount	data/Table.java	/^  protected int allocCount;$/;"	f	class:Table
allocate	core/PGraphics.java	/^  protected void allocate() { }$/;"	m	class:PGraphics
allocate	core/PGraphicsJava2D.java	/^  protected void allocate() {$/;"	m	class:PGraphicsJava2D
allocate	core/PGraphicsRetina2D.java	/^  protected void allocate() {$/;"	m	class:PGraphicsRetina2D
allocate	opengl/FontTexture.java	/^  protected void allocate() {$/;"	m	class:FontTexture
allocate	opengl/FrameBuffer.java	/^  protected void allocate() {$/;"	m	class:FrameBuffer
allocate	opengl/PGraphicsOpenGL.java	/^    void allocate() {$/;"	m	class:PGraphicsOpenGL.InGeometry
allocate	opengl/PGraphicsOpenGL.java	/^    void allocate() {$/;"	m	class:PGraphicsOpenGL.IndexCache
allocate	opengl/PGraphicsOpenGL.java	/^    void allocate() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
allocate	opengl/PGraphicsOpenGL.java	/^    void allocate() {$/;"	m	class:PGraphicsOpenGL.TexCache
allocate	opengl/PGraphicsOpenGL.java	/^  protected void allocate() {$/;"	m	class:PGraphicsOpenGL
allocate	opengl/Texture.java	/^  protected void allocate() {$/;"	m	class:Texture
allocateByteBuffer	opengl/PGL.java	/^  protected static ByteBuffer allocateByteBuffer(byte[] arr) {$/;"	m	class:PGL
allocateByteBuffer	opengl/PGL.java	/^  protected static ByteBuffer allocateByteBuffer(int size) {$/;"	m	class:PGL
allocateDirectByteBuffer	opengl/PGL.java	/^  protected static ByteBuffer allocateDirectByteBuffer(int size) {$/;"	m	class:PGL
allocateDirectFloatBuffer	opengl/PGL.java	/^  protected static FloatBuffer allocateDirectFloatBuffer(int size) {$/;"	m	class:PGL
allocateDirectIntBuffer	opengl/PGL.java	/^  protected static IntBuffer allocateDirectIntBuffer(int size) {$/;"	m	class:PGL
allocateDirectShortBuffer	opengl/PGL.java	/^  protected static ShortBuffer allocateDirectShortBuffer(int size) {$/;"	m	class:PGL
allocateFloatBuffer	opengl/PGL.java	/^  protected static FloatBuffer allocateFloatBuffer(float[] arr) {$/;"	m	class:PGL
allocateFloatBuffer	opengl/PGL.java	/^  protected static FloatBuffer allocateFloatBuffer(int size) {$/;"	m	class:PGL
allocateIntBuffer	opengl/PGL.java	/^  protected static IntBuffer allocateIntBuffer(int size) {$/;"	m	class:PGL
allocateIntBuffer	opengl/PGL.java	/^  protected static IntBuffer allocateIntBuffer(int[] arr) {$/;"	m	class:PGL
allocatePixels	opengl/PGraphicsOpenGL.java	/^  protected void allocatePixels() {$/;"	m	class:PGraphicsOpenGL
allocateShortBuffer	opengl/PGL.java	/^  protected static ShortBuffer allocateShortBuffer(int size) {$/;"	m	class:PGL
allocateShortBuffer	opengl/PGL.java	/^  protected static ShortBuffer allocateShortBuffer(short[] arr) {$/;"	m	class:PGL
alpha	core/PApplet.java	/^  public final float alpha(int rgb) {$/;"	m	class:PApplet
alpha	core/PGraphics.java	/^  public final float alpha(int rgb) {$/;"	m	class:PGraphics
alphaFunc	opengl/PGL.java	/^  public abstract void alphaFunc(int func, float ref);$/;"	m	class:PGL
alphaFunc	opengl/PJOGL.java	/^  public void alphaFunc(int func, float ref) {$/;"	m	class:PJOGL
ambient	core/PApplet.java	/^  public void ambient(float gray) {$/;"	m	class:PApplet
ambient	core/PApplet.java	/^  public void ambient(float v1, float v2, float v3) {$/;"	m	class:PApplet
ambient	core/PApplet.java	/^  public void ambient(int rgb) {$/;"	m	class:PApplet
ambient	core/PGraphics.java	/^  public void ambient(float gray) {$/;"	m	class:PGraphics
ambient	core/PGraphics.java	/^  public void ambient(float v1, float v2, float v3) {$/;"	m	class:PGraphics
ambient	core/PGraphics.java	/^  public void ambient(int rgb) {$/;"	m	class:PGraphics
ambient	core/PShape.java	/^  public void ambient(float gray) {$/;"	m	class:PShape
ambient	core/PShape.java	/^  public void ambient(float x, float y, float z) {$/;"	m	class:PShape
ambient	core/PShape.java	/^  public void ambient(int rgb) {$/;"	m	class:PShape
ambient	opengl/PGraphicsOpenGL.java	/^    int[] ambient;$/;"	f	class:PGraphicsOpenGL.InGeometry
ambientB	core/PGraphics.java	/^  public float ambientR, ambientG, ambientB;$/;"	f	class:PGraphics
ambientB	core/PStyle.java	/^  public float ambientR, ambientG, ambientB;$/;"	f	class:PStyle
ambientColor	core/PGraphics.java	/^  public int ambientColor;$/;"	f	class:PGraphics
ambientColor	core/PShape.java	/^  protected int ambientColor;$/;"	f	class:PShape
ambientColor	opengl/PGraphicsOpenGL.java	/^    int ambientColor;$/;"	f	class:PGraphicsOpenGL.InGeometry
ambientFromCalc	core/PGraphics.java	/^  protected void ambientFromCalc() {$/;"	m	class:PGraphics
ambientG	core/PGraphics.java	/^  public float ambientR, ambientG, ambientB;$/;"	f	class:PGraphics
ambientG	core/PStyle.java	/^  public float ambientR, ambientG, ambientB;$/;"	f	class:PStyle
ambientLight	core/PApplet.java	/^  public void ambientLight(float v1, float v2, float v3) {$/;"	m	class:PApplet
ambientLight	core/PApplet.java	/^  public void ambientLight(float v1, float v2, float v3,$/;"	m	class:PApplet
ambientLight	core/PGraphics.java	/^  public void ambientLight(float v1, float v2, float v3) {$/;"	m	class:PGraphics
ambientLight	core/PGraphics.java	/^  public void ambientLight(float v1, float v2, float v3,$/;"	m	class:PGraphics
ambientLight	opengl/PGraphics2D.java	/^  public void ambientLight(float red, float green, float blue) {$/;"	m	class:PGraphics2D
ambientLight	opengl/PGraphics2D.java	/^  public void ambientLight(float red, float green, float blue,$/;"	m	class:PGraphics2D
ambientLight	opengl/PGraphicsOpenGL.java	/^  public void ambientLight(float r, float g, float b) {$/;"	m	class:PGraphicsOpenGL
ambientLight	opengl/PGraphicsOpenGL.java	/^  public void ambientLight(float r, float g, float b,$/;"	m	class:PGraphicsOpenGL
ambientLoc	opengl/PShader.java	/^  protected int ambientLoc;$/;"	f	class:PShader
ambientR	core/PGraphics.java	/^  public float ambientR, ambientG, ambientB;$/;"	f	class:PGraphics
ambientR	core/PStyle.java	/^  public float ambientR, ambientG, ambientB;$/;"	f	class:PStyle
angleBetween	core/PVector.java	/^  static public float angleBetween(PVector v1, PVector v2) {$/;"	m	class:PVector
anisoSamplingSupported	opengl/PGraphicsOpenGL.java	/^  static public boolean anisoSamplingSupported;$/;"	f	class:PGraphicsOpenGL
append	core/PApplet.java	/^  static public Object append(Object array, Object value) {$/;"	m	class:PApplet
append	core/PApplet.java	/^  static public String[] append(String array[], String value) {$/;"	m	class:PApplet
append	core/PApplet.java	/^  static public byte[] append(byte array[], byte value) {$/;"	m	class:PApplet
append	core/PApplet.java	/^  static public char[] append(char array[], char value) {$/;"	m	class:PApplet
append	core/PApplet.java	/^  static public float[] append(float array[], float value) {$/;"	m	class:PApplet
append	core/PApplet.java	/^  static public int[] append(int array[], int value) {$/;"	m	class:PApplet
append	data/FloatList.java	/^  public void append(FloatList list) {$/;"	m	class:FloatList
append	data/FloatList.java	/^  public void append(float value) {$/;"	m	class:FloatList
append	data/FloatList.java	/^  public void append(float[] values) {$/;"	m	class:FloatList
append	data/IntList.java	/^  public void append(IntList list) {$/;"	m	class:IntList
append	data/IntList.java	/^  public void append(int value) {$/;"	m	class:IntList
append	data/IntList.java	/^  public void append(int[] values) {$/;"	m	class:IntList
append	data/JSONArray.java	/^  protected JSONArray append(Object value) {$/;"	m	class:JSONArray
append	data/JSONArray.java	/^  public JSONArray append(JSONArray value) {$/;"	m	class:JSONArray
append	data/JSONArray.java	/^  public JSONArray append(JSONObject value) {$/;"	m	class:JSONArray
append	data/JSONArray.java	/^  public JSONArray append(String value) {$/;"	m	class:JSONArray
append	data/JSONArray.java	/^  public JSONArray append(boolean value) {$/;"	m	class:JSONArray
append	data/JSONArray.java	/^  public JSONArray append(double value) {$/;"	m	class:JSONArray
append	data/JSONArray.java	/^  public JSONArray append(float value) {$/;"	m	class:JSONArray
append	data/JSONArray.java	/^  public JSONArray append(int value) {$/;"	m	class:JSONArray
append	data/JSONArray.java	/^  public JSONArray append(long value) {$/;"	m	class:JSONArray
append	data/StringList.java	/^  public void append(String value) {$/;"	m	class:StringList
append	data/StringList.java	/^  public void append(StringList list) {$/;"	m	class:StringList
append	data/StringList.java	/^  public void append(String[] values) {$/;"	m	class:StringList
appendChild	data/XML.java	/^  protected XML appendChild(Node newNode) {$/;"	m	class:XML
apply	core/PMatrix.java	/^  public void apply(PMatrix source);$/;"	m	interface:PMatrix
apply	core/PMatrix.java	/^  public void apply(PMatrix2D source);$/;"	m	interface:PMatrix
apply	core/PMatrix.java	/^  public void apply(PMatrix3D source);$/;"	m	interface:PMatrix
apply	core/PMatrix.java	/^  public void apply(float n00, float n01, float n02, $/;"	m	interface:PMatrix
apply	core/PMatrix.java	/^  public void apply(float n00, float n01, float n02, float n03,$/;"	m	interface:PMatrix
apply	core/PMatrix2D.java	/^  public void apply(PMatrix source) {$/;"	m	class:PMatrix2D
apply	core/PMatrix2D.java	/^  public void apply(PMatrix2D source) {$/;"	m	class:PMatrix2D
apply	core/PMatrix2D.java	/^  public void apply(PMatrix3D source) {$/;"	m	class:PMatrix2D
apply	core/PMatrix2D.java	/^  public void apply(float n00, float n01, float n02, float n03,$/;"	m	class:PMatrix2D
apply	core/PMatrix2D.java	/^  public void apply(float n00, float n01, float n02,$/;"	m	class:PMatrix2D
apply	core/PMatrix3D.java	/^  public void apply(PMatrix source) {$/;"	m	class:PMatrix3D
apply	core/PMatrix3D.java	/^  public void apply(PMatrix2D source) {$/;"	m	class:PMatrix3D
apply	core/PMatrix3D.java	/^  public void apply(PMatrix3D source) {$/;"	m	class:PMatrix3D
apply	core/PMatrix3D.java	/^  public void apply(float n00, float n01, float n02, float n03,$/;"	m	class:PMatrix3D
apply	core/PMatrix3D.java	/^  public void apply(float n00, float n01, float n02,$/;"	m	class:PMatrix3D
applyMatrix	core/PApplet.java	/^  public void applyMatrix(PMatrix source) {$/;"	m	class:PApplet
applyMatrix	core/PApplet.java	/^  public void applyMatrix(PMatrix2D source) {$/;"	m	class:PApplet
applyMatrix	core/PApplet.java	/^  public void applyMatrix(PMatrix3D source) {$/;"	m	class:PApplet
applyMatrix	core/PApplet.java	/^  public void applyMatrix(float n00, float n01, float n02, float n03,$/;"	m	class:PApplet
applyMatrix	core/PApplet.java	/^  public void applyMatrix(float n00, float n01, float n02,$/;"	m	class:PApplet
applyMatrix	core/PGraphics.java	/^  public void applyMatrix(PMatrix source) {$/;"	m	class:PGraphics
applyMatrix	core/PGraphics.java	/^  public void applyMatrix(PMatrix2D source) {$/;"	m	class:PGraphics
applyMatrix	core/PGraphics.java	/^  public void applyMatrix(PMatrix3D source) {$/;"	m	class:PGraphics
applyMatrix	core/PGraphics.java	/^  public void applyMatrix(float n00, float n01, float n02, float n03,$/;"	m	class:PGraphics
applyMatrix	core/PGraphics.java	/^  public void applyMatrix(float n00, float n01, float n02,$/;"	m	class:PGraphics
applyMatrix	core/PGraphicsJava2D.java	/^  public void applyMatrix(float n00, float n01, float n02, float n03,$/;"	m	class:PGraphicsJava2D
applyMatrix	core/PGraphicsJava2D.java	/^  public void applyMatrix(float n00, float n01, float n02,$/;"	m	class:PGraphicsJava2D
applyMatrix	core/PShape.java	/^  public void applyMatrix(PMatrix source) {$/;"	m	class:PShape
applyMatrix	core/PShape.java	/^  public void applyMatrix(PMatrix2D source) {$/;"	m	class:PShape
applyMatrix	core/PShape.java	/^  public void applyMatrix(PMatrix3D source) {$/;"	m	class:PShape
applyMatrix	core/PShape.java	/^  public void applyMatrix(float n00, float n01, float n02, float n03,$/;"	m	class:PShape
applyMatrix	core/PShape.java	/^  public void applyMatrix(float n00, float n01, float n02,$/;"	m	class:PShape
applyMatrix	opengl/PGraphics2D.java	/^  public void applyMatrix(PMatrix3D source) {$/;"	m	class:PGraphics2D
applyMatrix	opengl/PGraphics2D.java	/^  public void applyMatrix(float n00, float n01, float n02, float n03,$/;"	m	class:PGraphics2D
applyMatrix	opengl/PGraphicsOpenGL.java	/^  public void applyMatrix(PMatrix2D source) {$/;"	m	class:PGraphicsOpenGL
applyMatrix	opengl/PGraphicsOpenGL.java	/^  public void applyMatrix(PMatrix3D source) {$/;"	m	class:PGraphicsOpenGL
applyMatrix	opengl/PGraphicsOpenGL.java	/^  public void applyMatrix(float n00, float n01, float n02, float n03,$/;"	m	class:PGraphicsOpenGL
applyMatrix	opengl/PGraphicsOpenGL.java	/^  public void applyMatrix(float n00, float n01, float n02,$/;"	m	class:PGraphicsOpenGL
applyMatrix	opengl/PShapeOpenGL.java	/^  public void applyMatrix(PMatrix2D source) {$/;"	m	class:PShapeOpenGL
applyMatrix	opengl/PShapeOpenGL.java	/^  public void applyMatrix(float n00, float n01, float n02, float n03,$/;"	m	class:PShapeOpenGL
applyMatrix	opengl/PShapeOpenGL.java	/^  public void applyMatrix(float n00, float n01, float n02,$/;"	m	class:PShapeOpenGL
applyMatrixImpl	opengl/PGraphicsOpenGL.java	/^  protected void applyMatrixImpl(float n00, float n01, float n02, float n03,$/;"	m	class:PGraphicsOpenGL
applyMatrixImpl	opengl/PShapeOpenGL.java	/^  protected void applyMatrixImpl(PMatrix matrix) {$/;"	m	class:PShapeOpenGL
applyMatrixOnLineGeometry	opengl/PGraphicsOpenGL.java	/^    void applyMatrixOnLineGeometry(PMatrix tr, int first, int last) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
applyMatrixOnLineGeometry	opengl/PGraphicsOpenGL.java	/^    void applyMatrixOnLineGeometry(PMatrix2D tr, int first, int last) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
applyMatrixOnLineGeometry	opengl/PGraphicsOpenGL.java	/^    void applyMatrixOnLineGeometry(PMatrix3D tr, int first, int last) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
applyMatrixOnPointGeometry	opengl/PGraphicsOpenGL.java	/^    void applyMatrixOnPointGeometry(PMatrix tr, int first, int last) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
applyMatrixOnPointGeometry	opengl/PGraphicsOpenGL.java	/^    void applyMatrixOnPointGeometry(PMatrix2D tr, int first, int last) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
applyMatrixOnPointGeometry	opengl/PGraphicsOpenGL.java	/^    void applyMatrixOnPointGeometry(PMatrix3D tr, int first, int last) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
applyMatrixOnPolyGeometry	opengl/PGraphicsOpenGL.java	/^    void applyMatrixOnPolyGeometry(PMatrix tr, int first, int last) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
applyMatrixOnPolyGeometry	opengl/PGraphicsOpenGL.java	/^    void applyMatrixOnPolyGeometry(PMatrix2D tr, int first, int last) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
applyMatrixOnPolyGeometry	opengl/PGraphicsOpenGL.java	/^    void applyMatrixOnPolyGeometry(PMatrix3D tr, int first, int last) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
applyProjection	opengl/PGraphicsOpenGL.java	/^  public void applyProjection(PMatrix3D mat) {$/;"	m	class:PGraphicsOpenGL
applyProjection	opengl/PGraphicsOpenGL.java	/^  public void applyProjection(float n00, float n01, float n02, float n03,$/;"	m	class:PGraphicsOpenGL
arc	core/PApplet.java	/^  public void arc(float a, float b, float c, float d,$/;"	m	class:PApplet
arc	core/PGraphics.java	/^  public void arc(float a, float b, float c, float d,$/;"	m	class:PGraphics
arc	core/PGraphicsJava2D.java	/^  Arc2D.Float arc = new Arc2D.Float();$/;"	f	class:PGraphicsJava2D
arcImpl	core/PGraphics.java	/^  protected void arcImpl(float x, float y, float w, float h,$/;"	m	class:PGraphics
arcImpl	core/PGraphicsJava2D.java	/^  protected void arcImpl(float x, float y, float w, float h,$/;"	m	class:PGraphicsJava2D
arcImpl	opengl/PGraphicsOpenGL.java	/^  protected void arcImpl(float x, float y, float w, float h,$/;"	m	class:PGraphicsOpenGL
args	core/PApplet.java	/^  public String[] args;$/;"	f	class:PApplet
array	core/PVector.java	/^  public float[] array() {$/;"	m	class:PVector
array	core/PVector.java	/^  transient protected float[] array;$/;"	f	class:PVector
array	data/FloatList.java	/^  public float[] array() {$/;"	m	class:FloatList
array	data/FloatList.java	/^  public float[] array(float[] array) {$/;"	m	class:FloatList
array	data/IntList.java	/^  public int[] array() {$/;"	m	class:IntList
array	data/IntList.java	/^  public int[] array(int[] array) {$/;"	m	class:IntList
array	data/StringList.java	/^  public String[] array() {$/;"	m	class:StringList
array	data/StringList.java	/^  public String[] array(String[] array) {$/;"	m	class:StringList
arrayCheck	opengl/PGraphicsOpenGL.java	/^    void arrayCheck() {$/;"	m	class:PGraphicsOpenGL.IndexCache
arrayCheck	opengl/PGraphicsOpenGL.java	/^    void arrayCheck() {$/;"	m	class:PGraphicsOpenGL.TexCache
arrayCopy	core/PApplet.java	/^  static public void arrayCopy(Object src, Object dst) {$/;"	m	class:PApplet
arrayCopy	core/PApplet.java	/^  static public void arrayCopy(Object src, Object dst, int length) {$/;"	m	class:PApplet
arrayCopy	core/PApplet.java	/^  static public void arrayCopy(Object src, int srcPosition,$/;"	m	class:PApplet
arraycopy	core/PApplet.java	/^  static public void arraycopy(Object src, Object dst) {$/;"	m	class:PApplet
arraycopy	core/PApplet.java	/^  static public void arraycopy(Object src, Object dst, int length) {$/;"	m	class:PApplet
arraycopy	core/PApplet.java	/^  static public void arraycopy(Object src, int srcPosition,$/;"	m	class:PApplet
ascent	core/PFont.java	/^  protected int ascent;$/;"	f	class:PFont
ascent	core/PFont.java	/^  public float ascent() {$/;"	m	class:PFont
ascent	core/PShapeSVG.java	/^    int ascent;$/;"	f	class:PShapeSVG.FontFace
ascii	core/PFont.java	/^  protected int[] ascii;$/;"	f	class:PFont
asin	core/PApplet.java	/^  static public final float asin(float value) {$/;"	m	class:PApplet
atan	core/PApplet.java	/^  static public final float atan(float value) {$/;"	m	class:PApplet
atan2	core/PApplet.java	/^  static public final float atan2(float y, float x) {$/;"	m	class:PApplet
attachShader	opengl/PGL.java	/^  public abstract void attachShader(int program, int shader);$/;"	m	class:PGL
attachShader	opengl/PJOGL.java	/^  public void attachShader(int program, int shader) {$/;"	m	class:PJOGL
autoMipmapGenSupported	opengl/PGraphicsOpenGL.java	/^  static public boolean autoMipmapGenSupported;$/;"	f	class:PGraphicsOpenGL
autoNormal	core/PGraphics.java	/^  protected boolean autoNormal;$/;"	f	class:PGraphics
available	core/PApplet.java	/^    synchronized boolean available() {$/;"	m	class:PApplet.InternalEventQueue
available	opengl/Texture.java	/^  public boolean available()  {$/;"	m	class:Texture
b	core/PImage.java	/^  private int r, g, b, a;$/;"	f	class:PImage	file:
back	data/JSONTokener.java	/^  public void back() {$/;"	m	class:JSONTokener
backFBO	opengl/PJOGL.java	/^  protected static FBObject backFBO;$/;"	f	class:PJOGL
backTex	opengl/PGL.java	/^  protected static int backTex, frontTex;$/;"	f	class:PGL
backTexAttach	opengl/PJOGL.java	/^  protected static FBObject.TextureAttachment backTexAttach;$/;"	f	class:PJOGL
background	core/PApplet.java	/^  public void background(PImage image) {$/;"	m	class:PApplet
background	core/PApplet.java	/^  public void background(float gray) {$/;"	m	class:PApplet
background	core/PApplet.java	/^  public void background(float gray, float alpha) {$/;"	m	class:PApplet
background	core/PApplet.java	/^  public void background(float v1, float v2, float v3) {$/;"	m	class:PApplet
background	core/PApplet.java	/^  public void background(float v1, float v2, float v3, float alpha) {$/;"	m	class:PApplet
background	core/PApplet.java	/^  public void background(int rgb) {$/;"	m	class:PApplet
background	core/PApplet.java	/^  public void background(int rgb, float alpha) {$/;"	m	class:PApplet
background	core/PGraphics.java	/^  public void background(PImage image) {$/;"	m	class:PGraphics
background	core/PGraphics.java	/^  public void background(float gray) {$/;"	m	class:PGraphics
background	core/PGraphics.java	/^  public void background(float gray, float alpha) {$/;"	m	class:PGraphics
background	core/PGraphics.java	/^  public void background(float v1, float v2, float v3) {$/;"	m	class:PGraphics
background	core/PGraphics.java	/^  public void background(float v1, float v2, float v3, float alpha) {$/;"	m	class:PGraphics
background	core/PGraphics.java	/^  public void background(int rgb) {$/;"	m	class:PGraphics
background	core/PGraphics.java	/^  public void background(int rgb, float alpha) {$/;"	m	class:PGraphics
backgroundA	core/PGraphics.java	/^  protected float backgroundR, backgroundG, backgroundB, backgroundA;$/;"	f	class:PGraphics
backgroundAi	core/PGraphics.java	/^  protected int backgroundRi, backgroundGi, backgroundBi, backgroundAi;$/;"	f	class:PGraphics
backgroundAlpha	core/PGraphics.java	/^  protected boolean backgroundAlpha;$/;"	f	class:PGraphics
backgroundB	core/PGraphics.java	/^  protected float backgroundR, backgroundG, backgroundB, backgroundA;$/;"	f	class:PGraphics
backgroundBi	core/PGraphics.java	/^  protected int backgroundRi, backgroundGi, backgroundBi, backgroundAi;$/;"	f	class:PGraphics
backgroundColor	core/PGraphics.java	/^  public int backgroundColor = 0xffCCCCCC;$/;"	f	class:PGraphics
backgroundFromCalc	core/PGraphics.java	/^  protected void backgroundFromCalc() {$/;"	m	class:PGraphics
backgroundG	core/PGraphics.java	/^  protected float backgroundR, backgroundG, backgroundB, backgroundA;$/;"	f	class:PGraphics
backgroundGi	core/PGraphics.java	/^  protected int backgroundRi, backgroundGi, backgroundBi, backgroundAi;$/;"	f	class:PGraphics
backgroundImpl	core/PGraphics.java	/^  protected void backgroundImpl() {$/;"	m	class:PGraphics
backgroundImpl	core/PGraphics.java	/^  protected void backgroundImpl(PImage image) {$/;"	m	class:PGraphics
backgroundImpl	core/PGraphicsJava2D.java	/^  public void backgroundImpl() {$/;"	m	class:PGraphicsJava2D
backgroundImpl	opengl/PGraphicsOpenGL.java	/^  protected void backgroundImpl() {$/;"	m	class:PGraphicsOpenGL
backgroundImpl	opengl/PGraphicsOpenGL.java	/^  protected void backgroundImpl(PImage image) {$/;"	m	class:PGraphicsOpenGL
backgroundR	core/PGraphics.java	/^  protected float backgroundR, backgroundG, backgroundB, backgroundA;$/;"	f	class:PGraphics
backgroundRi	core/PGraphics.java	/^  protected int backgroundRi, backgroundGi, backgroundBi, backgroundAi;$/;"	f	class:PGraphics
bbox	core/PShapeSVG.java	/^    int[] bbox;        \/\/ spec says comma separated, tho not w\/ forge$/;"	f	class:PShapeSVG.FontFace
begin	opengl/FontTexture.java	/^  public void begin() {$/;"	m	class:FontTexture
begin	opengl/PGL.java	/^    public void begin(int type);$/;"	m	interface:PGL.TessellatorCallback
begin	opengl/PGraphicsOpenGL.java	/^      public void begin(int type) {$/;"	m	class:PGraphicsOpenGL.Tessellator.TessellatorCallback
begin	opengl/PJOGL.java	/^      public void begin(int type) {$/;"	m	class:PJOGL.Tessellator.GLUCallback
begin2D	opengl/PGraphics2D.java	/^  protected void begin2D() {$/;"	m	class:PGraphics2D
begin2D	opengl/PGraphics3D.java	/^  protected void begin2D() {$/;"	m	class:PGraphics3D
begin2D	opengl/PGraphicsOpenGL.java	/^  protected void begin2D() {$/;"	m	class:PGraphicsOpenGL
beginCamera	core/PApplet.java	/^  public void beginCamera() {$/;"	m	class:PApplet
beginCamera	core/PGraphics.java	/^  public void beginCamera() {$/;"	m	class:PGraphics
beginCamera	opengl/PGraphics2D.java	/^  public void beginCamera() {$/;"	m	class:PGraphics2D
beginCamera	opengl/PGraphicsOpenGL.java	/^  public void beginCamera() {$/;"	m	class:PGraphicsOpenGL
beginContour	core/PApplet.java	/^  public void beginContour() {$/;"	m	class:PApplet
beginContour	core/PGraphics.java	/^  public void beginContour() {$/;"	m	class:PGraphics
beginContour	core/PGraphicsJava2D.java	/^  public void beginContour() {$/;"	m	class:PGraphicsJava2D
beginContour	core/PShape.java	/^  public void beginContour() {$/;"	m	class:PShape
beginContour	opengl/PGL.java	/^    public void beginContour();$/;"	m	interface:PGL.Tessellator
beginContour	opengl/PGraphicsOpenGL.java	/^  public void beginContour() {$/;"	m	class:PGraphicsOpenGL
beginContour	opengl/PJOGL.java	/^    public void beginContour() {$/;"	m	class:PJOGL.Tessellator
beginContourImpl	core/PShape.java	/^  protected void beginContourImpl() {$/;"	m	class:PShape
beginContourImpl	opengl/PShapeOpenGL.java	/^  protected void beginContourImpl() {$/;"	m	class:PShapeOpenGL
beginDraw	core/PGraphics.java	/^  public void beginDraw() {  \/\/ ignore$/;"	m	class:PGraphics
beginDraw	core/PGraphicsJava2D.java	/^  public void beginDraw() {$/;"	m	class:PGraphicsJava2D
beginDraw	core/PGraphicsRetina2D.java	/^  public void beginDraw() {$/;"	m	class:PGraphicsRetina2D
beginDraw	opengl/PGL.java	/^  protected void beginDraw(boolean clear0) {$/;"	m	class:PGL
beginDraw	opengl/PGraphicsOpenGL.java	/^  public void beginDraw() {$/;"	m	class:PGraphicsOpenGL
beginDraw	opengl/PJOGL.java	/^  protected void beginDraw(boolean clear0) {$/;"	m	class:PJOGL
beginGL	opengl/PGL.java	/^  protected void beginGL() { }$/;"	m	class:PGL
beginGL	opengl/PJOGL.java	/^  protected void beginGL() {$/;"	m	class:PJOGL
beginNoTex	opengl/PGraphicsOpenGL.java	/^    void beginNoTex() {$/;"	m	class:PGraphicsOpenGL.Tessellator
beginOffscreenDraw	opengl/PGraphicsOpenGL.java	/^  protected void beginOffscreenDraw() {$/;"	m	class:PGraphicsOpenGL
beginOnscreenDraw	opengl/PGraphicsOpenGL.java	/^  protected void beginOnscreenDraw() {$/;"	m	class:PGraphicsOpenGL
beginPGL	core/PApplet.java	/^  public PGL beginPGL() {$/;"	m	class:PApplet
beginPGL	core/PGraphics.java	/^  public PGL beginPGL() {$/;"	m	class:PGraphics
beginPGL	opengl/PGraphicsOpenGL.java	/^  public PGL beginPGL() {$/;"	m	class:PGraphicsOpenGL
beginPath	opengl/PGraphicsOpenGL.java	/^    int beginPath;$/;"	f	class:PGraphicsOpenGL.Tessellator
beginPixelsOp	opengl/PGraphicsOpenGL.java	/^  protected void beginPixelsOp(int op) {$/;"	m	class:PGraphicsOpenGL
beginPolygon	opengl/PGL.java	/^    public void beginPolygon();$/;"	m	interface:PGL.Tessellator
beginPolygon	opengl/PJOGL.java	/^    public void beginPolygon() {$/;"	m	class:PJOGL.Tessellator
beginPolygonStroke	opengl/PGraphicsOpenGL.java	/^    void beginPolygonStroke() {$/;"	m	class:PGraphicsOpenGL.Tessellator
beginRaw	core/PApplet.java	/^  public PGraphics beginRaw(String renderer, String filename) {$/;"	m	class:PApplet
beginRaw	core/PApplet.java	/^  public void beginRaw(PGraphics rawGraphics) {$/;"	m	class:PApplet
beginRaw	core/PGraphics.java	/^  public void beginRaw(PGraphics rawGraphics) {  \/\/ ignore$/;"	m	class:PGraphics
beginRaw	core/PGraphicsJava2D.java	/^  public void beginRaw(PGraphics recorderRaw) {$/;"	m	class:PGraphicsJava2D
beginReadPixels	opengl/PGraphicsOpenGL.java	/^  public void beginReadPixels() {$/;"	m	class:PGraphicsOpenGL
beginRecord	core/PApplet.java	/^  public PGraphics beginRecord(String renderer, String filename) {$/;"	m	class:PApplet
beginRecord	core/PApplet.java	/^  public void beginRecord(PGraphics recorder) {$/;"	m	class:PApplet
beginShape	core/PApplet.java	/^  public void beginShape() {$/;"	m	class:PApplet
beginShape	core/PApplet.java	/^  public void beginShape(int kind) {$/;"	m	class:PApplet
beginShape	core/PGraphics.java	/^  public void beginShape() {$/;"	m	class:PGraphics
beginShape	core/PGraphics.java	/^  public void beginShape(int kind) {$/;"	m	class:PGraphics
beginShape	core/PGraphicsJava2D.java	/^  public void beginShape(int kind) {$/;"	m	class:PGraphicsJava2D
beginShape	core/PShape.java	/^  public void beginShape() {$/;"	m	class:PShape
beginShape	core/PShape.java	/^  public void beginShape(int kind) {$/;"	m	class:PShape
beginShape	opengl/PGraphicsOpenGL.java	/^  public void beginShape(int kind) {$/;"	m	class:PGraphicsOpenGL
beginStrokePath	opengl/PGraphicsOpenGL.java	/^    void beginStrokePath() {$/;"	m	class:PGraphicsOpenGL.Tessellator
beginTex	opengl/PGraphicsOpenGL.java	/^    void beginTex() {$/;"	m	class:PGraphicsOpenGL.Tessellator
bezier	core/PApplet.java	/^  public void bezier(float x1, float y1, float z1,$/;"	m	class:PApplet
bezier	core/PApplet.java	/^  public void bezier(float x1, float y1,$/;"	m	class:PApplet
bezier	core/PGraphics.java	/^  public void bezier(float x1, float y1, float z1,$/;"	m	class:PGraphics
bezier	core/PGraphics.java	/^  public void bezier(float x1, float y1,$/;"	m	class:PGraphics
bezierBasisInverse	core/PGraphics.java	/^  protected PMatrix3D bezierBasisInverse;$/;"	f	class:PGraphics
bezierBasisMatrix	core/PGraphics.java	/^  protected PMatrix3D bezierBasisMatrix =$/;"	f	class:PGraphics
bezierDetail	core/PApplet.java	/^  public void bezierDetail(int detail) {$/;"	m	class:PApplet
bezierDetail	core/PGraphics.java	/^  public int bezierDetail = 20;$/;"	f	class:PGraphics
bezierDetail	core/PGraphics.java	/^  public void bezierDetail(int detail) {$/;"	m	class:PGraphics
bezierDetail	core/PGraphicsJava2D.java	/^  public void bezierDetail(int detail) {$/;"	m	class:PGraphicsJava2D
bezierDetail	core/PShape.java	/^  public void bezierDetail(int detail) {$/;"	m	class:PShape
bezierDetail	opengl/PShapeOpenGL.java	/^  protected int bezierDetail;$/;"	f	class:PShapeOpenGL
bezierDetail	opengl/PShapeOpenGL.java	/^  public void bezierDetail(int detail) {$/;"	m	class:PShapeOpenGL
bezierDrawMatrix	core/PGraphics.java	/^  protected PMatrix3D bezierDrawMatrix;$/;"	f	class:PGraphics
bezierInit	core/PGraphics.java	/^  protected void bezierInit() {$/;"	m	class:PGraphics
bezierInitCheck	core/PGraphics.java	/^  protected void bezierInitCheck() {$/;"	m	class:PGraphics
bezierInited	core/PGraphics.java	/^  protected boolean bezierInited = false;$/;"	f	class:PGraphics
bezierPoint	core/PApplet.java	/^  public float bezierPoint(float a, float b, float c, float d, float t) {$/;"	m	class:PApplet
bezierPoint	core/PGraphics.java	/^  public float bezierPoint(float a, float b, float c, float d, float t) {$/;"	m	class:PGraphics
bezierTangent	core/PApplet.java	/^  public float bezierTangent(float a, float b, float c, float d, float t) {$/;"	m	class:PApplet
bezierTangent	core/PGraphics.java	/^  public float bezierTangent(float a, float b, float c, float d, float t) {$/;"	m	class:PGraphics
bezierVertex	core/PApplet.java	/^  public void bezierVertex(float x2, float y2, float z2,$/;"	m	class:PApplet
bezierVertex	core/PApplet.java	/^  public void bezierVertex(float x2, float y2,$/;"	m	class:PApplet
bezierVertex	core/PGraphics.java	/^  public void bezierVertex(float x2, float y2, float z2,$/;"	m	class:PGraphics
bezierVertex	core/PGraphics.java	/^  public void bezierVertex(float x2, float y2,$/;"	m	class:PGraphics
bezierVertex	core/PGraphicsJava2D.java	/^  public void bezierVertex(float x1, float y1,$/;"	m	class:PGraphicsJava2D
bezierVertex	core/PGraphicsJava2D.java	/^  public void bezierVertex(float x2, float y2, float z2,$/;"	m	class:PGraphicsJava2D
bezierVertex	core/PShape.java	/^  public void bezierVertex(float x2, float y2, float z2,$/;"	m	class:PShape
bezierVertex	core/PShape.java	/^  public void bezierVertex(float x2, float y2,$/;"	m	class:PShape
bezierVertex	opengl/PGraphics2D.java	/^  public void bezierVertex(float x2, float y2, float z2,$/;"	m	class:PGraphics2D
bezierVertex	opengl/PGraphicsOpenGL.java	/^  public void bezierVertex(float x2, float y2, float z2,$/;"	m	class:PGraphicsOpenGL
bezierVertex	opengl/PGraphicsOpenGL.java	/^  public void bezierVertex(float x2, float y2,$/;"	m	class:PGraphicsOpenGL
bezierVertex	opengl/PShapeOpenGL.java	/^  public void bezierVertex(float x2, float y2, float z2,$/;"	m	class:PShapeOpenGL
bezierVertex	opengl/PShapeOpenGL.java	/^  public void bezierVertex(float x2, float y2,$/;"	m	class:PShapeOpenGL
bezierVertexCheck	core/PGraphics.java	/^  protected void bezierVertexCheck() {$/;"	m	class:PGraphics
bezierVertexCheck	core/PGraphics.java	/^  protected void bezierVertexCheck(int shape, int vertexCount) {$/;"	m	class:PGraphics
bezierVertexImpl	opengl/PGraphicsOpenGL.java	/^  protected void bezierVertexImpl(float x2, float y2, float z2,$/;"	m	class:PGraphicsOpenGL
bezierVertexImpl	opengl/PShapeOpenGL.java	/^  protected void bezierVertexImpl(float x2, float y2, float z2,$/;"	m	class:PShapeOpenGL
bimage	core/PGraphicsJava2D.java	/^  BufferedImage bimage;$/;"	f	class:PGraphicsJava2D
binary	core/PApplet.java	/^  static final public String binary(byte value) {$/;"	m	class:PApplet
binary	core/PApplet.java	/^  static final public String binary(char value) {$/;"	m	class:PApplet
binary	core/PApplet.java	/^  static final public String binary(int value) {$/;"	m	class:PApplet
binary	core/PApplet.java	/^  static final public String binary(int value, int digits) {$/;"	m	class:PApplet
bind	opengl/FrameBuffer.java	/^  public void bind() {$/;"	m	class:FrameBuffer
bind	opengl/PShader.java	/^  public void bind() {$/;"	m	class:PShader
bind	opengl/Texture.java	/^  public void bind() {$/;"	m	class:Texture
bindAttribLocation	opengl/PGL.java	/^  public abstract void bindAttribLocation(int program, int index, String name);$/;"	m	class:PGL
bindAttribLocation	opengl/PJOGL.java	/^  public void bindAttribLocation(int program, int index, String name) {$/;"	m	class:PJOGL
bindBuffer	opengl/PGL.java	/^  public abstract void bindBuffer(int target, int buffer);$/;"	m	class:PGL
bindBuffer	opengl/PJOGL.java	/^  public void bindBuffer(int target, int buffer) {$/;"	m	class:PJOGL
bindFramebuffer	opengl/PGL.java	/^  public abstract void bindFramebuffer(int target, int framebuffer);$/;"	m	class:PGL
bindFramebuffer	opengl/PJOGL.java	/^  public void bindFramebuffer(int target, int framebuffer) {$/;"	m	class:PJOGL
bindFrontTexture	opengl/PGL.java	/^  protected void bindFrontTexture() {$/;"	m	class:PGL
bindFrontTexture	opengl/PGraphicsOpenGL.java	/^  protected void bindFrontTexture() {$/;"	m	class:PGraphicsOpenGL
bindFrontTexture	opengl/PJOGL.java	/^  protected void bindFrontTexture() {$/;"	m	class:PJOGL
bindRenderbuffer	opengl/PGL.java	/^  public abstract void bindRenderbuffer(int target, int renderbuffer);$/;"	m	class:PGL
bindRenderbuffer	opengl/PJOGL.java	/^  public void bindRenderbuffer(int target, int renderbuffer) {$/;"	m	class:PJOGL
bindTexture	opengl/PGL.java	/^  public void bindTexture(int target, int texture) {$/;"	m	class:PGL
bindTextureImpl	opengl/PGL.java	/^  protected abstract void bindTextureImpl(int target, int texture);$/;"	m	class:PGL
bindTextureImpl	opengl/PJOGL.java	/^  protected void bindTextureImpl(int target, int texture) {$/;"	m	class:PJOGL
bindTextures	opengl/PShader.java	/^  protected void bindTextures() {$/;"	m	class:PShader
bindTyped	opengl/PShader.java	/^  protected void bindTyped() {$/;"	m	class:PShader
blend	core/PApplet.java	/^  public void blend(PImage src,$/;"	m	class:PApplet
blend	core/PApplet.java	/^  public void blend(int sx, int sy, int sw, int sh,$/;"	m	class:PApplet
blend	core/PGraphicsRetina2D.java	/^  public void blend(PImage src,$/;"	m	class:PGraphicsRetina2D
blend	core/PGraphicsRetina2D.java	/^  public void blend(int sx, int sy, int sw, int sh,$/;"	m	class:PGraphicsRetina2D
blend	core/PImage.java	/^  public void blend(PImage src,$/;"	m	class:PImage
blend	core/PImage.java	/^  public void blend(int sx, int sy, int sw, int sh,$/;"	m	class:PImage
blendColor	core/PApplet.java	/^  static public int blendColor(int c1, int c2, int mode) {$/;"	m	class:PApplet
blendColor	core/PImage.java	/^  static public int blendColor(int c1, int c2, int mode) {  \/\/ ignore$/;"	m	class:PImage
blendColor	opengl/PGL.java	/^  public abstract void blendColor(float red, float green, float blue, float alpha);$/;"	m	class:PGL
blendColor	opengl/PJOGL.java	/^  public void blendColor(float red, float green, float blue, float alpha) {$/;"	m	class:PJOGL
blendEqSupported	opengl/PGraphicsOpenGL.java	/^  static public boolean blendEqSupported;$/;"	f	class:PGraphicsOpenGL
blendEquation	opengl/PGL.java	/^  public abstract void blendEquation(int mode);$/;"	m	class:PGL
blendEquation	opengl/PJOGL.java	/^  public void blendEquation(int mode) {$/;"	m	class:PJOGL
blendEquationSeparate	opengl/PGL.java	/^  public abstract void blendEquationSeparate(int modeRGB, int modeAlpha);$/;"	m	class:PGL
blendEquationSeparate	opengl/PJOGL.java	/^  public void blendEquationSeparate(int modeRGB, int modeAlpha) {$/;"	m	class:PJOGL
blendFunc	opengl/PGL.java	/^  public abstract void blendFunc(int src, int dst);$/;"	m	class:PGL
blendFunc	opengl/PJOGL.java	/^  public void blendFunc(int src, int dst) {$/;"	m	class:PJOGL
blendFuncSeparate	opengl/PGL.java	/^  public abstract void blendFuncSeparate(int srcRGB, int dstRGB, int srcAlpha, int dstAlpha);$/;"	m	class:PGL
blendFuncSeparate	opengl/PJOGL.java	/^  public void blendFuncSeparate(int srcRGB, int dstRGB, int srcAlpha, int dstAlpha) {$/;"	m	class:PJOGL
blendMode	core/PApplet.java	/^  public void blendMode(int mode) {$/;"	m	class:PApplet
blendMode	core/PGraphics.java	/^  protected int blendMode;$/;"	f	class:PGraphics
blendMode	core/PGraphics.java	/^  public void blendMode(int mode) {$/;"	m	class:PGraphics
blendMode	core/PStyle.java	/^  public int blendMode;$/;"	f	class:PStyle
blendModeImpl	core/PGraphics.java	/^  protected void blendModeImpl() {$/;"	m	class:PGraphics
blendModeImpl	core/PGraphicsJava2D.java	/^  protected void blendModeImpl() {$/;"	m	class:PGraphicsJava2D
blendModeImpl	opengl/PGraphicsOpenGL.java	/^  protected void blendModeImpl() {$/;"	m	class:PGraphicsOpenGL
blend_add_pin	core/PImage.java	/^  private static int blend_add_pin(int a, int b) {$/;"	m	class:PImage	file:
blend_blend	core/PImage.java	/^  private static int blend_blend(int a, int b) {$/;"	m	class:PImage	file:
blend_burn	core/PImage.java	/^  private static int blend_burn(int a, int b) {$/;"	m	class:PImage	file:
blend_darkest	core/PImage.java	/^  private static int blend_darkest(int a, int b) {$/;"	m	class:PImage	file:
blend_difference	core/PImage.java	/^  private static int blend_difference(int a, int b) {$/;"	m	class:PImage	file:
blend_dodge	core/PImage.java	/^  private static int blend_dodge(int a, int b) {$/;"	m	class:PImage	file:
blend_exclusion	core/PImage.java	/^  private static int blend_exclusion(int a, int b) {$/;"	m	class:PImage	file:
blend_hard_light	core/PImage.java	/^   private static int blend_hard_light(int a, int b) {$/;"	m	class:PImage	file:
blend_lightest	core/PImage.java	/^  private static int blend_lightest(int a, int b) {$/;"	m	class:PImage	file:
blend_multiply	core/PImage.java	/^  private static int blend_multiply(int a, int b) {$/;"	m	class:PImage	file:
blend_overlay	core/PImage.java	/^  private static int blend_overlay(int a, int b) {$/;"	m	class:PImage	file:
blend_screen	core/PImage.java	/^  private static int blend_screen(int a, int b) {$/;"	m	class:PImage	file:
blend_soft_light	core/PImage.java	/^  private static int blend_soft_light(int a, int b) {$/;"	m	class:PImage	file:
blend_sub_pin	core/PImage.java	/^  private static int blend_sub_pin(int a, int b) {$/;"	m	class:PImage	file:
blitFramebuffer	opengl/PGL.java	/^  public abstract void blitFramebuffer(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, int mask, int filter);$/;"	m	class:PGL
blitFramebuffer	opengl/PJOGL.java	/^  public void blitFramebuffer(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, int mask, int filter) {$/;"	m	class:PJOGL
blit_resize	core/PImage.java	/^  private void blit_resize(PImage img,$/;"	m	class:PImage	file:
blue	core/PApplet.java	/^  public final float blue(int rgb) {$/;"	m	class:PApplet
blue	core/PGraphics.java	/^  public final float blue(int rgb) {$/;"	m	class:PGraphics
blurARGB	core/PImage.java	/^  protected void blurARGB(float r) {$/;"	m	class:PImage
blurAlpha	core/PImage.java	/^  protected void blurAlpha(float r) {$/;"	m	class:PImage
blurKernel	core/PImage.java	/^  private int[] blurKernel;$/;"	f	class:PImage	file:
blurKernelSize	core/PImage.java	/^  private int blurKernelSize;$/;"	f	class:PImage	file:
blurMult	core/PImage.java	/^  private int[][] blurMult;$/;"	f	class:PImage	file:
blurRGB	core/PImage.java	/^  protected void blurRGB(float r) {$/;"	m	class:PImage
blurRadius	core/PImage.java	/^  private int blurRadius;$/;"	f	class:PImage	file:
bound	opengl/PShader.java	/^  protected boolean bound;$/;"	f	class:PShader
bound	opengl/PShader.java	/^  public boolean bound() {$/;"	m	class:PShader
bound	opengl/Texture.java	/^  protected boolean bound;$/;"	f	class:Texture
bound	opengl/Texture.java	/^  public boolean bound() {$/;"	m	class:Texture
boundTextures	opengl/PGL.java	/^  protected static int[][] boundTextures;$/;"	f	class:PGL
box	core/PApplet.java	/^  public void box(float size) {$/;"	m	class:PApplet
box	core/PApplet.java	/^  public void box(float w, float h, float d) {$/;"	m	class:PApplet
box	core/PGraphics.java	/^  public void box(float size) {$/;"	m	class:PGraphics
box	core/PGraphics.java	/^  public void box(float w, float h, float d) {$/;"	m	class:PGraphics
box	core/PGraphicsJava2D.java	/^  public void box(float w, float h, float d) {$/;"	m	class:PGraphicsJava2D
box	opengl/PGraphics2D.java	/^  public void box(float w, float h, float d) {$/;"	m	class:PGraphics2D
box	opengl/PGraphicsOpenGL.java	/^  public void box(float w, float h, float d) {$/;"	m	class:PGraphicsOpenGL
breakShape	core/PGraphicsJava2D.java	/^  boolean breakShape;$/;"	f	class:PGraphicsJava2D
breakShape	opengl/PGraphicsOpenGL.java	/^  protected boolean breakShape = false;$/;"	f	class:PGraphicsOpenGL
breakShape	opengl/PShapeOpenGL.java	/^  protected boolean breakShape = false;$/;"	f	class:PShapeOpenGL
brightness	core/PApplet.java	/^  public final float brightness(int rgb) {$/;"	m	class:PApplet
brightness	core/PGraphics.java	/^  public final float brightness(int rgb) {$/;"	m	class:PGraphics
bufferCache	opengl/Texture.java	/^  protected LinkedList<BufferData> bufferCache = null;$/;"	f	class:Texture
bufferData	opengl/PGL.java	/^  public abstract void bufferData(int target, int size, Buffer data, int usage);$/;"	m	class:PGL
bufferData	opengl/PJOGL.java	/^  public void bufferData(int target, int size, Buffer data, int usage) {$/;"	m	class:PJOGL
bufferLoc	opengl/PShader.java	/^  protected int bufferLoc;$/;"	f	class:PShader
bufferSource	opengl/Texture.java	/^  protected Object bufferSource;$/;"	f	class:Texture
bufferSubData	opengl/PGL.java	/^  public abstract void bufferSubData(int target, int offset, int size, Buffer data);$/;"	m	class:PGL
bufferSubData	opengl/PJOGL.java	/^  public void bufferSubData(int target, int offset, int size, Buffer data) {$/;"	m	class:PJOGL
bufferUnit	opengl/PShader.java	/^  protected int bufferUnit;$/;"	f	class:PShader
bufferUpdate	opengl/Texture.java	/^  protected boolean bufferUpdate() {$/;"	m	class:Texture
buildBlurKernel	core/PImage.java	/^  protected void buildBlurKernel(float r) {$/;"	m	class:PImage
button	event/MouseEvent.java	/^  protected int button;$/;"	f	class:MouseEvent
byteBuffer	opengl/PGL.java	/^  protected ByteBuffer byteBuffer;$/;"	f	class:PGL
cLL	core/PImage.java	/^  private int ul, ll, ur, lr, cUL, cLL, cUR, cLR;$/;"	f	class:PImage	file:
cLR	core/PImage.java	/^  private int ul, ll, ur, lr, cUL, cLL, cUR, cLR;$/;"	f	class:PImage	file:
cUL	core/PImage.java	/^  private int ul, ll, ur, lr, cUL, cLL, cUR, cLR;$/;"	f	class:PImage	file:
cUR	core/PImage.java	/^  private int ul, ll, ur, lr, cUL, cLL, cUR, cLR;$/;"	f	class:PImage	file:
cache	opengl/PGraphicsOpenGL.java	/^      IndexCache cache;$/;"	f	class:PGraphicsOpenGL.Tessellator.TessellatorCallback
cacheHsbKey	core/PGraphics.java	/^  int cacheHsbKey;$/;"	f	class:PGraphics
cacheHsbValue	core/PGraphics.java	/^  float[] cacheHsbValue = new float[3];$/;"	f	class:PGraphics
cacheIndex	opengl/PGraphicsOpenGL.java	/^      int cacheIndex;$/;"	f	class:PGraphicsOpenGL.Tessellator.TessellatorCallback
cacheMap	core/PGraphics.java	/^  protected WeakHashMap<PImage, Object> cacheMap =$/;"	f	class:PGraphics
calcA	core/PGraphics.java	/^  protected float calcR, calcG, calcB, calcA;$/;"	f	class:PGraphics
calcA	core/PShape.java	/^  protected float calcR, calcG, calcB, calcA;$/;"	f	class:PShape
calcAi	core/PGraphics.java	/^  protected int calcRi, calcGi, calcBi, calcAi;$/;"	f	class:PGraphics
calcAi	core/PShape.java	/^  protected int calcRi, calcGi, calcBi, calcAi;$/;"	f	class:PShape
calcAlpha	core/PGraphics.java	/^  protected boolean calcAlpha;$/;"	f	class:PGraphics
calcAlpha	core/PShape.java	/^  protected boolean calcAlpha;$/;"	f	class:PShape
calcB	core/PGraphics.java	/^  protected float calcR, calcG, calcB, calcA;$/;"	f	class:PGraphics
calcB	core/PShape.java	/^  protected float calcR, calcG, calcB, calcA;$/;"	f	class:PShape
calcBi	core/PGraphics.java	/^  protected int calcRi, calcGi, calcBi, calcAi;$/;"	f	class:PGraphics
calcBi	core/PShape.java	/^  protected int calcRi, calcGi, calcBi, calcAi;$/;"	f	class:PShape
calcColor	core/PGraphics.java	/^  protected int calcColor;$/;"	f	class:PGraphics
calcColor	core/PShape.java	/^  protected int calcColor;$/;"	f	class:PShape
calcG	core/PGraphics.java	/^  protected float calcR, calcG, calcB, calcA;$/;"	f	class:PGraphics
calcG	core/PShape.java	/^  protected float calcR, calcG, calcB, calcA;$/;"	f	class:PShape
calcGi	core/PGraphics.java	/^  protected int calcRi, calcGi, calcBi, calcAi;$/;"	f	class:PGraphics
calcGi	core/PShape.java	/^  protected int calcRi, calcGi, calcBi, calcAi;$/;"	f	class:PShape
calcGradientPaint	core/PShapeSVG.java	/^  protected Paint calcGradientPaint(Gradient gradient) {$/;"	m	class:PShapeSVG
calcNormals	opengl/PGraphicsOpenGL.java	/^      boolean calcNormals;$/;"	f	class:PGraphicsOpenGL.Tessellator.TessellatorCallback
calcPolyNormal	opengl/PGraphicsOpenGL.java	/^    void calcPolyNormal(int i0, int i1, int i2) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
calcQuadStripNormals	opengl/PGraphicsOpenGL.java	/^    void calcQuadStripNormals() {$/;"	m	class:PGraphicsOpenGL.InGeometry
calcQuadsNormals	opengl/PGraphicsOpenGL.java	/^    void calcQuadsNormals() {$/;"	m	class:PGraphicsOpenGL.InGeometry
calcR	core/PGraphics.java	/^  protected float calcR, calcG, calcB, calcA;$/;"	f	class:PGraphics
calcR	core/PShape.java	/^  protected float calcR, calcG, calcB, calcA;$/;"	f	class:PShape
calcRi	core/PGraphics.java	/^  protected int calcRi, calcGi, calcBi, calcAi;$/;"	f	class:PGraphics
calcRi	core/PShape.java	/^  protected int calcRi, calcGi, calcBi, calcAi;$/;"	f	class:PShape
calcTriNormal	opengl/PGraphicsOpenGL.java	/^      protected void calcTriNormal(int tessIdx0, int tessIdx1, int tessIdx2) {$/;"	m	class:PGraphicsOpenGL.Tessellator.TessellatorCallback
calcTriangleFanNormals	opengl/PGraphicsOpenGL.java	/^    void calcTriangleFanNormals() {$/;"	m	class:PGraphicsOpenGL.InGeometry
calcTriangleNormal	opengl/PGraphicsOpenGL.java	/^    void calcTriangleNormal(int i0, int i1, int i2) {$/;"	m	class:PGraphicsOpenGL.InGeometry
calcTriangleStripNormals	opengl/PGraphicsOpenGL.java	/^    void calcTriangleStripNormals() {$/;"	m	class:PGraphicsOpenGL.InGeometry
calcTrianglesNormals	opengl/PGraphicsOpenGL.java	/^    void calcTrianglesNormals() {$/;"	m	class:PGraphicsOpenGL.InGeometry
callback	opengl/PGraphicsOpenGL.java	/^    TessellatorCallback callback;$/;"	f	class:PGraphicsOpenGL.Tessellator
callback	opengl/PJOGL.java	/^    protected TessellatorCallback callback;$/;"	f	class:PJOGL.Tessellator
camera	core/PApplet.java	/^  public void camera() {$/;"	m	class:PApplet
camera	core/PApplet.java	/^  public void camera(float eyeX, float eyeY, float eyeZ,$/;"	m	class:PApplet
camera	core/PGraphics.java	/^  public void camera() {$/;"	m	class:PGraphics
camera	core/PGraphics.java	/^  public void camera(float eyeX, float eyeY, float eyeZ,$/;"	m	class:PGraphics
camera	opengl/PGraphics2D.java	/^  public void camera() {$/;"	m	class:PGraphics2D
camera	opengl/PGraphics2D.java	/^  public void camera(float eyeX, float eyeY, float eyeZ,$/;"	m	class:PGraphics2D
camera	opengl/PGraphicsOpenGL.java	/^  public PMatrix3D camera;$/;"	f	class:PGraphicsOpenGL
camera	opengl/PGraphicsOpenGL.java	/^  public void camera() {$/;"	m	class:PGraphicsOpenGL
camera	opengl/PGraphicsOpenGL.java	/^  public void camera(float centerX, float centerY) {$/;"	m	class:PGraphicsOpenGL
camera	opengl/PGraphicsOpenGL.java	/^  public void camera(float eyeX, float eyeY, float eyeZ,$/;"	m	class:PGraphicsOpenGL
cameraAspect	opengl/PGraphicsOpenGL.java	/^  public float cameraAspect;$/;"	f	class:PGraphicsOpenGL
cameraEyeX	opengl/PGraphicsOpenGL.java	/^  protected float cameraEyeX, cameraEyeY, cameraEyeZ;$/;"	f	class:PGraphicsOpenGL
cameraEyeY	opengl/PGraphicsOpenGL.java	/^  protected float cameraEyeX, cameraEyeY, cameraEyeZ;$/;"	f	class:PGraphicsOpenGL
cameraEyeZ	opengl/PGraphicsOpenGL.java	/^  protected float cameraEyeX, cameraEyeY, cameraEyeZ;$/;"	f	class:PGraphicsOpenGL
cameraFOV	opengl/PGraphicsOpenGL.java	/^  public float cameraFOV;$/;"	f	class:PGraphicsOpenGL
cameraFar	opengl/PGraphicsOpenGL.java	/^  public float cameraNear, cameraFar;$/;"	f	class:PGraphicsOpenGL
cameraInv	opengl/PGraphicsOpenGL.java	/^  public PMatrix3D cameraInv;$/;"	f	class:PGraphicsOpenGL
cameraInvStack	opengl/PGraphicsOpenGL.java	/^  protected float[][] cameraInvStack = new float[MATRIX_STACK_DEPTH][16];$/;"	f	class:PGraphicsOpenGL
cameraNear	opengl/PGraphicsOpenGL.java	/^  public float cameraNear, cameraFar;$/;"	f	class:PGraphicsOpenGL
cameraStack	opengl/PGraphicsOpenGL.java	/^  protected float[][] cameraStack = new float[MATRIX_STACK_DEPTH][16];$/;"	f	class:PGraphicsOpenGL
cameraX	opengl/PGraphicsOpenGL.java	/^  public float cameraX, cameraY, cameraZ;$/;"	f	class:PGraphicsOpenGL
cameraY	opengl/PGraphicsOpenGL.java	/^  public float cameraX, cameraY, cameraZ;$/;"	f	class:PGraphicsOpenGL
cameraZ	opengl/PGraphicsOpenGL.java	/^  public float cameraX, cameraY, cameraZ;$/;"	f	class:PGraphicsOpenGL
canDraw	core/PApplet.java	/^  public boolean canDraw() {$/;"	m	class:PApplet
canDraw	core/PGraphics.java	/^  public boolean canDraw() {  \/\/ ignore$/;"	m	class:PGraphics
canDraw	core/PGraphicsJava2D.java	/^  public boolean canDraw() {$/;"	m	class:PGraphicsJava2D
canDraw	opengl/PGL.java	/^  protected abstract boolean canDraw();$/;"	m	class:PGL
canDraw	opengl/PGraphicsOpenGL.java	/^  public boolean canDraw() {$/;"	m	class:PGraphicsOpenGL
canDraw	opengl/PJOGL.java	/^  protected boolean canDraw() {$/;"	m	class:PJOGL
canvas	core/PApplet.java	/^  Canvas canvas;$/;"	f	class:PApplet
canvas	core/PGraphics.java	/^  public Canvas canvas;$/;"	f	class:PGraphics
canvas	core/PGraphicsJava2D.java	/^  Canvas canvas;$/;"	f	class:PGraphicsJava2D
canvas	opengl/PJOGL.java	/^  public static Canvas canvas;$/;"	f	class:PJOGL
canvasAWT	opengl/PJOGL.java	/^  protected static GLCanvas canvasAWT;$/;"	f	class:PJOGL
canvasNEWT	opengl/PJOGL.java	/^  protected static NewtCanvasAWT canvasNEWT;$/;"	f	class:PJOGL
capStyle	opengl/LineStroker.java	/^  private int capStyle;$/;"	f	class:LineStroker	file:
capabilities	opengl/PJOGL.java	/^  protected static GLCapabilitiesImmutable capabilities;$/;"	f	class:PJOGL
ceil	core/PApplet.java	/^  static public final int ceil(float n) {$/;"	m	class:PApplet
changedBackTex	opengl/PJOGL.java	/^  protected boolean changedBackTex = false;$/;"	f	class:PJOGL
changedFrontTex	opengl/PJOGL.java	/^  protected boolean changedFrontTex = false;$/;"	f	class:PJOGL
character	data/JSONTokener.java	/^  private long    character;$/;"	f	class:JSONTokener	file:
checkAlpha	core/PImage.java	/^  protected void checkAlpha() {$/;"	m	class:PImage
checkBounds	data/Table.java	/^  protected void checkBounds(int row, int column) {$/;"	m	class:Table
checkChildren	data/XML.java	/^  protected void checkChildren() {$/;"	m	class:XML
checkColumn	data/Table.java	/^  protected void checkColumn(int column) {$/;"	m	class:Table
checkColumnIndex	data/Table.java	/^  public int checkColumnIndex(String title) {$/;"	m	class:Table
checkExtension	core/PApplet.java	/^  static public String checkExtension(String filename) {$/;"	m	class:PApplet
checkFramebufferStatus	opengl/PGL.java	/^  public abstract int checkFramebufferStatus(int target);$/;"	m	class:PGL
checkFramebufferStatus	opengl/PJOGL.java	/^  public int checkFramebufferStatus(int target) {$/;"	m	class:PJOGL
checkGLThread	opengl/PGraphicsOpenGL.java	/^  protected boolean checkGLThread() {$/;"	m	class:PGraphicsOpenGL
checkMatrix	core/PShape.java	/^  protected void checkMatrix(int dimensions) {$/;"	m	class:PShape
checkMinMax	data/FloatDict.java	/^  private void checkMinMax(String functionName) {$/;"	m	class:FloatDict	file:
checkMinMax	data/FloatList.java	/^  private void checkMinMax(String functionName) {$/;"	m	class:FloatList	file:
checkMinMax	data/IntDict.java	/^  private void checkMinMax(String functionName) {$/;"	m	class:IntDict	file:
checkMinMax	data/IntList.java	/^  private void checkMinMax(String functionName) {$/;"	m	class:IntList	file:
checkPolyType	opengl/PShader.java	/^  protected boolean checkPolyType(int type) {$/;"	m	class:PShader
checkRetina	core/PApplet.java	/^  private boolean checkRetina() {$/;"	m	class:PApplet	file:
checkRow	data/Table.java	/^  protected void checkRow(int row) {$/;"	m	class:Table
checkSettings	core/PGraphics.java	/^  protected void checkSettings() {$/;"	m	class:PGraphics
checkTexture	opengl/PGraphicsOpenGL.java	/^  protected void checkTexture(Texture tex) {$/;"	m	class:PGraphicsOpenGL
childCount	core/PShape.java	/^  protected int childCount;$/;"	f	class:PShape
children	core/PShape.java	/^  protected PShape[] children;$/;"	f	class:PShape
children	data/XML.java	/^  protected XML[] children;$/;"	f	class:XML
clamp2D	opengl/PGraphicsOpenGL.java	/^    boolean clamp2D() {$/;"	m	class:PGraphicsOpenGL.Tessellator
clampEdges2D	opengl/PGraphicsOpenGL.java	/^    boolean clampEdges2D() {$/;"	m	class:PGraphicsOpenGL.Tessellator
clampLineLoop2D	opengl/PGraphicsOpenGL.java	/^    boolean clampLineLoop2D(int lineCount) {$/;"	m	class:PGraphicsOpenGL.Tessellator
clampLinePath	opengl/PGraphicsOpenGL.java	/^    boolean clampLinePath() {$/;"	m	class:PGraphicsOpenGL.Tessellator
clampLineStrip2D	opengl/PGraphicsOpenGL.java	/^    boolean clampLineStrip2D(int lineCount) {$/;"	m	class:PGraphicsOpenGL.Tessellator
clampLines2D	opengl/PGraphicsOpenGL.java	/^    boolean clampLines2D(int lineCount) {$/;"	m	class:PGraphicsOpenGL.Tessellator
clampPolygon	opengl/PGraphicsOpenGL.java	/^    boolean clampPolygon() {$/;"	m	class:PGraphicsOpenGL.Tessellator
clampQuadStrip	opengl/PGraphicsOpenGL.java	/^    boolean clampQuadStrip(int quadCount) {$/;"	m	class:PGraphicsOpenGL.Tessellator
clampQuads	opengl/PGraphicsOpenGL.java	/^    boolean clampQuads(int quadCount) {$/;"	m	class:PGraphicsOpenGL.Tessellator
clampSquarePoints2D	opengl/PGraphicsOpenGL.java	/^    boolean clampSquarePoints2D() {$/;"	m	class:PGraphicsOpenGL.Tessellator
clampTriangleFan	opengl/PGraphicsOpenGL.java	/^    boolean clampTriangleFan() {$/;"	m	class:PGraphicsOpenGL.Tessellator
clampTriangleStrip	opengl/PGraphicsOpenGL.java	/^    boolean clampTriangleStrip() {$/;"	m	class:PGraphicsOpenGL.Tessellator
clampTriangles	opengl/PGraphicsOpenGL.java	/^    boolean clampTriangles() {$/;"	m	class:PGraphicsOpenGL.Tessellator
clampTriangles	opengl/PGraphicsOpenGL.java	/^    boolean clampTriangles(int[] indices) {$/;"	m	class:PGraphicsOpenGL.Tessellator
clampXY	opengl/PGraphicsOpenGL.java	/^      boolean clampXY;$/;"	f	class:PGraphicsOpenGL.Tessellator.TessellatorCallback
clear	core/PApplet.java	/^  public void clear() {$/;"	m	class:PApplet
clear	core/PGraphics.java	/^  public void clear() {$/;"	m	class:PGraphics
clear	data/FloatDict.java	/^  public void clear() {$/;"	m	class:FloatDict
clear	data/FloatList.java	/^  public void clear() {$/;"	m	class:FloatList
clear	data/IntDict.java	/^  public void clear() {$/;"	m	class:IntDict
clear	data/IntList.java	/^  public void clear() {$/;"	m	class:IntList
clear	data/StringDict.java	/^  public void clear() {$/;"	m	class:StringDict
clear	data/StringList.java	/^  public void clear() {$/;"	m	class:StringList
clear	opengl/FrameBuffer.java	/^  public void clear() {$/;"	m	class:FrameBuffer
clear	opengl/PGL.java	/^  public abstract void clear(int buf);$/;"	m	class:PGL
clear	opengl/PGraphicsOpenGL.java	/^    void clear() {$/;"	m	class:PGraphicsOpenGL.InGeometry
clear	opengl/PGraphicsOpenGL.java	/^    void clear() {$/;"	m	class:PGraphicsOpenGL.IndexCache
clear	opengl/PGraphicsOpenGL.java	/^    void clear() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
clear	opengl/PGraphicsOpenGL.java	/^    void clear() {$/;"	m	class:PGraphicsOpenGL.TexCache
clear	opengl/PJOGL.java	/^  public void clear(int buf) {$/;"	m	class:PJOGL
clearColor	opengl/PGL.java	/^  public abstract void clearColor(float r, float g, float b, float a);$/;"	m	class:PGL
clearColor	opengl/PJOGL.java	/^  public void clearColor(float r, float g, float b, float a) {$/;"	m	class:PJOGL
clearColorBuffer	opengl/PGraphicsOpenGL.java	/^  protected boolean clearColorBuffer;$/;"	f	class:PGraphicsOpenGL
clearColorBuffer0	opengl/PGraphicsOpenGL.java	/^  protected boolean clearColorBuffer0;$/;"	f	class:PGraphicsOpenGL
clearDepth	opengl/PGL.java	/^  public abstract void clearDepth(float d);$/;"	m	class:PGL
clearDepth	opengl/PJOGL.java	/^  public void clearDepth(float d) {$/;"	m	class:PJOGL
clearEdges	opengl/PGraphicsOpenGL.java	/^    void clearEdges() {$/;"	m	class:PGraphicsOpenGL.InGeometry
clearPixels	core/PGraphicsJava2D.java	/^  int[] clearPixels;$/;"	f	class:PGraphicsJava2D
clearPixels	core/PGraphicsJava2D.java	/^  protected void clearPixels(int color) {$/;"	m	class:PGraphicsJava2D
clearRows	data/Table.java	/^  public void clearRows() {$/;"	m	class:Table
clearStencil	opengl/PGL.java	/^  public abstract void clearStencil(int s);$/;"	m	class:PGL
clearStencil	opengl/PJOGL.java	/^  public void clearStencil(int s) {$/;"	m	class:PJOGL
clip	core/PApplet.java	/^  public void clip(float a, float b, float c, float d) {$/;"	m	class:PApplet
clip	core/PGraphics.java	/^  public void clip(float a, float b, float c, float d) {$/;"	m	class:PGraphics
clip	opengl/PGraphicsOpenGL.java	/^  protected boolean clip = false;$/;"	f	class:PGraphicsOpenGL
clipImpl	core/PGraphics.java	/^  protected void clipImpl(float x1, float y1, float x2, float y2) {$/;"	m	class:PGraphics
clipImpl	core/PGraphicsJava2D.java	/^  protected void clipImpl(float x1, float y1, float x2, float y2) {$/;"	m	class:PGraphicsJava2D
clipImpl	opengl/PGraphicsOpenGL.java	/^  protected void clipImpl(float x1, float y1, float x2, float y2) {$/;"	m	class:PGraphicsOpenGL
clipRect	opengl/PGraphicsOpenGL.java	/^  protected int[] clipRect = {0, 0, 0, 0};$/;"	f	class:PGraphicsOpenGL
clone	core/PImage.java	/^  public Object clone() throws CloneNotSupportedException {  \/\/ ignore$/;"	m	class:PImage
clone	data/JSONObject.java	/^    protected final Object clone() {$/;"	m	class:JSONObject.Null
close	core/PShape.java	/^  protected boolean close;$/;"	f	class:PShape
close	opengl/LineStroker.java	/^  public void close() {$/;"	m	class:LineStroker
closeEdge	opengl/PGraphicsOpenGL.java	/^    int closeEdge(int i, int j) {$/;"	m	class:PGraphicsOpenGL.InGeometry
closePath	opengl/LinePath.java	/^  public final void closePath() {$/;"	m	class:LinePath
codeCheck	opengl/PGraphicsOpenGL.java	/^    void codeCheck() {$/;"	m	class:PGraphicsOpenGL.InGeometry
codeCount	opengl/PGraphicsOpenGL.java	/^    int codeCount;$/;"	f	class:PGraphicsOpenGL.InGeometry
codes	opengl/PGraphicsOpenGL.java	/^    int[] codes;$/;"	f	class:PGraphicsOpenGL.InGeometry
color	core/PApplet.java	/^  public final int color(float fgray) {$/;"	m	class:PApplet
color	core/PApplet.java	/^  public final int color(float fgray, float falpha) {$/;"	m	class:PApplet
color	core/PApplet.java	/^  public final int color(float v1, float v2, float v3) {$/;"	m	class:PApplet
color	core/PApplet.java	/^  public final int color(float v1, float v2, float v3, float alpha) {$/;"	m	class:PApplet
color	core/PApplet.java	/^  public final int color(int gray) {$/;"	m	class:PApplet
color	core/PApplet.java	/^  public final int color(int gray, int alpha) {$/;"	m	class:PApplet
color	core/PApplet.java	/^  public final int color(int v1, int v2, int v3) {$/;"	m	class:PApplet
color	core/PApplet.java	/^  public final int color(int v1, int v2, int v3, int alpha) {$/;"	m	class:PApplet
color	core/PGraphics.java	/^  public final int color(float gray) {  \/\/ ignore$/;"	m	class:PGraphics
color	core/PGraphics.java	/^  public final int color(float gray, float alpha) {  \/\/ ignore$/;"	m	class:PGraphics
color	core/PGraphics.java	/^  public final int color(float v1, float v2, float v3) {  \/\/ ignore$/;"	m	class:PGraphics
color	core/PGraphics.java	/^  public final int color(float v1, float v2, float v3, float a) {  \/\/ ignore$/;"	m	class:PGraphics
color	core/PGraphics.java	/^  public final int color(int c) {  \/\/ ignore$/;"	m	class:PGraphics
color	core/PGraphics.java	/^  public final int color(int c, float alpha) {  \/\/ ignore$/;"	m	class:PGraphics
color	core/PGraphics.java	/^  public final int color(int c, int alpha) {  \/\/ ignore$/;"	m	class:PGraphics
color	core/PGraphics.java	/^  public final int color(int v1, int v2, int v3) {  \/\/ ignore$/;"	m	class:PGraphics
color	core/PGraphics.java	/^  public final int color(int v1, int v2, int v3, int a) {  \/\/ ignore$/;"	m	class:PGraphics
color	core/PShapeSVG.java	/^    int[] color;$/;"	f	class:PShapeSVG.Gradient
color	core/PShapeSVG.java	/^    int[] color;$/;"	f	class:PShapeSVG.LinearGradientPaint
color	core/PShapeSVG.java	/^    int[] color;$/;"	f	class:PShapeSVG.RadialGradientPaint
color0	opengl/LineStroker.java	/^  private int scolor0, pcolor0, color0;$/;"	f	class:LineStroker	file:
colorBuffer	opengl/PGL.java	/^  protected IntBuffer colorBuffer;$/;"	f	class:PGL
colorBuffer	opengl/Texture.java	/^  protected boolean colorBuffer;    \/\/ true if it is the color attachment of$/;"	f	class:Texture
colorBuffer	opengl/Texture.java	/^  public boolean colorBuffer() {$/;"	m	class:Texture
colorBuffer	opengl/Texture.java	/^  public void colorBuffer(boolean value) {$/;"	m	class:Texture
colorBufferTex	opengl/FrameBuffer.java	/^  protected Texture[] colorBufferTex;$/;"	f	class:FrameBuffer
colorCalc	core/PGraphics.java	/^  protected void colorCalc(float gray) {$/;"	m	class:PGraphics
colorCalc	core/PGraphics.java	/^  protected void colorCalc(float gray, float alpha) {$/;"	m	class:PGraphics
colorCalc	core/PGraphics.java	/^  protected void colorCalc(float x, float y, float z) {$/;"	m	class:PGraphics
colorCalc	core/PGraphics.java	/^  protected void colorCalc(float x, float y, float z, float a) {$/;"	m	class:PGraphics
colorCalc	core/PGraphics.java	/^  protected void colorCalc(int rgb) {$/;"	m	class:PGraphics
colorCalc	core/PGraphics.java	/^  protected void colorCalc(int rgb, float alpha) {$/;"	m	class:PGraphics
colorCalc	core/PShape.java	/^  protected void colorCalc(float gray) {$/;"	m	class:PShape
colorCalc	core/PShape.java	/^  protected void colorCalc(float gray, float alpha) {$/;"	m	class:PShape
colorCalc	core/PShape.java	/^  protected void colorCalc(float x, float y, float z) {$/;"	m	class:PShape
colorCalc	core/PShape.java	/^  protected void colorCalc(float x, float y, float z, float a) {$/;"	m	class:PShape
colorCalc	core/PShape.java	/^  protected void colorCalc(int rgb) {$/;"	m	class:PShape
colorCalc	core/PShape.java	/^  protected void colorCalc(int rgb, float alpha) {$/;"	m	class:PShape
colorCalcARGB	core/PGraphics.java	/^  protected void colorCalcARGB(int argb, float alpha) {$/;"	m	class:PGraphics
colorCalcARGB	core/PShape.java	/^  protected void colorCalcARGB(int argb, float alpha) {$/;"	m	class:PShape
colorIdx	opengl/LinePath.java	/^    int colorIdx;$/;"	f	class:LinePath.PathIterator
colorLoc	opengl/PShader.java	/^  protected int colorLoc;$/;"	f	class:PShader
colorMask	opengl/PGL.java	/^  public abstract void colorMask(boolean r, boolean g, boolean b, boolean a);$/;"	m	class:PGL
colorMask	opengl/PJOGL.java	/^  public void colorMask(boolean r, boolean g, boolean b, boolean a) {$/;"	m	class:PJOGL
colorMode	core/PApplet.java	/^  public void colorMode(int mode) {$/;"	m	class:PApplet
colorMode	core/PApplet.java	/^  public void colorMode(int mode, float max) {$/;"	m	class:PApplet
colorMode	core/PApplet.java	/^  public void colorMode(int mode, float max1, float max2, float max3) {$/;"	m	class:PApplet
colorMode	core/PApplet.java	/^  public void colorMode(int mode,$/;"	m	class:PApplet
colorMode	core/PGraphics.java	/^  public int colorMode; \/\/ = RGB;$/;"	f	class:PGraphics
colorMode	core/PGraphics.java	/^  public void colorMode(int mode) {$/;"	m	class:PGraphics
colorMode	core/PGraphics.java	/^  public void colorMode(int mode, float max) {$/;"	m	class:PGraphics
colorMode	core/PGraphics.java	/^  public void colorMode(int mode, float max1, float max2, float max3) {$/;"	m	class:PGraphics
colorMode	core/PGraphics.java	/^  public void colorMode(int mode,$/;"	m	class:PGraphics
colorMode	core/PShape.java	/^  public int colorMode; \/\/ = RGB;$/;"	f	class:PShape
colorMode	core/PShape.java	/^  public void colorMode(int mode) {$/;"	m	class:PShape
colorMode	core/PShape.java	/^  public void colorMode(int mode, float max) {$/;"	m	class:PShape
colorMode	core/PShape.java	/^  public void colorMode(int mode, float maxX, float maxY, float maxZ) {$/;"	m	class:PShape
colorMode	core/PShape.java	/^  public void colorMode(int mode,$/;"	m	class:PShape
colorMode	core/PStyle.java	/^  public int colorMode;$/;"	f	class:PStyle
colorModeA	core/PGraphics.java	/^  public float colorModeA; \/\/ = 255;$/;"	f	class:PGraphics
colorModeA	core/PShape.java	/^  public float colorModeA; \/\/ = 255;$/;"	f	class:PShape
colorModeA	core/PStyle.java	/^  public float colorModeA;$/;"	f	class:PStyle
colorModeDefault	core/PGraphics.java	/^  boolean colorModeDefault; \/\/ = true;$/;"	f	class:PGraphics
colorModeDefault	core/PShape.java	/^  boolean colorModeDefault; \/\/ = true;$/;"	f	class:PShape
colorModeScale	core/PGraphics.java	/^  boolean colorModeScale; \/\/ = true;$/;"	f	class:PGraphics
colorModeScale	core/PShape.java	/^  boolean colorModeScale; \/\/ = true;$/;"	f	class:PShape
colorModeX	core/PGraphics.java	/^  public float colorModeX; \/\/ = 255;$/;"	f	class:PGraphics
colorModeX	core/PShape.java	/^  public float colorModeX; \/\/ = 255;$/;"	f	class:PShape
colorModeX	core/PStyle.java	/^  public float colorModeX;$/;"	f	class:PStyle
colorModeY	core/PGraphics.java	/^  public float colorModeY; \/\/ = 255;$/;"	f	class:PGraphics
colorModeY	core/PShape.java	/^  public float colorModeY; \/\/ = 255;$/;"	f	class:PShape
colorModeY	core/PStyle.java	/^  public float colorModeY;$/;"	f	class:PStyle
colorModeZ	core/PGraphics.java	/^  public float colorModeZ; \/\/ = 255;$/;"	f	class:PGraphics
colorModeZ	core/PShape.java	/^  public float colorModeZ; \/\/ = 255;$/;"	f	class:PShape
colorModeZ	core/PStyle.java	/^  public float colorModeZ;$/;"	f	class:PStyle
colorShaderDefRegexp	opengl/PShader.java	/^  static protected String colorShaderDefRegexp =$/;"	f	class:PShader
colors	opengl/PGraphicsOpenGL.java	/^    int[] colors;$/;"	f	class:PGraphicsOpenGL.InGeometry
columnCategories	data/Table.java	/^  HashMapBlows[] columnCategories;$/;"	f	class:Table
columnIndices	data/Table.java	/^  HashMap<String, Integer> columnIndices;$/;"	f	class:Table
columnTitles	data/Table.java	/^  String[] columnTitles;$/;"	f	class:Table
columnTypes	data/Table.java	/^  int[] columnTypes;$/;"	f	class:Table
columns	data/Table.java	/^  protected Object[] columns;  \/\/ [column]$/;"	f	class:Table
combine	opengl/PGL.java	/^    public void combine(double[] coords, Object[] data,$/;"	m	interface:PGL.TessellatorCallback
combine	opengl/PGraphicsOpenGL.java	/^      public void combine(double[] coords, Object[] data,$/;"	m	class:PGraphicsOpenGL.Tessellator.TessellatorCallback
combine	opengl/PJOGL.java	/^      public void combine(double[] coords, Object[] data,$/;"	m	class:PJOGL.Tessellator.GLUCallback
compare	data/Sort.java	/^  abstract public float compare(int a, int b);$/;"	m	class:Sort
compileFragmentShader	opengl/PShader.java	/^  protected boolean compileFragmentShader() {$/;"	m	class:PShader
compileShader	opengl/PGL.java	/^  public abstract void compileShader(int shader);$/;"	m	class:PGL
compileShader	opengl/PJOGL.java	/^  public void compileShader(int shader) {$/;"	m	class:PJOGL
compileVertexShader	opengl/PShader.java	/^  protected boolean compileVertexShader() {$/;"	m	class:PShader
compiled	opengl/PGL.java	/^  protected boolean compiled(int shader) {$/;"	m	class:PGL
compose	core/PGraphicsJava2D.java	/^    public void compose(Raster src, Raster dstIn, WritableRaster dstOut) {$/;"	m	class:PGraphicsJava2D.BlendingContext
compressedTexImage2D	opengl/PGL.java	/^  public abstract void compressedTexImage2D(int target, int level, int internalFormat, int width, int height, int border, int imageSize, Buffer data);$/;"	m	class:PGL
compressedTexImage2D	opengl/PJOGL.java	/^  public void compressedTexImage2D(int target, int level, int internalFormat, int width, int height, int border, int imageSize, Buffer data) {$/;"	m	class:PJOGL
compressedTexSubImage2D	opengl/PGL.java	/^  public abstract void compressedTexSubImage2D(int target, int level, int xOffset, int yOffset, int width, int height, int format, int imageSize, Buffer data);$/;"	m	class:PGL
compressedTexSubImage2D	opengl/PJOGL.java	/^  public void compressedTexSubImage2D(int target, int level, int xOffset, int yOffset, int width, int height, int format, int imageSize, Buffer data) {$/;"	m	class:PJOGL
computeMiter	opengl/LineStroker.java	/^  private void computeMiter(int ix0, int iy0, int ix1, int iy1, int ix0p,$/;"	m	class:LineStroker	file:
computeOffset	opengl/LineStroker.java	/^  private void computeOffset(int x0, int y0, int x1, int y1, int[] m) {$/;"	m	class:LineStroker	file:
computeRoundJoin	opengl/LineStroker.java	/^  private int computeRoundJoin(int cx, int cy, int xa, int ya, int xb, int yb,$/;"	m	class:LineStroker	file:
concat	core/PApplet.java	/^  static public Object concat(Object a, Object b) {$/;"	m	class:PApplet
concat	core/PApplet.java	/^  static public String[] concat(String a[], String b[]) {$/;"	m	class:PApplet
concat	core/PApplet.java	/^  static public boolean[] concat(boolean a[], boolean b[]) {$/;"	m	class:PApplet
concat	core/PApplet.java	/^  static public byte[] concat(byte a[], byte b[]) {$/;"	m	class:PApplet
concat	core/PApplet.java	/^  static public char[] concat(char a[], char b[]) {$/;"	m	class:PApplet
concat	core/PApplet.java	/^  static public float[] concat(float a[], float b[]) {$/;"	m	class:PApplet
concat	core/PApplet.java	/^  static public int[] concat(int a[], int b[]) {$/;"	m	class:PApplet
constrain	core/PApplet.java	/^  static public final float constrain(float amt, float low, float high) {$/;"	m	class:PApplet
constrain	core/PApplet.java	/^  static public final int constrain(int amt, int low, int high) {$/;"	m	class:PApplet
consumeUniforms	opengl/PShader.java	/^  protected void consumeUniforms() {$/;"	m	class:PShader
contains	core/PShape.java	/^  public boolean contains(float x, float y) {$/;"	m	class:PShape
contains	opengl/PShapeOpenGL.java	/^  public boolean contains(float x, float y) {$/;"	m	class:PShapeOpenGL
containsTexture	opengl/PGraphicsOpenGL.java	/^    boolean containsTexture(PImage img) {$/;"	m	class:PGraphicsOpenGL.TexCache
context	opengl/FrameBuffer.java	/^  protected int context;   \/\/ The context that created this framebuffer.$/;"	f	class:FrameBuffer
context	opengl/PGraphicsOpenGL.java	/^    int context;$/;"	f	class:PGraphicsOpenGL.GLResource
context	opengl/PJOGL.java	/^  public static GLContext context;$/;"	f	class:PJOGL
context	opengl/PShader.java	/^  protected int context;      \/\/ The context that created this shader.$/;"	f	class:PShader
context	opengl/PShapeOpenGL.java	/^  protected int context;      \/\/ The context that created this shape.$/;"	f	class:PShapeOpenGL
context	opengl/Texture.java	/^  protected int context;            \/\/ The context that created this texture.$/;"	f	class:Texture
contextIsCurrent	opengl/PGL.java	/^  protected boolean contextIsCurrent(int other) {$/;"	m	class:PGL
contextIsOutdated	opengl/FontTexture.java	/^  public boolean contextIsOutdated() {$/;"	m	class:FontTexture
contextIsOutdated	opengl/FrameBuffer.java	/^  protected boolean contextIsOutdated() {$/;"	m	class:FrameBuffer
contextIsOutdated	opengl/PShader.java	/^  protected boolean contextIsOutdated() {$/;"	m	class:PShader
contextIsOutdated	opengl/PShapeOpenGL.java	/^  protected boolean contextIsOutdated() {$/;"	m	class:PShapeOpenGL
contextIsOutdated	opengl/Texture.java	/^  protected boolean contextIsOutdated() {$/;"	m	class:Texture
convertBasic	data/Table.java	/^  protected void convertBasic(BufferedReader reader, boolean tsv,$/;"	m	class:Table
convertFragmentSource	opengl/PGL.java	/^  protected String[] convertFragmentSource(String[] fragSrc0,$/;"	m	class:PGL
convertFragmentSource	opengl/PJOGL.java	/^  protected String[] convertFragmentSource(String[] fragSrc0,$/;"	m	class:PJOGL
convertRow	data/Table.java	/^  protected void convertRow(DataOutputStream output, String[] pieces) throws IOException {$/;"	m	class:Table
convertToARGB	opengl/Texture.java	/^  protected void convertToARGB(int[] pixels) {$/;"	m	class:Texture
convertToRGBA	opengl/Texture.java	/^  protected void convertToRGBA(int[] pixels, int format, int w, int h)  {$/;"	m	class:Texture
convertVertexSource	opengl/PGL.java	/^  protected String[] convertVertexSource(String[] vertSrc0,$/;"	m	class:PGL
convertVertexSource	opengl/PJOGL.java	/^  protected String[] convertVertexSource(String[] vertSrc0,$/;"	m	class:PJOGL
copy	core/PApplet.java	/^  public void copy(PImage src,$/;"	m	class:PApplet
copy	core/PApplet.java	/^  public void copy(int sx, int sy, int sw, int sh,$/;"	m	class:PApplet
copy	core/PGraphicsJava2D.java	/^  public void copy(PImage src,$/;"	m	class:PGraphicsJava2D
copy	core/PGraphicsJava2D.java	/^  public void copy(int sx, int sy, int sw, int sh,$/;"	m	class:PGraphicsJava2D
copy	core/PGraphicsRetina2D.java	/^  public void copy(PImage src,$/;"	m	class:PGraphicsRetina2D
copy	core/PGraphicsRetina2D.java	/^  public void copy(int sx, int sy, int sw, int sh,$/;"	m	class:PGraphicsRetina2D
copy	core/PImage.java	/^  public void copy(PImage src,$/;"	m	class:PImage
copy	core/PImage.java	/^  public void copy(int sx, int sy, int sw, int sh,$/;"	m	class:PImage
copy	data/FloatDict.java	/^  public FloatDict copy() {$/;"	m	class:FloatDict
copy	data/FloatList.java	/^  public FloatList copy() {$/;"	m	class:FloatList
copy	data/IntDict.java	/^  public IntDict copy() {$/;"	m	class:IntDict
copy	data/IntList.java	/^  public IntList copy() {$/;"	m	class:IntList
copy	data/StringDict.java	/^  public StringDict copy() {$/;"	m	class:StringDict
copy	data/StringList.java	/^  public StringList copy() {$/;"	m	class:StringList
copy	opengl/FrameBuffer.java	/^  public void copy(FrameBuffer dest, FrameBuffer current) {$/;"	m	class:FrameBuffer
copy	opengl/PGraphicsOpenGL.java	/^  public void copy(PImage src,$/;"	m	class:PGraphicsOpenGL
copy	opengl/PGraphicsOpenGL.java	/^  public void copy(int sx, int sy, int sw, int sh,$/;"	m	class:PGraphicsOpenGL
copyBufferFromSource	opengl/Texture.java	/^  public void copyBufferFromSource(Object natRef, ByteBuffer byteBuf,$/;"	m	class:Texture
copyGeometry	core/PShape.java	/^  static protected void copyGeometry(PShape src, PShape dest) {$/;"	m	class:PShape
copyGroup	core/PShape.java	/^  static protected void copyGroup(PApplet parent, PShape src, PShape dest) {$/;"	m	class:PShape
copyGroup2D	opengl/PShapeOpenGL.java	/^  static public void copyGroup2D(PApplet parent, PShape src, PShape dest) {$/;"	m	class:PShapeOpenGL
copyGroup3D	opengl/PShapeOpenGL.java	/^  static public void copyGroup3D(PApplet parent, PShape src, PShape dest) {$/;"	m	class:PShapeOpenGL
copyImage	core/PShape.java	/^  static protected void copyImage(PShape src, PShape dest) {$/;"	m	class:PShape
copyLineAttributes	opengl/PShapeOpenGL.java	/^  protected void copyLineAttributes(int offset, int size) {$/;"	m	class:PShapeOpenGL
copyLineColors	opengl/PShapeOpenGL.java	/^  protected void copyLineColors(int offset, int size) {$/;"	m	class:PShapeOpenGL
copyLineVertices	opengl/PShapeOpenGL.java	/^  protected void copyLineVertices(int offset, int size) {$/;"	m	class:PShapeOpenGL
copyMatrix	core/PShape.java	/^  static protected void copyMatrix(PShape src, PShape dest) {$/;"	m	class:PShape
copyObject	opengl/Texture.java	/^  protected void copyObject(Texture src) {$/;"	m	class:Texture
copyOf	opengl/LinePath.java	/^  public static byte[] copyOf(byte[] source, int length) {$/;"	m	class:LinePath
copyOf	opengl/LinePath.java	/^  public static float[] copyOf(float[] source, int length) {$/;"	m	class:LinePath
copyOf	opengl/LinePath.java	/^  public static int[] copyOf(int[] source, int length) {$/;"	m	class:LinePath
copyPath	core/PShape.java	/^  static protected void copyPath(PShape src, PShape dest) {$/;"	m	class:PShape
copyPointAttributes	opengl/PShapeOpenGL.java	/^  protected void copyPointAttributes(int offset, int size) {$/;"	m	class:PShapeOpenGL
copyPointColors	opengl/PShapeOpenGL.java	/^  protected void copyPointColors(int offset, int size) {$/;"	m	class:PShapeOpenGL
copyPointVertices	opengl/PShapeOpenGL.java	/^  protected void copyPointVertices(int offset, int size) {$/;"	m	class:PShapeOpenGL
copyPolyAmbient	opengl/PShapeOpenGL.java	/^  protected void copyPolyAmbient(int offset, int size) {$/;"	m	class:PShapeOpenGL
copyPolyColors	opengl/PShapeOpenGL.java	/^  protected void copyPolyColors(int offset, int size) {$/;"	m	class:PShapeOpenGL
copyPolyEmissive	opengl/PShapeOpenGL.java	/^  protected void copyPolyEmissive(int offset, int size) {$/;"	m	class:PShapeOpenGL
copyPolyNormals	opengl/PShapeOpenGL.java	/^  protected void copyPolyNormals(int offset, int size) {$/;"	m	class:PShapeOpenGL
copyPolyShininess	opengl/PShapeOpenGL.java	/^  protected void copyPolyShininess(int offset, int size) {$/;"	m	class:PShapeOpenGL
copyPolySpecular	opengl/PShapeOpenGL.java	/^  protected void copyPolySpecular(int offset, int size) {$/;"	m	class:PShapeOpenGL
copyPolyTexCoords	opengl/PShapeOpenGL.java	/^  protected void copyPolyTexCoords(int offset, int size) {$/;"	m	class:PShapeOpenGL
copyPolyVertices	opengl/PShapeOpenGL.java	/^  protected void copyPolyVertices(int offset, int size) {$/;"	m	class:PShapeOpenGL
copyPrimitive	core/PShape.java	/^  static protected void copyPrimitive(PShape src, PShape dest) {$/;"	m	class:PShape
copyStyles	core/PShape.java	/^  static protected void copyStyles(PShape src, PShape dest) {$/;"	m	class:PShape
copyTexImage2D	opengl/PGL.java	/^  public abstract void copyTexImage2D(int target, int level, int internalFormat, int x, int y, int width, int height, int border);$/;"	m	class:PGL
copyTexImage2D	opengl/PJOGL.java	/^  public void copyTexImage2D(int target, int level, int internalFormat, int x, int y, int width, int height, int border) {$/;"	m	class:PJOGL
copyTexSubImage2D	opengl/PGL.java	/^  public abstract void copyTexSubImage2D(int target, int level, int xOffset, int yOffset, int x, int y, int width, int height);$/;"	m	class:PGL
copyTexSubImage2D	opengl/PJOGL.java	/^  public void copyTexSubImage2D(int target, int level, int xOffset, int yOffset, int x, int y, int width, int height) {$/;"	m	class:PJOGL
copyTexture	opengl/Texture.java	/^  protected void copyTexture(Texture tex, int x, int y, int w, int h,$/;"	m	class:Texture
copyTexture	opengl/Texture.java	/^  protected void copyTexture(int texTarget, int texName,$/;"	m	class:Texture
copyToTexture	opengl/PGL.java	/^  protected void copyToTexture(int target, int format, int id, int x, int y,$/;"	m	class:PGL
cos	core/PApplet.java	/^  static public final float cos(float angle) {$/;"	m	class:PApplet
cos	core/PMatrix2D.java	/^  static private final float cos(float angle) {$/;"	m	class:PMatrix2D	file:
cos	core/PMatrix3D.java	/^  static private final float cos(float angle) {$/;"	m	class:PMatrix3D	file:
cosLUT	core/PGraphics.java	/^  static final protected float cosLUT[];$/;"	f	class:PGraphics
count	core/PApplet.java	/^    int count;$/;"	f	class:PApplet.RegisteredMethods
count	core/PApplet.java	/^    protected int count;$/;"	f	class:PApplet.InternalEventQueue
count	core/PShapeSVG.java	/^    int count;$/;"	f	class:PShapeSVG.Gradient
count	core/PShapeSVG.java	/^    int count;$/;"	f	class:PShapeSVG.LinearGradientPaint
count	core/PShapeSVG.java	/^    int count;$/;"	f	class:PShapeSVG.RadialGradientPaint
count	data/FloatDict.java	/^  protected int count;$/;"	f	class:FloatDict
count	data/FloatList.java	/^  int count;$/;"	f	class:FloatList
count	data/IntDict.java	/^  protected int count;$/;"	f	class:IntDict
count	data/IntList.java	/^  protected int count;$/;"	f	class:IntList
count	data/StringDict.java	/^  protected int count;$/;"	f	class:StringDict
count	data/StringList.java	/^  int count;$/;"	f	class:StringList
count	event/MouseEvent.java	/^  protected int count;$/;"	f	class:MouseEvent
create	data/FloatDict.java	/^  protected void create(String what, float much) {$/;"	m	class:FloatDict
create	data/IntDict.java	/^  protected void create(String what, int much) {$/;"	m	class:IntDict
create	data/StringDict.java	/^  protected void create(String key, String value) {$/;"	m	class:StringDict
createColorBufferMultisample	opengl/FrameBuffer.java	/^  protected void createColorBufferMultisample() {$/;"	m	class:FrameBuffer
createContext	core/PShapeSVG.java	/^    public PaintContext createContext(ColorModel cm,$/;"	m	class:PShapeSVG.LinearGradientPaint
createContext	core/PShapeSVG.java	/^    public PaintContext createContext(ColorModel cm,$/;"	m	class:PShapeSVG.RadialGradientPaint
createDefaultFont	core/PApplet.java	/^  protected PFont createDefaultFont(float size) {$/;"	m	class:PApplet
createDepthBuffer	opengl/FrameBuffer.java	/^  protected void createDepthBuffer() {$/;"	m	class:FrameBuffer
createEmptyContext	opengl/PGL.java	/^  protected int createEmptyContext() {$/;"	m	class:PGL
createFBOLayer	opengl/PGL.java	/^  protected void createFBOLayer() {$/;"	m	class:PGL
createFont	core/PApplet.java	/^  public PFont createFont(String name, float size) {$/;"	m	class:PApplet
createFont	core/PApplet.java	/^  public PFont createFont(String name, float size, boolean smooth) {$/;"	m	class:PApplet
createFont	core/PApplet.java	/^  public PFont createFont(String name, float size,$/;"	m	class:PApplet
createFontOutline	opengl/PGL.java	/^  protected abstract FontOutline createFontOutline(char ch, Object font);$/;"	m	class:PGL
createFontOutline	opengl/PJOGL.java	/^  protected FontOutline createFontOutline(char ch, Object font) {$/;"	m	class:PJOGL
createFrameBufferObject	opengl/PGraphicsOpenGL.java	/^  protected static int createFrameBufferObject(int context) {$/;"	m	class:PGraphicsOpenGL
createGLSLFragShaderObject	opengl/PGraphicsOpenGL.java	/^  protected static int createGLSLFragShaderObject(int context) {$/;"	m	class:PGraphicsOpenGL
createGLSLProgramObject	opengl/PGraphicsOpenGL.java	/^  protected static int createGLSLProgramObject(int context) {$/;"	m	class:PGraphicsOpenGL
createGLSLVertShaderObject	opengl/PGraphicsOpenGL.java	/^  protected static int createGLSLVertShaderObject(int context) {$/;"	m	class:PGraphicsOpenGL
createGraphics	core/PApplet.java	/^  public PGraphics createGraphics(int w, int h) {$/;"	m	class:PApplet
createGraphics	core/PApplet.java	/^  public PGraphics createGraphics(int w, int h, String renderer) {$/;"	m	class:PApplet
createGraphics	core/PApplet.java	/^  public PGraphics createGraphics(int w, int h,$/;"	m	class:PApplet
createImage	core/PApplet.java	/^  public PImage createImage(int w, int h, int format) {$/;"	m	class:PApplet
createInput	core/PApplet.java	/^  public InputStream createInput(String filename) {$/;"	m	class:PApplet
createInput	core/PApplet.java	/^  static public InputStream createInput(File file) {$/;"	m	class:PApplet
createInputRaw	core/PApplet.java	/^  public InputStream createInputRaw(String filename) {$/;"	m	class:PApplet
createLineBuffers	opengl/PGraphicsOpenGL.java	/^  protected void createLineBuffers() {$/;"	m	class:PGraphicsOpenGL
createOutput	core/PApplet.java	/^  public OutputStream createOutput(String filename) {$/;"	m	class:PApplet
createOutput	core/PApplet.java	/^  static public OutputStream createOutput(File file) {$/;"	m	class:PApplet
createPGL	opengl/PGraphicsOpenGL.java	/^  protected PGL createPGL(PGraphicsOpenGL pg) {$/;"	m	class:PGraphicsOpenGL
createPTexture	opengl/PGraphicsOpenGL.java	/^  protected void createPTexture() {$/;"	m	class:PGraphicsOpenGL
createPackedDepthStencilBuffer	opengl/FrameBuffer.java	/^  protected void createPackedDepthStencilBuffer() {$/;"	m	class:FrameBuffer
createPath	core/PApplet.java	/^  static public void createPath(File file) {$/;"	m	class:PApplet
createPath	core/PApplet.java	/^  static public void createPath(String path) {$/;"	m	class:PApplet
createPixelBuffer	opengl/FrameBuffer.java	/^  protected void createPixelBuffer() {$/;"	m	class:FrameBuffer
createPointBuffers	opengl/PGraphicsOpenGL.java	/^  protected void createPointBuffers() {$/;"	m	class:PGraphicsOpenGL
createPolyBuffers	opengl/PGraphicsOpenGL.java	/^  protected void createPolyBuffers() {$/;"	m	class:PGraphicsOpenGL
createProgram	opengl/PGL.java	/^  protected int createProgram(int vertexShader, int fragmentShader) {$/;"	m	class:PGL
createProgram	opengl/PGL.java	/^  public abstract int createProgram();$/;"	m	class:PGL
createProgram	opengl/PJOGL.java	/^  public int createProgram() {$/;"	m	class:PJOGL
createReader	core/PApplet.java	/^  public BufferedReader createReader(String filename) {$/;"	m	class:PApplet
createReader	core/PApplet.java	/^  static public BufferedReader createReader(File file) {$/;"	m	class:PApplet
createReader	core/PApplet.java	/^  static public BufferedReader createReader(InputStream input) {$/;"	m	class:PApplet
createRenderBufferObject	opengl/PGraphicsOpenGL.java	/^  protected static int createRenderBufferObject(int context) {$/;"	m	class:PGraphicsOpenGL
createShader	opengl/PGL.java	/^  protected int createShader(int shaderType, String source) {$/;"	m	class:PGL
createShader	opengl/PGL.java	/^  public abstract int createShader(int type);$/;"	m	class:PGL
createShader	opengl/PJOGL.java	/^  public int createShader(int type) {$/;"	m	class:PJOGL
createShape	core/PApplet.java	/^  public PShape createShape() {$/;"	m	class:PApplet
createShape	core/PApplet.java	/^  public PShape createShape(PShape source) {$/;"	m	class:PApplet
createShape	core/PApplet.java	/^  public PShape createShape(int kind, float... p) {$/;"	m	class:PApplet
createShape	core/PApplet.java	/^  public PShape createShape(int type) {$/;"	m	class:PApplet
createShape	core/PGraphics.java	/^  public PShape createShape() {$/;"	m	class:PGraphics
createShape	core/PGraphics.java	/^  public PShape createShape(PShape source) {$/;"	m	class:PGraphics
createShape	core/PGraphics.java	/^  public PShape createShape(int kind, float... p) {$/;"	m	class:PGraphics
createShape	core/PGraphics.java	/^  public PShape createShape(int type) {$/;"	m	class:PGraphics
createShape	core/PShape.java	/^  static protected PShape createShape(PApplet parent, PShape src) {$/;"	m	class:PShape
createShape	opengl/PGraphics2D.java	/^  public PShape createShape() {$/;"	m	class:PGraphics2D
createShape	opengl/PGraphics2D.java	/^  public PShape createShape(PShape source) {$/;"	m	class:PGraphics2D
createShape	opengl/PGraphics2D.java	/^  public PShape createShape(int kind, float... p) {$/;"	m	class:PGraphics2D
createShape	opengl/PGraphics2D.java	/^  public PShape createShape(int type) {$/;"	m	class:PGraphics2D
createShape	opengl/PGraphics3D.java	/^  public PShape createShape() {$/;"	m	class:PGraphics3D
createShape	opengl/PGraphics3D.java	/^  public PShape createShape(PShape source) {$/;"	m	class:PGraphics3D
createShape	opengl/PGraphics3D.java	/^  public PShape createShape(int kind, float... p) {$/;"	m	class:PGraphics3D
createShape	opengl/PGraphics3D.java	/^  public PShape createShape(int type) {$/;"	m	class:PGraphics3D
createShape2D	opengl/PShapeOpenGL.java	/^  static public PShapeOpenGL createShape2D(PApplet parent, PShape src) {$/;"	m	class:PShapeOpenGL
createShape3D	opengl/PShapeOpenGL.java	/^  public static PShapeOpenGL createShape3D(PApplet parent, PShape src) {$/;"	m	class:PShapeOpenGL
createShapeImpl	opengl/PGraphics2D.java	/^  static protected PShapeOpenGL createShapeImpl(PApplet parent, int type) {$/;"	m	class:PGraphics2D
createShapeImpl	opengl/PGraphics2D.java	/^  static protected PShapeOpenGL createShapeImpl(PApplet parent,$/;"	m	class:PGraphics2D
createShapeImpl	opengl/PGraphics3D.java	/^  static protected PShapeOpenGL createShapeImpl(PApplet parent, int type) {$/;"	m	class:PGraphics3D
createShapeImpl	opengl/PGraphics3D.java	/^  static protected PShapeOpenGL createShapeImpl(PApplet parent,$/;"	m	class:PGraphics3D
createStencilBuffer	opengl/FrameBuffer.java	/^  protected void createStencilBuffer() {$/;"	m	class:FrameBuffer
createStrokedPath	opengl/LinePath.java	/^  static public LinePath createStrokedPath(LinePath src, float weight,$/;"	m	class:LinePath
createSubset	data/Table.java	/^  protected Table createSubset(int[] rowSubset) {$/;"	m	class:Table
createTessellator	opengl/PGL.java	/^  protected abstract Tessellator createTessellator(TessellatorCallback callback);$/;"	m	class:PGL
createTessellator	opengl/PJOGL.java	/^  protected Tessellator createTessellator(TessellatorCallback callback) {$/;"	m	class:PJOGL
createTextureObject	opengl/PGraphicsOpenGL.java	/^  protected static int createTextureObject(int context) {$/;"	m	class:PGraphicsOpenGL
createVertexBufferObject	opengl/PGraphicsOpenGL.java	/^  protected static int createVertexBufferObject(int context) {$/;"	m	class:PGraphicsOpenGL
createWriter	core/PApplet.java	/^  public PrintWriter createWriter(String filename) {$/;"	m	class:PApplet
createWriter	core/PApplet.java	/^  static public PrintWriter createWriter(File file) {$/;"	m	class:PApplet
createWriter	core/PApplet.java	/^  static public PrintWriter createWriter(OutputStream output) {$/;"	m	class:PApplet
crop	data/FloatDict.java	/^  protected void crop() {$/;"	m	class:FloatDict
crop	data/FloatList.java	/^  private void crop() {$/;"	m	class:FloatList	file:
crop	data/IntList.java	/^  private void crop() {$/;"	m	class:IntList	file:
crop	data/StringDict.java	/^  protected void crop() {$/;"	m	class:StringDict
crop	data/StringList.java	/^  private void crop() {$/;"	m	class:StringList	file:
crop	opengl/FontTexture.java	/^    int[] crop;$/;"	f	class:FontTexture.TextureInfo
cross	core/PVector.java	/^  public PVector cross(PVector v) {$/;"	m	class:PVector
cross	core/PVector.java	/^  public PVector cross(PVector v, PVector target) {$/;"	m	class:PVector
cross	core/PVector.java	/^  static public PVector cross(PVector v1, PVector v2, PVector target) {$/;"	m	class:PVector
cullFace	opengl/PGL.java	/^  public abstract void cullFace(int mode);$/;"	m	class:PGL
cullFace	opengl/PJOGL.java	/^  public void cullFace(int mode) {$/;"	m	class:PJOGL
currentFps	opengl/PGL.java	/^  protected float currentFps = 60;$/;"	f	class:PGL
currentFramebuffer	opengl/PGraphicsOpenGL.java	/^  static protected FrameBuffer currentFramebuffer;$/;"	f	class:PGraphicsOpenGL
currentLightFalloffConstant	opengl/PGraphicsOpenGL.java	/^  public float currentLightFalloffConstant;$/;"	f	class:PGraphicsOpenGL
currentLightFalloffLinear	opengl/PGraphicsOpenGL.java	/^  public float currentLightFalloffLinear;$/;"	f	class:PGraphicsOpenGL
currentLightFalloffQuadratic	opengl/PGraphicsOpenGL.java	/^  public float currentLightFalloffQuadratic;$/;"	f	class:PGraphicsOpenGL
currentLightSpecular	opengl/PGraphicsOpenGL.java	/^  public float[] currentLightSpecular;$/;"	f	class:PGraphicsOpenGL
currentSegment	opengl/LinePath.java	/^    public int currentSegment(double[] coords) {$/;"	m	class:LinePath.PathIterator
currentSegment	opengl/LinePath.java	/^    public int currentSegment(float[] coords) {$/;"	m	class:LinePath.PathIterator
currentSegment	opengl/PGL.java	/^    public int currentSegment(float coords[]);$/;"	m	interface:PGL.FontOutline
currentSegment	opengl/PJOGL.java	/^    public int currentSegment(float coords[]) {$/;"	m	class:PJOGL.FontOutline
currentSize	core/PApplet.java	/^  Dimension currentSize = new Dimension();$/;"	f	class:PApplet
currentTex	opengl/FontTexture.java	/^  protected int currentTex;$/;"	f	class:FontTexture
cursor	core/PApplet.java	/^  public void cursor() {$/;"	m	class:PApplet
cursor	core/PApplet.java	/^  public void cursor(PImage img) {$/;"	m	class:PApplet
cursor	core/PApplet.java	/^  public void cursor(PImage img, int x, int y) {$/;"	m	class:PApplet
cursor	core/PApplet.java	/^  public void cursor(int kind) {$/;"	m	class:PApplet
cursorType	core/PApplet.java	/^  int cursorType = ARROW; \/\/ cursor type$/;"	f	class:PApplet
cursorVisible	core/PApplet.java	/^  boolean cursorVisible = true; \/\/ cursor visibility flag$/;"	f	class:PApplet
curve	core/PApplet.java	/^  public void curve(float x1, float y1, float z1,$/;"	m	class:PApplet
curve	core/PApplet.java	/^  public void curve(float x1, float y1,$/;"	m	class:PApplet
curve	core/PGraphics.java	/^  public void curve(float x1, float y1, float z1,$/;"	m	class:PGraphics
curve	core/PGraphics.java	/^  public void curve(float x1, float y1,$/;"	m	class:PGraphics
curveBasisMatrix	core/PGraphics.java	/^  protected PMatrix3D curveBasisMatrix;$/;"	f	class:PGraphics
curveCoordX	core/PGraphicsJava2D.java	/^  float[] curveCoordX;$/;"	f	class:PGraphicsJava2D
curveCoordY	core/PGraphicsJava2D.java	/^  float[] curveCoordY;$/;"	f	class:PGraphicsJava2D
curveDetail	core/PApplet.java	/^  public void curveDetail(int detail) {$/;"	m	class:PApplet
curveDetail	core/PGraphics.java	/^  public int curveDetail = 20;$/;"	f	class:PGraphics
curveDetail	core/PGraphics.java	/^  public void curveDetail(int detail) {$/;"	m	class:PGraphics
curveDetail	core/PGraphicsJava2D.java	/^  public void curveDetail(int detail) {$/;"	m	class:PGraphicsJava2D
curveDetail	core/PShape.java	/^  public void curveDetail(int detail) {$/;"	m	class:PShape
curveDetail	opengl/PShapeOpenGL.java	/^  protected int curveDetail;$/;"	f	class:PShapeOpenGL
curveDetail	opengl/PShapeOpenGL.java	/^  public void curveDetail(int detail) {$/;"	m	class:PShapeOpenGL
curveDrawMatrix	core/PGraphics.java	/^  protected PMatrix3D curveDrawMatrix;$/;"	f	class:PGraphics
curveDrawX	core/PGraphicsJava2D.java	/^  float[] curveDrawX;$/;"	f	class:PGraphicsJava2D
curveDrawY	core/PGraphicsJava2D.java	/^  float[] curveDrawY;$/;"	f	class:PGraphicsJava2D
curveInit	core/PGraphics.java	/^  protected void curveInit() {$/;"	m	class:PGraphics
curveInitCheck	core/PGraphics.java	/^  protected void curveInitCheck() {$/;"	m	class:PGraphics
curveInited	core/PGraphics.java	/^  protected boolean curveInited = false;$/;"	f	class:PGraphics
curvePoint	core/PApplet.java	/^  public float curvePoint(float a, float b, float c, float d, float t) {$/;"	m	class:PApplet
curvePoint	core/PGraphics.java	/^  public float curvePoint(float a, float b, float c, float d, float t) {$/;"	m	class:PGraphics
curveTangent	core/PApplet.java	/^  public float curveTangent(float a, float b, float c, float d, float t) {$/;"	m	class:PApplet
curveTangent	core/PGraphics.java	/^  public float curveTangent(float a, float b, float c, float d, float t) {$/;"	m	class:PGraphics
curveTightness	core/PApplet.java	/^  public void curveTightness(float tightness) {$/;"	m	class:PApplet
curveTightness	core/PGraphics.java	/^  public float curveTightness = 0;$/;"	f	class:PGraphics
curveTightness	core/PGraphics.java	/^  public void curveTightness(float tightness) {$/;"	m	class:PGraphics
curveTightness	core/PShape.java	/^  public void curveTightness(float tightness) {$/;"	m	class:PShape
curveTightness	opengl/PShapeOpenGL.java	/^  protected float curveTightness;$/;"	f	class:PShapeOpenGL
curveTightness	opengl/PShapeOpenGL.java	/^  public void curveTightness(float tightness) {$/;"	m	class:PShapeOpenGL
curveToBezierMatrix	core/PGraphics.java	/^  protected PMatrix3D curveToBezierMatrix;$/;"	f	class:PGraphics
curveVertex	core/PApplet.java	/^  public void curveVertex(float x, float y) {$/;"	m	class:PApplet
curveVertex	core/PApplet.java	/^  public void curveVertex(float x, float y, float z) {$/;"	m	class:PApplet
curveVertex	core/PGraphics.java	/^  public void curveVertex(float x, float y) {$/;"	m	class:PGraphics
curveVertex	core/PGraphics.java	/^  public void curveVertex(float x, float y, float z) {$/;"	m	class:PGraphics
curveVertex	core/PGraphicsJava2D.java	/^  public void curveVertex(float x, float y, float z) {$/;"	m	class:PGraphicsJava2D
curveVertex	core/PShape.java	/^  public void curveVertex(float x, float y) {$/;"	m	class:PShape
curveVertex	core/PShape.java	/^  public void curveVertex(float x, float y, float z) {$/;"	m	class:PShape
curveVertex	opengl/PGraphics2D.java	/^  public void curveVertex(float x, float y, float z) {$/;"	m	class:PGraphics2D
curveVertex	opengl/PGraphicsOpenGL.java	/^  public void curveVertex(float x, float y) {$/;"	m	class:PGraphicsOpenGL
curveVertex	opengl/PGraphicsOpenGL.java	/^  public void curveVertex(float x, float y, float z) {$/;"	m	class:PGraphicsOpenGL
curveVertex	opengl/PShapeOpenGL.java	/^  public void curveVertex(float x, float y) {$/;"	m	class:PShapeOpenGL
curveVertex	opengl/PShapeOpenGL.java	/^  public void curveVertex(float x, float y, float z) {$/;"	m	class:PShapeOpenGL
curveVertexCheck	core/PGraphics.java	/^  protected void curveVertexCheck() {$/;"	m	class:PGraphics
curveVertexCheck	core/PGraphics.java	/^  protected void curveVertexCheck(int shape) {$/;"	m	class:PGraphics
curveVertexCheck	core/PGraphicsJava2D.java	/^  protected void curveVertexCheck() {$/;"	m	class:PGraphicsJava2D
curveVertexCount	core/PGraphics.java	/^  protected int curveVertexCount;$/;"	f	class:PGraphics
curveVertexImpl	opengl/PGraphicsOpenGL.java	/^  protected void curveVertexImpl(float x, float y, float z) {$/;"	m	class:PGraphicsOpenGL
curveVertexImpl	opengl/PShapeOpenGL.java	/^  protected void curveVertexImpl(float x, float y, float z) {$/;"	m	class:PShapeOpenGL
curveVertexSegment	core/PGraphics.java	/^  protected void curveVertexSegment(float x1, float y1, float z1,$/;"	m	class:PGraphics
curveVertexSegment	core/PGraphics.java	/^  protected void curveVertexSegment(float x1, float y1,$/;"	m	class:PGraphics
curveVertexSegment	core/PGraphicsJava2D.java	/^  protected void curveVertexSegment(float x1, float y1,$/;"	m	class:PGraphicsJava2D
curveVertices	core/PGraphics.java	/^  protected float curveVertices[][];$/;"	f	class:PGraphics
curvecoords	opengl/LinePath.java	/^    static final int curvecoords[] = { 2, 2, 0 };$/;"	f	class:LinePath.PathIterator
cx	core/PShapeSVG.java	/^    float cx, cy, r;$/;"	f	class:PShapeSVG.RadialGradient
cx	core/PShapeSVG.java	/^    float cx, cy, radius;$/;"	f	class:PShapeSVG.RadialGradientPaint
cy	core/PShapeSVG.java	/^    float cx, cy, r;$/;"	f	class:PShapeSVG.RadialGradient
cy	core/PShapeSVG.java	/^    float cx, cy, radius;$/;"	f	class:PShapeSVG.RadialGradientPaint
d	core/PShapeOBJ.java	/^    float d;$/;"	f	class:PShapeOBJ.OBJMaterial
data	data/FloatList.java	/^  float[] data;$/;"	f	class:FloatList
data	data/IntList.java	/^  protected int[] data;$/;"	f	class:IntList
data	data/StringList.java	/^  String[] data;$/;"	f	class:StringList
dataFile	core/PApplet.java	/^  public File dataFile(String where) {$/;"	m	class:PApplet
dataPath	core/PApplet.java	/^  public String dataPath(String where) {$/;"	m	class:PApplet
dataToIndex	data/Table.java	/^    HashMap<String,Integer> dataToIndex = new HashMap<String, Integer>();$/;"	f	class:Table.HashMapBlows
day	core/PApplet.java	/^  static public int day() {$/;"	m	class:PApplet
debug	core/PApplet.java	/^  static public void debug(String msg) {$/;"	m	class:PApplet
defColorShader	opengl/PGraphicsOpenGL.java	/^  static protected PShader defColorShader;$/;"	f	class:PGraphicsOpenGL
defColorShaderFragURL	opengl/PGraphicsOpenGL.java	/^  static protected URL defColorShaderFragURL =$/;"	f	class:PGraphicsOpenGL
defColorShaderVertURL	opengl/PGraphicsOpenGL.java	/^  static protected URL defColorShaderVertURL =$/;"	f	class:PGraphicsOpenGL
defLightShader	opengl/PGraphicsOpenGL.java	/^  static protected PShader defLightShader;$/;"	f	class:PGraphicsOpenGL
defLightShaderVertURL	opengl/PGraphicsOpenGL.java	/^  static protected URL defLightShaderVertURL =$/;"	f	class:PGraphicsOpenGL
defLineShader	opengl/PGraphicsOpenGL.java	/^  static protected PShader defLineShader;$/;"	f	class:PGraphicsOpenGL
defLineShaderFragURL	opengl/PGraphicsOpenGL.java	/^  static protected URL defLineShaderFragURL =$/;"	f	class:PGraphicsOpenGL
defLineShaderVertURL	opengl/PGraphicsOpenGL.java	/^  static protected URL defLineShaderVertURL =$/;"	f	class:PGraphicsOpenGL
defPointShader	opengl/PGraphicsOpenGL.java	/^  static protected PShader defPointShader;$/;"	f	class:PGraphicsOpenGL
defPointShaderFragURL	opengl/PGraphicsOpenGL.java	/^  static protected URL defPointShaderFragURL =$/;"	f	class:PGraphicsOpenGL
defPointShaderVertURL	opengl/PGraphicsOpenGL.java	/^  static protected URL defPointShaderVertURL =$/;"	f	class:PGraphicsOpenGL
defTexlightShader	opengl/PGraphicsOpenGL.java	/^  static protected PShader defTexlightShader;$/;"	f	class:PGraphicsOpenGL
defTexlightShaderVertURL	opengl/PGraphicsOpenGL.java	/^  static protected URL defTexlightShaderVertURL =$/;"	f	class:PGraphicsOpenGL
defTextureShader	opengl/PGraphicsOpenGL.java	/^  static protected PShader defTextureShader;$/;"	f	class:PGraphicsOpenGL
defTextureShaderFragURL	opengl/PGraphicsOpenGL.java	/^  static protected URL defTextureShaderFragURL =$/;"	f	class:PGraphicsOpenGL
defTextureShaderVertURL	opengl/PGraphicsOpenGL.java	/^  static protected URL defTextureShaderVertURL =$/;"	f	class:PGraphicsOpenGL
defaultCamera	opengl/PGraphics2D.java	/^  protected void defaultCamera() {$/;"	m	class:PGraphics2D
defaultCamera	opengl/PGraphics3D.java	/^  protected void defaultCamera() {$/;"	m	class:PGraphics3D
defaultCamera	opengl/PGraphicsOpenGL.java	/^  protected void defaultCamera() {$/;"	m	class:PGraphicsOpenGL
defaultComposite	core/PGraphicsJava2D.java	/^  Composite defaultComposite;$/;"	f	class:PGraphicsJava2D
defaultEdges	opengl/PGraphicsOpenGL.java	/^  protected boolean defaultEdges = false;$/;"	f	class:PGraphicsOpenGL
defaultFontOrDeath	core/PGraphics.java	/^  protected void defaultFontOrDeath(String method) {$/;"	m	class:PGraphics
defaultFontOrDeath	core/PGraphics.java	/^  protected void defaultFontOrDeath(String method, float size) {$/;"	m	class:PGraphics
defaultMiterlimit	opengl/LinePath.java	/^  private static float defaultMiterlimit = 10.0f;$/;"	f	class:LinePath	file:
defaultPerspective	opengl/PGraphics2D.java	/^  protected void defaultPerspective() {$/;"	m	class:PGraphics2D
defaultPerspective	opengl/PGraphics3D.java	/^  protected void defaultPerspective() {$/;"	m	class:PGraphics3D
defaultPerspective	opengl/PGraphicsOpenGL.java	/^  protected void defaultPerspective() {$/;"	m	class:PGraphicsOpenGL
defaultSettings	core/PGraphics.java	/^  protected void defaultSettings() {  \/\/ ignore$/;"	m	class:PGraphics
defaultSettings	core/PGraphicsJava2D.java	/^  protected void defaultSettings() {$/;"	m	class:PGraphicsJava2D
defaultSettings	opengl/PGraphicsOpenGL.java	/^  protected void defaultSettings() {$/;"	m	class:PGraphicsOpenGL
defaultSize	core/PApplet.java	/^  public boolean defaultSize;$/;"	f	class:PApplet
degrees	core/PApplet.java	/^  static public final float degrees(float radians) {$/;"	m	class:PApplet
dehexchar	data/JSONTokener.java	/^  public static int dehexchar(char c) {$/;"	m	class:JSONTokener
delay	core/PApplet.java	/^  public void delay(int napTime) {$/;"	m	class:PApplet
deleteAllFrameBufferObjects	opengl/PGraphicsOpenGL.java	/^  protected static void deleteAllFrameBufferObjects() {$/;"	m	class:PGraphicsOpenGL
deleteAllGLSLFragShaderObjects	opengl/PGraphicsOpenGL.java	/^  protected static void deleteAllGLSLFragShaderObjects() {$/;"	m	class:PGraphicsOpenGL
deleteAllGLSLProgramObjects	opengl/PGraphicsOpenGL.java	/^  protected static void deleteAllGLSLProgramObjects() {$/;"	m	class:PGraphicsOpenGL
deleteAllGLSLVertShaderObjects	opengl/PGraphicsOpenGL.java	/^  protected static void deleteAllGLSLVertShaderObjects() {$/;"	m	class:PGraphicsOpenGL
deleteAllRenderBufferObjects	opengl/PGraphicsOpenGL.java	/^  protected static void deleteAllRenderBufferObjects() {$/;"	m	class:PGraphicsOpenGL
deleteAllTextureObjects	opengl/PGraphicsOpenGL.java	/^  protected static void deleteAllTextureObjects() {$/;"	m	class:PGraphicsOpenGL
deleteAllVertexBufferObjects	opengl/PGraphicsOpenGL.java	/^  protected static void deleteAllVertexBufferObjects() {$/;"	m	class:PGraphicsOpenGL
deleteBuffers	opengl/PGL.java	/^  public abstract void deleteBuffers(int n, IntBuffer buffers);$/;"	m	class:PGL
deleteBuffers	opengl/PJOGL.java	/^  public void deleteBuffers(int n, IntBuffer buffers) {$/;"	m	class:PJOGL
deleteDefaultShaders	opengl/PGraphicsOpenGL.java	/^  protected void deleteDefaultShaders() {$/;"	m	class:PGraphicsOpenGL
deleteFinalizedFrameBufferObjects	opengl/PGraphicsOpenGL.java	/^  protected static void deleteFinalizedFrameBufferObjects() {$/;"	m	class:PGraphicsOpenGL
deleteFinalizedGLResources	opengl/PGraphicsOpenGL.java	/^  protected static void deleteFinalizedGLResources() {$/;"	m	class:PGraphicsOpenGL
deleteFinalizedGLSLFragShaderObjects	opengl/PGraphicsOpenGL.java	/^  protected static void deleteFinalizedGLSLFragShaderObjects() {$/;"	m	class:PGraphicsOpenGL
deleteFinalizedGLSLProgramObjects	opengl/PGraphicsOpenGL.java	/^  protected static void deleteFinalizedGLSLProgramObjects() {$/;"	m	class:PGraphicsOpenGL
deleteFinalizedGLSLVertShaderObjects	opengl/PGraphicsOpenGL.java	/^  protected static void deleteFinalizedGLSLVertShaderObjects() {$/;"	m	class:PGraphicsOpenGL
deleteFinalizedRenderBufferObjects	opengl/PGraphicsOpenGL.java	/^  protected static void deleteFinalizedRenderBufferObjects() {$/;"	m	class:PGraphicsOpenGL
deleteFinalizedTextureObjects	opengl/PGraphicsOpenGL.java	/^  protected static void deleteFinalizedTextureObjects() {$/;"	m	class:PGraphicsOpenGL
deleteFinalizedVertexBufferObjects	opengl/PGraphicsOpenGL.java	/^  protected static void deleteFinalizedVertexBufferObjects() {$/;"	m	class:PGraphicsOpenGL
deleteFrameBufferObject	opengl/PGraphicsOpenGL.java	/^  protected static void deleteFrameBufferObject(int id, int context) {$/;"	m	class:PGraphicsOpenGL
deleteFramebuffers	opengl/PGL.java	/^  public abstract void deleteFramebuffers(int n, IntBuffer framebuffers);$/;"	m	class:PGL
deleteFramebuffers	opengl/PJOGL.java	/^  public void deleteFramebuffers(int n, IntBuffer framebuffers) {$/;"	m	class:PJOGL
deleteGLSLFragShaderObject	opengl/PGraphicsOpenGL.java	/^  protected static void deleteGLSLFragShaderObject(int id, int context) {$/;"	m	class:PGraphicsOpenGL
deleteGLSLProgramObject	opengl/PGraphicsOpenGL.java	/^  protected static void deleteGLSLProgramObject(int id, int context) {$/;"	m	class:PGraphicsOpenGL
deleteGLSLVertShaderObject	opengl/PGraphicsOpenGL.java	/^  protected static void deleteGLSLVertShaderObject(int id, int context) {$/;"	m	class:PGraphicsOpenGL
deleteLineBuffers	opengl/PGraphicsOpenGL.java	/^  protected void deleteLineBuffers() {$/;"	m	class:PGraphicsOpenGL
deleteLineBuffers	opengl/PShapeOpenGL.java	/^  protected void deleteLineBuffers() {$/;"	m	class:PShapeOpenGL
deletePointBuffers	opengl/PGraphicsOpenGL.java	/^  protected void deletePointBuffers() {$/;"	m	class:PGraphicsOpenGL
deletePointBuffers	opengl/PShapeOpenGL.java	/^  protected void deletePointBuffers() {$/;"	m	class:PShapeOpenGL
deletePolyBuffers	opengl/PGraphicsOpenGL.java	/^  protected void deletePolyBuffers() {$/;"	m	class:PGraphicsOpenGL
deletePolyBuffers	opengl/PShapeOpenGL.java	/^  protected void deletePolyBuffers() {$/;"	m	class:PShapeOpenGL
deleteProgram	opengl/PGL.java	/^  public abstract void deleteProgram(int program);$/;"	m	class:PGL
deleteProgram	opengl/PJOGL.java	/^  public void deleteProgram(int program) {$/;"	m	class:PJOGL
deleteRenderBufferObject	opengl/PGraphicsOpenGL.java	/^  protected static void deleteRenderBufferObject(int id, int context) {$/;"	m	class:PGraphicsOpenGL
deleteRenderbuffers	opengl/PGL.java	/^  public abstract void deleteRenderbuffers(int n, IntBuffer renderbuffers);$/;"	m	class:PGL
deleteRenderbuffers	opengl/PJOGL.java	/^  public void deleteRenderbuffers(int n, IntBuffer renderbuffers) {$/;"	m	class:PJOGL
deleteShader	opengl/PGL.java	/^  public abstract void deleteShader(int shader);$/;"	m	class:PGL
deleteShader	opengl/PJOGL.java	/^  public void deleteShader(int shader) {$/;"	m	class:PJOGL
deleteSurface	opengl/PGL.java	/^  protected void deleteSurface() {$/;"	m	class:PGL
deleteSurface	opengl/PJOGL.java	/^  protected void deleteSurface() {$/;"	m	class:PJOGL
deleteSurfaceTextures	opengl/PGraphicsOpenGL.java	/^  protected void deleteSurfaceTextures() {$/;"	m	class:PGraphicsOpenGL
deleteTextureObject	opengl/PGraphicsOpenGL.java	/^  protected static void deleteTextureObject(int id, int context) {$/;"	m	class:PGraphicsOpenGL
deleteTextures	opengl/PGL.java	/^  public abstract void deleteTextures(int n, IntBuffer textures);$/;"	m	class:PGL
deleteTextures	opengl/PJOGL.java	/^  public void deleteTextures(int n, IntBuffer textures) {$/;"	m	class:PJOGL
deleteVertexBufferObject	opengl/PGraphicsOpenGL.java	/^  protected static void deleteVertexBufferObject(int id, int context) {$/;"	m	class:PGraphicsOpenGL
depth	core/PShape.java	/^  public float depth;$/;"	f	class:PShape
depthBits	opengl/FrameBuffer.java	/^  protected int depthBits;$/;"	f	class:FrameBuffer
depthBits	opengl/PGraphicsOpenGL.java	/^  static public int depthBits;$/;"	f	class:PGraphicsOpenGL
depthBuffer	opengl/PGL.java	/^  protected FloatBuffer depthBuffer;$/;"	f	class:PGL
depthFunc	opengl/PGL.java	/^  public abstract void depthFunc(int func);$/;"	m	class:PGL
depthFunc	opengl/PJOGL.java	/^  public void depthFunc(int func) {$/;"	m	class:PJOGL
depthMask	opengl/PGL.java	/^  public abstract void depthMask(boolean mask);$/;"	m	class:PGL
depthMask	opengl/PJOGL.java	/^  public void depthMask(boolean mask) {$/;"	m	class:PJOGL
depthRangef	opengl/PGL.java	/^  public abstract void depthRangef(float n, float f);$/;"	m	class:PGL
depthRangef	opengl/PJOGL.java	/^  public void depthRangef(float n, float f) {$/;"	m	class:PJOGL
dequeueEvents	core/PApplet.java	/^  protected void dequeueEvents() {$/;"	m	class:PApplet
descent	core/PFont.java	/^  protected int descent;$/;"	f	class:PFont
descent	core/PFont.java	/^  public float descent() {$/;"	m	class:PFont
descent	core/PShapeSVG.java	/^    int descent;$/;"	f	class:PShapeSVG.FontFace
desktopFile	core/PApplet.java	/^  static public File desktopFile(String what) {$/;"	m	class:PApplet
desktopFolder	core/PApplet.java	/^  static File desktopFolder;$/;"	f	class:PApplet
desktopPath	core/PApplet.java	/^  static public String desktopPath(String what) {$/;"	m	class:PApplet
destroy	core/PApplet.java	/^  public void destroy() {$/;"	m	class:PApplet
detachShader	opengl/PGL.java	/^  public abstract void detachShader(int program, int shader);$/;"	m	class:PGL
detachShader	opengl/PJOGL.java	/^  public void detachShader(int program, int shader) {$/;"	m	class:PJOGL
determinant	core/PMatrix.java	/^  public float determinant();$/;"	m	interface:PMatrix
determinant	core/PMatrix2D.java	/^  public float determinant() {$/;"	m	class:PMatrix2D
determinant	core/PMatrix3D.java	/^  public float determinant() {$/;"	m	class:PMatrix3D
determinant3x3	core/PMatrix3D.java	/^  private float determinant3x3(float t00, float t01, float t02,$/;"	m	class:PMatrix3D	file:
die	core/PApplet.java	/^  public void die(String what) {$/;"	m	class:PApplet
die	core/PApplet.java	/^  public void die(String what, Exception e) {$/;"	m	class:PApplet
diff	opengl/PGraphicsOpenGL.java	/^  protected static boolean diff(float a, float b) {$/;"	m	class:PGraphicsOpenGL
dilate	core/PImage.java	/^  protected void dilate(boolean isInverted) {$/;"	m	class:PImage
directionLoc	opengl/PShader.java	/^  protected int directionLoc;$/;"	f	class:PShader
directionalLight	core/PApplet.java	/^  public void directionalLight(float v1, float v2, float v3,$/;"	m	class:PApplet
directionalLight	core/PGraphics.java	/^  public void directionalLight(float v1, float v2, float v3,$/;"	m	class:PGraphics
directionalLight	opengl/PGraphics2D.java	/^  public void directionalLight(float red, float green, float blue,$/;"	m	class:PGraphics2D
directionalLight	opengl/PGraphicsOpenGL.java	/^  public void directionalLight(float r, float g, float b,$/;"	m	class:PGraphicsOpenGL
disable	opengl/PGL.java	/^  public abstract void disable(int value);$/;"	m	class:PGL
disable	opengl/PJOGL.java	/^  public void disable(int value) {$/;"	m	class:PJOGL
disableDepthTest	opengl/FrameBuffer.java	/^  public void disableDepthTest() {$/;"	m	class:FrameBuffer
disableLighting	opengl/PGraphicsOpenGL.java	/^  protected void disableLighting() {$/;"	m	class:PGraphicsOpenGL
disableStyle	core/PShape.java	/^  public void disableStyle() {$/;"	m	class:PShape
disableStyle	opengl/PShapeOpenGL.java	/^  public void disableStyle() {$/;"	m	class:PShapeOpenGL
disableTexturing	opengl/PGL.java	/^  protected void disableTexturing(int target) {$/;"	m	class:PGL
disableTexturing	opengl/PJOGL.java	/^  protected void disableTexturing(int target) {$/;"	m	class:PJOGL
disableVertexAttribArray	opengl/PGL.java	/^  public abstract void disableVertexAttribArray(int index);$/;"	m	class:PGL
disableVertexAttribArray	opengl/PJOGL.java	/^  public void disableVertexAttribArray(int index) {$/;"	m	class:PJOGL
display	opengl/PJOGL.java	/^    public void display(GLAutoDrawable glDrawable) {$/;"	m	class:PJOGL.PGLListener
displayHeight	core/PApplet.java	/^  public int displayHeight;$/;"	f	class:PApplet
displayWidth	core/PApplet.java	/^  public int displayWidth;$/;"	f	class:PApplet
displayable	core/PApplet.java	/^  public boolean displayable() {$/;"	m	class:PApplet
displayable	core/PGraphics.java	/^  public boolean displayable() {$/;"	m	class:PGraphics
dispose	core/PApplet.java	/^  public void dispose() {$/;"	m	class:PApplet
dispose	core/PGraphics.java	/^  public void dispose() {  \/\/ ignore$/;"	m	class:PGraphics
dispose	core/PGraphicsJava2D.java	/^    public void dispose() { }$/;"	m	class:PGraphicsJava2D.BlendingContext
dispose	core/PShapeSVG.java	/^      public void dispose() { }$/;"	m	class:PShapeSVG.LinearGradientPaint.LinearGradientContext
dispose	core/PShapeSVG.java	/^      public void dispose() {}$/;"	m	class:PShapeSVG.RadialGradientPaint.RadialGradientContext
dispose	opengl/FontTexture.java	/^  protected void dispose() {$/;"	m	class:FontTexture
dispose	opengl/FrameBuffer.java	/^  protected void dispose() {$/;"	m	class:FrameBuffer
dispose	opengl/PGraphicsOpenGL.java	/^  public void dispose() { \/\/ PGraphics$/;"	m	class:PGraphicsOpenGL
dispose	opengl/PJOGL.java	/^    public void dispose(GLAutoDrawable adrawable) {$/;"	m	class:PJOGL.PGLListener
dispose	opengl/PShader.java	/^  protected void dispose() {$/;"	m	class:PShader
dispose	opengl/PShapeOpenGL.java	/^  protected void dispose() {$/;"	m	class:PShapeOpenGL
dispose	opengl/Texture.java	/^    void dispose() {$/;"	m	class:Texture.BufferData
dispose	opengl/Texture.java	/^  protected void dispose() {$/;"	m	class:Texture
disposeBufferMethod	opengl/Texture.java	/^  protected Method disposeBufferMethod;$/;"	f	class:Texture
disposeSourceBuffer	opengl/Texture.java	/^  public void disposeSourceBuffer() {$/;"	m	class:Texture
dist	core/PApplet.java	/^  static public final float dist(float x1, float y1, float x2, float y2) {$/;"	m	class:PApplet
dist	core/PApplet.java	/^  static public final float dist(float x1, float y1, float z1,$/;"	m	class:PApplet
dist	core/PVector.java	/^  public float dist(PVector v) {$/;"	m	class:PVector
dist	core/PVector.java	/^  static public float dist(PVector v1, PVector v2) {$/;"	m	class:PVector
dist	opengl/PGraphicsOpenGL.java	/^    float dist;$/;"	f	class:PGraphicsOpenGL.Triangle
div	core/PVector.java	/^  public void div(float n) {$/;"	m	class:PVector
div	core/PVector.java	/^  static public PVector div(PVector v, float n) {$/;"	m	class:PVector
div	core/PVector.java	/^  static public PVector div(PVector v, float n, PVector target) {$/;"	m	class:PVector
div	data/FloatDict.java	/^  public void div(String key, float amount) {$/;"	m	class:FloatDict
div	data/FloatList.java	/^  public void div(int index, float amount) {$/;"	m	class:FloatList
div	data/IntDict.java	/^  public void div(String key, int amount) {$/;"	m	class:IntDict
div	data/IntList.java	/^  public void div(int index, int amount) {$/;"	m	class:IntList
dmouseX	core/PApplet.java	/^  protected int dmouseX, dmouseY;$/;"	f	class:PApplet
dmouseY	core/PApplet.java	/^  protected int dmouseX, dmouseY;$/;"	f	class:PApplet
dot	core/PVector.java	/^  public float dot(PVector v) {$/;"	m	class:PVector
dot	core/PVector.java	/^  public float dot(float x, float y, float z) {$/;"	m	class:PVector
dot	core/PVector.java	/^  static public float dot(PVector v1, PVector v2) {$/;"	m	class:PVector
doubleToString	data/JSONObject.java	/^  static protected String doubleToString(double d) {$/;"	m	class:JSONObject
draw	core/PApplet.java	/^  public void draw() {$/;"	m	class:PApplet
draw	core/PShape.java	/^  public void draw(PGraphics g) {$/;"	m	class:PShape
draw	opengl/PShader.java	/^  protected void draw(int idxId, int count, int offset) {$/;"	m	class:PShader
draw	opengl/PShapeOpenGL.java	/^  public void draw() {$/;"	m	class:PShapeOpenGL
draw	opengl/PShapeOpenGL.java	/^  public void draw(PGraphics g) {$/;"	m	class:PShapeOpenGL
drawArrays	opengl/PGL.java	/^  public abstract void drawArrays(int mode, int first, int count);$/;"	m	class:PGL
drawArrays	opengl/PJOGL.java	/^  public void drawArrays(int mode, int first, int count) {$/;"	m	class:PJOGL
drawBuffer	opengl/PGL.java	/^  public abstract void drawBuffer(int buf);$/;"	m	class:PGL
drawBuffer	opengl/PJOGL.java	/^  public void drawBuffer(int buf) {$/;"	m	class:PJOGL
drawChar	core/PShapeSVG.java	/^    public void drawChar(PGraphics g, char c, float x, float y, float size) {$/;"	m	class:PShapeSVG.Font
drawElements	opengl/PGL.java	/^  public abstract void drawElements(int mode, int count, int type, Buffer indices);$/;"	m	class:PGL
drawElements	opengl/PGL.java	/^  public abstract void drawElements(int mode, int count, int type, int offset);$/;"	m	class:PGL
drawElements	opengl/PJOGL.java	/^  public void drawElements(int mode, int count, int type, Buffer indices) {$/;"	m	class:PJOGL
drawElements	opengl/PJOGL.java	/^  public void drawElements(int mode, int count, int type, int offset) {$/;"	m	class:PJOGL
drawFramebuffer	opengl/PGraphicsOpenGL.java	/^  static protected FrameBuffer drawFramebuffer;$/;"	f	class:PGraphicsOpenGL
drawGeometry	core/PShape.java	/^  protected void drawGeometry(PGraphics g) {$/;"	m	class:PShape
drawGeometry	opengl/PShapeOpenGL.java	/^  protected void drawGeometry(PGraphics g) {$/;"	m	class:PShapeOpenGL
drawGroup	core/PShape.java	/^  protected void drawGroup(PGraphics g) {$/;"	m	class:PShape
drawImpl	core/PShape.java	/^  public void drawImpl(PGraphics g) {$/;"	m	class:PShape
drawLatch	opengl/PJOGL.java	/^  protected CountDownLatch drawLatch;$/;"	f	class:PJOGL
drawMiter	opengl/LineStroker.java	/^  private void drawMiter(int px0, int py0, int x0, int y0, int x1, int y1,$/;"	m	class:LineStroker	file:
drawPTexture	opengl/PGraphicsOpenGL.java	/^  protected void drawPTexture() {$/;"	m	class:PGraphicsOpenGL
drawPath	core/PShape.java	/^  protected void drawPath(PGraphics g) {$/;"	m	class:PShape
drawPixels	opengl/PGraphicsOpenGL.java	/^  protected void drawPixels(int x, int y, int w, int h) {$/;"	m	class:PGraphicsOpenGL
drawPrimitive	core/PShape.java	/^  protected void drawPrimitive(PGraphics g) {$/;"	m	class:PShape
drawRoundJoin	opengl/LineStroker.java	/^  private void drawRoundJoin(int x, int y, int omx, int omy, int mx, int my,$/;"	m	class:LineStroker	file:
drawShape	core/PGraphicsJava2D.java	/^  protected void drawShape(Shape s) {$/;"	m	class:PGraphicsJava2D
drawShape	core/PShapeSVG.java	/^    protected void drawShape() {$/;"	m	class:PShapeSVG.Font
drawShape	core/PShapeSVG.java	/^    protected void drawShape() {$/;"	m	class:PShapeSVG.FontFace
drawString	core/PShapeSVG.java	/^    public void drawString(PGraphics g, String str, float x, float y, float size) {$/;"	m	class:PShapeSVG.Font
drawTexture	opengl/PGL.java	/^  public void drawTexture(int target, int id, int width, int height,$/;"	m	class:PGL
drawTexture	opengl/PGL.java	/^  public void drawTexture(int target, int id,$/;"	m	class:PGL
drawTexture	opengl/PGraphicsOpenGL.java	/^  protected void drawTexture() {$/;"	m	class:PGraphicsOpenGL
drawTexture	opengl/PGraphicsOpenGL.java	/^  protected void drawTexture(int x, int y, int w, int h) {$/;"	m	class:PGraphicsOpenGL
drawTexture2D	opengl/PGL.java	/^  protected void drawTexture2D(int id, int texW, int texH, int scrW, int scrH,$/;"	m	class:PGL
drawTextureRect	opengl/PGL.java	/^  protected void drawTextureRect(int id, int texW, int texH, int scrW, int scrH,$/;"	m	class:PGL
drawable	opengl/PJOGL.java	/^  protected static GLDrawable drawable;$/;"	f	class:PJOGL
drawing	opengl/PGraphicsOpenGL.java	/^  protected boolean drawing = false;$/;"	f	class:PGraphicsOpenGL
dupCount	opengl/PGraphicsOpenGL.java	/^    int dupCount;$/;"	f	class:PGraphicsOpenGL.Tessellator
dupIndexPos	opengl/PGraphicsOpenGL.java	/^    int dupIndexPos(int idx) {$/;"	m	class:PGraphicsOpenGL.Tessellator
dupIndices	opengl/PGraphicsOpenGL.java	/^    int[] dupIndices;$/;"	f	class:PGraphicsOpenGL.Tessellator
edge	core/PApplet.java	/^  public void edge(boolean edge) {$/;"	m	class:PApplet
edge	core/PGraphics.java	/^  public boolean edge = true;$/;"	f	class:PGraphics
edge	core/PGraphics.java	/^  public void edge(boolean edge) {$/;"	m	class:PGraphics
edgeCheck	opengl/PGraphicsOpenGL.java	/^    void edgeCheck() {$/;"	m	class:PGraphicsOpenGL.InGeometry
edgeCount	opengl/PGraphicsOpenGL.java	/^    int edgeCount;$/;"	f	class:PGraphicsOpenGL.InGeometry
edges	opengl/PGraphicsOpenGL.java	/^    int[][] edges;$/;"	f	class:PGraphicsOpenGL.InGeometry
element	core/PShapeSVG.java	/^  XML element;$/;"	f	class:PShapeSVG
ellipse	core/PApplet.java	/^  public void ellipse(float a, float b, float c, float d) {$/;"	m	class:PApplet
ellipse	core/PGraphics.java	/^  public void ellipse(float a, float b, float c, float d) {$/;"	m	class:PGraphics
ellipse	core/PGraphicsJava2D.java	/^  Ellipse2D.Float ellipse = new Ellipse2D.Float();$/;"	f	class:PGraphicsJava2D
ellipseImpl	core/PGraphics.java	/^  protected void ellipseImpl(float x, float y, float w, float h) {$/;"	m	class:PGraphics
ellipseImpl	core/PGraphicsJava2D.java	/^  protected void ellipseImpl(float x, float y, float w, float h) {$/;"	m	class:PGraphicsJava2D
ellipseImpl	opengl/PGraphicsOpenGL.java	/^  public void ellipseImpl(float a, float b, float c, float d) {$/;"	m	class:PGraphicsOpenGL
ellipseMode	core/PApplet.java	/^  public void ellipseMode(int mode) {$/;"	m	class:PApplet
ellipseMode	core/PGraphics.java	/^  public int ellipseMode;$/;"	f	class:PGraphics
ellipseMode	core/PGraphics.java	/^  public void ellipseMode(int mode) {$/;"	m	class:PGraphics
ellipseMode	core/PShape.java	/^  protected int ellipseMode;$/;"	f	class:PShape
ellipseMode	core/PStyle.java	/^  public int ellipseMode;$/;"	f	class:PStyle
emissive	core/PApplet.java	/^  public void emissive(float gray) {$/;"	m	class:PApplet
emissive	core/PApplet.java	/^  public void emissive(float v1, float v2, float v3) {$/;"	m	class:PApplet
emissive	core/PApplet.java	/^  public void emissive(int rgb) {$/;"	m	class:PApplet
emissive	core/PGraphics.java	/^  public void emissive(float gray) {$/;"	m	class:PGraphics
emissive	core/PGraphics.java	/^  public void emissive(float v1, float v2, float v3) {$/;"	m	class:PGraphics
emissive	core/PGraphics.java	/^  public void emissive(int rgb) {$/;"	m	class:PGraphics
emissive	core/PShape.java	/^  public void emissive(float gray) {$/;"	m	class:PShape
emissive	core/PShape.java	/^  public void emissive(float x, float y, float z) {$/;"	m	class:PShape
emissive	core/PShape.java	/^  public void emissive(int rgb) {$/;"	m	class:PShape
emissive	opengl/PGraphicsOpenGL.java	/^    int[] emissive;$/;"	f	class:PGraphicsOpenGL.InGeometry
emissiveB	core/PGraphics.java	/^  public float emissiveR, emissiveG, emissiveB;$/;"	f	class:PGraphics
emissiveB	core/PStyle.java	/^  public float emissiveR, emissiveG, emissiveB;$/;"	f	class:PStyle
emissiveColor	core/PGraphics.java	/^  public int emissiveColor;$/;"	f	class:PGraphics
emissiveColor	core/PShape.java	/^  protected int emissiveColor;$/;"	f	class:PShape
emissiveColor	opengl/PGraphicsOpenGL.java	/^    int emissiveColor;$/;"	f	class:PGraphicsOpenGL.InGeometry
emissiveFromCalc	core/PGraphics.java	/^  protected void emissiveFromCalc() {$/;"	m	class:PGraphics
emissiveG	core/PGraphics.java	/^  public float emissiveR, emissiveG, emissiveB;$/;"	f	class:PGraphics
emissiveG	core/PStyle.java	/^  public float emissiveR, emissiveG, emissiveB;$/;"	f	class:PStyle
emissiveLoc	opengl/PShader.java	/^  protected int emissiveLoc;$/;"	f	class:PShader
emissiveR	core/PGraphics.java	/^  public float emissiveR, emissiveG, emissiveB;$/;"	f	class:PGraphics
emissiveR	core/PStyle.java	/^  public float emissiveR, emissiveG, emissiveB;$/;"	f	class:PStyle
emitClose	opengl/LineStroker.java	/^  private void emitClose() {$/;"	m	class:LineStroker	file:
emitLineTo	opengl/LineStroker.java	/^  private void emitLineTo(int x1, int y1, int c1) {$/;"	m	class:LineStroker	file:
emitLineTo	opengl/LineStroker.java	/^  private void emitLineTo(int x1, int y1, int c1, boolean rev) {$/;"	m	class:LineStroker	file:
emitMoveTo	opengl/LineStroker.java	/^  private void emitMoveTo(int x0, int y0, int c0) {$/;"	m	class:LineStroker	file:
emouseX	core/PApplet.java	/^  protected int emouseX, emouseY;$/;"	f	class:PApplet
emouseY	core/PApplet.java	/^  protected int emouseX, emouseY;$/;"	f	class:PApplet
emptyArgs	core/PApplet.java	/^    Object[] emptyArgs = new Object[] { };$/;"	f	class:PApplet.RegisteredMethods
enable	opengl/PGL.java	/^  public abstract void enable(int value);$/;"	m	class:PGL
enable	opengl/PJOGL.java	/^  public void enable(int value) {$/;"	m	class:PJOGL
enableLighting	opengl/PGraphicsOpenGL.java	/^  protected void enableLighting() {$/;"	m	class:PGraphicsOpenGL
enableStyle	core/PShape.java	/^  public void enableStyle() {$/;"	m	class:PShape
enableStyle	opengl/PShapeOpenGL.java	/^  public void enableStyle() {$/;"	m	class:PShapeOpenGL
enableTexturing	opengl/PGL.java	/^  protected void enableTexturing(int target) {$/;"	m	class:PGL
enableTexturing	opengl/PJOGL.java	/^  protected void enableTexturing(int target) {$/;"	m	class:PJOGL
enableVertexAttribArray	opengl/PGL.java	/^  public abstract void enableVertexAttribArray(int index);$/;"	m	class:PGL
enableVertexAttribArray	opengl/PJOGL.java	/^  public void enableVertexAttribArray(int index) {$/;"	m	class:PJOGL
end	data/JSONTokener.java	/^  public boolean end() {$/;"	m	class:JSONTokener
end	opengl/FontTexture.java	/^  public void end() {$/;"	m	class:FontTexture
end	opengl/LineStroker.java	/^  public void end() {$/;"	m	class:LineStroker
end	opengl/PGL.java	/^    public void end();$/;"	m	interface:PGL.TessellatorCallback
end	opengl/PGraphicsOpenGL.java	/^      public void end() {$/;"	m	class:PGraphicsOpenGL.Tessellator.TessellatorCallback
end	opengl/PJOGL.java	/^      public void end() {$/;"	m	class:PJOGL.Tessellator.GLUCallback
end2D	opengl/PGraphics2D.java	/^  protected void end2D() {$/;"	m	class:PGraphics2D
end2D	opengl/PGraphics3D.java	/^  protected void end2D() {$/;"	m	class:PGraphics3D
end2D	opengl/PGraphicsOpenGL.java	/^  protected void end2D() {$/;"	m	class:PGraphicsOpenGL
endCamera	core/PApplet.java	/^  public void endCamera() {$/;"	m	class:PApplet
endCamera	core/PGraphics.java	/^  public void endCamera() {$/;"	m	class:PGraphics
endCamera	opengl/PGraphics2D.java	/^  public void endCamera() {$/;"	m	class:PGraphics2D
endCamera	opengl/PGraphicsOpenGL.java	/^  public void endCamera() {$/;"	m	class:PGraphicsOpenGL
endContour	core/PApplet.java	/^  public void endContour() {$/;"	m	class:PApplet
endContour	core/PGraphics.java	/^  public void endContour() {$/;"	m	class:PGraphics
endContour	core/PGraphicsJava2D.java	/^  public void endContour() {$/;"	m	class:PGraphicsJava2D
endContour	core/PShape.java	/^  public void endContour() {$/;"	m	class:PShape
endContour	opengl/PGL.java	/^    public void endContour();$/;"	m	interface:PGL.Tessellator
endContour	opengl/PGraphicsOpenGL.java	/^  public void endContour() {$/;"	m	class:PGraphicsOpenGL
endContour	opengl/PJOGL.java	/^    public void endContour() {$/;"	m	class:PJOGL.Tessellator
endContourImpl	core/PShape.java	/^  protected void endContourImpl() {$/;"	m	class:PShape
endContourImpl	opengl/PShapeOpenGL.java	/^  protected void endContourImpl() {$/;"	m	class:PShapeOpenGL
endDraw	core/PGraphics.java	/^  public void endDraw() {  \/\/ ignore$/;"	m	class:PGraphics
endDraw	core/PGraphicsJava2D.java	/^  public void endDraw() {$/;"	m	class:PGraphicsJava2D
endDraw	core/PGraphicsRetina2D.java	/^  public void endDraw() {$/;"	m	class:PGraphicsRetina2D
endDraw	opengl/PGL.java	/^  protected void endDraw(boolean clear0) {$/;"	m	class:PGL
endDraw	opengl/PGraphicsOpenGL.java	/^  public void endDraw() {$/;"	m	class:PGraphicsOpenGL
endDraw	opengl/PJOGL.java	/^  protected void endDraw(boolean clear0) {$/;"	m	class:PJOGL
endGL	opengl/PGL.java	/^  protected void endGL() { }$/;"	m	class:PGL
endNoTex	opengl/PGraphicsOpenGL.java	/^    void endNoTex() {$/;"	m	class:PGraphicsOpenGL.Tessellator
endOffscreenDraw	opengl/PGraphicsOpenGL.java	/^  protected void endOffscreenDraw() {$/;"	m	class:PGraphicsOpenGL
endOnscreenDraw	opengl/PGraphicsOpenGL.java	/^  protected void endOnscreenDraw() {$/;"	m	class:PGraphicsOpenGL
endPGL	core/PApplet.java	/^  public void endPGL() {$/;"	m	class:PApplet
endPGL	core/PGraphics.java	/^  public void endPGL() {$/;"	m	class:PGraphics
endPGL	opengl/PGraphicsOpenGL.java	/^  public void endPGL() {$/;"	m	class:PGraphicsOpenGL
endPixelsOp	opengl/PGraphicsOpenGL.java	/^  protected void endPixelsOp() {$/;"	m	class:PGraphicsOpenGL
endPolygon	opengl/PGL.java	/^    public void endPolygon();$/;"	m	interface:PGL.Tessellator
endPolygon	opengl/PJOGL.java	/^    public void endPolygon() {$/;"	m	class:PJOGL.Tessellator
endPolygonStroke	opengl/PGraphicsOpenGL.java	/^    void endPolygonStroke() {$/;"	m	class:PGraphicsOpenGL.Tessellator
endRaw	core/PApplet.java	/^  public void endRaw() {$/;"	m	class:PApplet
endRaw	core/PGraphics.java	/^  public void endRaw() {  \/\/ ignore$/;"	m	class:PGraphics
endRaw	core/PGraphicsJava2D.java	/^  public void endRaw() {$/;"	m	class:PGraphicsJava2D
endReadPixels	opengl/PGraphicsOpenGL.java	/^  public void endReadPixels() {$/;"	m	class:PGraphicsOpenGL
endRecord	core/PApplet.java	/^  public void endRecord() {$/;"	m	class:PApplet
endShape	core/PApplet.java	/^  public void endShape() {$/;"	m	class:PApplet
endShape	core/PApplet.java	/^  public void endShape(int mode) {$/;"	m	class:PApplet
endShape	core/PGraphics.java	/^  public void endShape() {$/;"	m	class:PGraphics
endShape	core/PGraphics.java	/^  public void endShape(int mode) {$/;"	m	class:PGraphics
endShape	core/PGraphicsJava2D.java	/^  public void endShape(int mode) {$/;"	m	class:PGraphicsJava2D
endShape	core/PShape.java	/^  public void endShape() {$/;"	m	class:PShape
endShape	core/PShape.java	/^  public void endShape(int mode) {$/;"	m	class:PShape
endShape	opengl/PGraphicsOpenGL.java	/^  protected void endShape(int[] indices) {$/;"	m	class:PGraphicsOpenGL
endShape	opengl/PGraphicsOpenGL.java	/^  public void endShape(int mode) {$/;"	m	class:PGraphicsOpenGL
endShape	opengl/PShapeOpenGL.java	/^  public void endShape(int mode) {$/;"	m	class:PShapeOpenGL
endStrokePath	opengl/PGraphicsOpenGL.java	/^    void endStrokePath(boolean closed) {$/;"	m	class:PGraphicsOpenGL.Tessellator
endTex	opengl/PGraphicsOpenGL.java	/^    void endTex() {$/;"	m	class:PGraphicsOpenGL.Tessellator
ensureBounds	data/Table.java	/^  protected void ensureBounds(int row, int col) {$/;"	m	class:Table
ensureCapacity	opengl/LineStroker.java	/^  private void ensureCapacity(int newrindex) {$/;"	m	class:LineStroker	file:
ensureColumn	data/Table.java	/^  protected void ensureColumn(int col) {$/;"	m	class:Table
ensureRow	data/Table.java	/^  protected void ensureRow(int row) {$/;"	m	class:Table
eof	data/JSONTokener.java	/^  private boolean eof;$/;"	f	class:JSONTokener	file:
equals	core/PVector.java	/^  public boolean equals(Object obj) {$/;"	m	class:PVector
equals	data/JSONObject.java	/^    public boolean equals(Object object) {$/;"	m	class:JSONObject.Null
equals	opengl/PGraphicsOpenGL.java	/^    public boolean equals(Object obj) {$/;"	m	class:PGraphicsOpenGL.GLResource
error	opengl/PGL.java	/^    public void error(int errnum);$/;"	m	interface:PGL.TessellatorCallback
error	opengl/PGraphicsOpenGL.java	/^      public void error(int errnum) {$/;"	m	class:PGraphicsOpenGL.Tessellator.TessellatorCallback
error	opengl/PJOGL.java	/^      public void error(int errnum) {$/;"	m	class:PJOGL.Tessellator.GLUCallback
errorString	opengl/PGL.java	/^  public abstract String errorString(int err);$/;"	m	class:PGL
errorString	opengl/PJOGL.java	/^  public String errorString(int err) {$/;"	m	class:PJOGL
eventQueue	core/PApplet.java	/^  InternalEventQueue eventQueue = new InternalEventQueue();$/;"	f	class:PApplet
exec	core/PApplet.java	/^  static public Process exec(String[] argv) {$/;"	m	class:PApplet
exit	core/PApplet.java	/^  public void exit() {$/;"	m	class:PApplet
exitActual	core/PApplet.java	/^  void exitActual() {$/;"	m	class:PApplet
exitCalled	core/PApplet.java	/^  protected boolean exitCalled;$/;"	f	class:PApplet
exp	core/PApplet.java	/^  static public final float exp(float n) {$/;"	m	class:PApplet
expand	core/PApplet.java	/^  static public Object expand(Object array) {$/;"	m	class:PApplet
expand	core/PApplet.java	/^  static public Object expand(Object list, int newSize) {$/;"	m	class:PApplet
expand	core/PApplet.java	/^  static public String[] expand(String list[]) {$/;"	m	class:PApplet
expand	core/PApplet.java	/^  static public String[] expand(String list[], int newSize) {$/;"	m	class:PApplet
expand	core/PApplet.java	/^  static public boolean[] expand(boolean list[]) {$/;"	m	class:PApplet
expand	core/PApplet.java	/^  static public boolean[] expand(boolean list[], int newSize) {$/;"	m	class:PApplet
expand	core/PApplet.java	/^  static public byte[] expand(byte list[]) {$/;"	m	class:PApplet
expand	core/PApplet.java	/^  static public byte[] expand(byte list[], int newSize) {$/;"	m	class:PApplet
expand	core/PApplet.java	/^  static public char[] expand(char list[]) {$/;"	m	class:PApplet
expand	core/PApplet.java	/^  static public char[] expand(char list[], int newSize) {$/;"	m	class:PApplet
expand	core/PApplet.java	/^  static public double[] expand(double list[]) {$/;"	m	class:PApplet
expand	core/PApplet.java	/^  static public double[] expand(double list[], int newSize) {$/;"	m	class:PApplet
expand	core/PApplet.java	/^  static public float[] expand(float list[]) {$/;"	m	class:PApplet
expand	core/PApplet.java	/^  static public float[] expand(float list[], int newSize) {$/;"	m	class:PApplet
expand	core/PApplet.java	/^  static public int[] expand(int list[]) {$/;"	m	class:PApplet
expand	core/PApplet.java	/^  static public int[] expand(int list[], int newSize) {$/;"	m	class:PApplet
expand	core/PApplet.java	/^  static public long[] expand(long list[]) {$/;"	m	class:PApplet
expand	core/PApplet.java	/^  static public long[] expand(long list[], int newSize) {$/;"	m	class:PApplet
expandAmbient	opengl/PGraphicsOpenGL.java	/^    void expandAmbient(int n) {$/;"	m	class:PGraphicsOpenGL.InGeometry
expandArraySize	opengl/PGraphicsOpenGL.java	/^  static protected int expandArraySize(int currSize, int newMinSize) {$/;"	m	class:PGraphicsOpenGL
expandCodes	opengl/PGraphicsOpenGL.java	/^    void expandCodes(int n) {$/;"	m	class:PGraphicsOpenGL.InGeometry
expandColors	opengl/PGraphicsOpenGL.java	/^    void expandColors(int n) {$/;"	m	class:PGraphicsOpenGL.InGeometry
expandEdges	opengl/PGraphicsOpenGL.java	/^    void expandEdges(int n) {$/;"	m	class:PGraphicsOpenGL.InGeometry
expandEmissive	opengl/PGraphicsOpenGL.java	/^    void expandEmissive(int n) {$/;"	m	class:PGraphicsOpenGL.InGeometry
expandFirstCache	opengl/PGraphicsOpenGL.java	/^    void expandFirstCache(int n) {$/;"	m	class:PGraphicsOpenGL.TexCache
expandFirstIndex	opengl/PGraphicsOpenGL.java	/^    void expandFirstIndex(int n) {$/;"	m	class:PGraphicsOpenGL.TexCache
expandIncrement	data/Table.java	/^  protected int expandIncrement;$/;"	f	class:Table
expandIndexCount	opengl/PGraphicsOpenGL.java	/^    void expandIndexCount(int n) {$/;"	m	class:PGraphicsOpenGL.IndexCache
expandIndexOffset	opengl/PGraphicsOpenGL.java	/^    void expandIndexOffset(int n) {$/;"	m	class:PGraphicsOpenGL.IndexCache
expandLastCache	opengl/PGraphicsOpenGL.java	/^    void expandLastCache(int n) {$/;"	m	class:PGraphicsOpenGL.TexCache
expandLastIndex	opengl/PGraphicsOpenGL.java	/^    void expandLastIndex(int n) {$/;"	m	class:PGraphicsOpenGL.TexCache
expandLineColors	opengl/PGraphicsOpenGL.java	/^    void expandLineColors(int n) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
expandLineDirections	opengl/PGraphicsOpenGL.java	/^    void expandLineDirections(int n) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
expandLineIndices	opengl/PGraphicsOpenGL.java	/^    void expandLineIndices(int n) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
expandLineVertices	opengl/PGraphicsOpenGL.java	/^    void expandLineVertices(int n) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
expandNormals	opengl/PGraphicsOpenGL.java	/^    void expandNormals(int n) {$/;"	m	class:PGraphicsOpenGL.InGeometry
expandPointColors	opengl/PGraphicsOpenGL.java	/^    void expandPointColors(int n) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
expandPointIndices	opengl/PGraphicsOpenGL.java	/^    void expandPointIndices(int n) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
expandPointOffsets	opengl/PGraphicsOpenGL.java	/^    void expandPointOffsets(int n) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
expandPointVertices	opengl/PGraphicsOpenGL.java	/^    void expandPointVertices(int n) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
expandPolyAmbient	opengl/PGraphicsOpenGL.java	/^    void expandPolyAmbient(int n) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
expandPolyColors	opengl/PGraphicsOpenGL.java	/^    void expandPolyColors(int n) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
expandPolyEmissive	opengl/PGraphicsOpenGL.java	/^    void expandPolyEmissive(int n) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
expandPolyIndices	opengl/PGraphicsOpenGL.java	/^    void expandPolyIndices(int n) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
expandPolyNormals	opengl/PGraphicsOpenGL.java	/^    void expandPolyNormals(int n) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
expandPolyShininess	opengl/PGraphicsOpenGL.java	/^    void expandPolyShininess(int n) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
expandPolySpecular	opengl/PGraphicsOpenGL.java	/^    void expandPolySpecular(int n) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
expandPolyTexCoords	opengl/PGraphicsOpenGL.java	/^    void expandPolyTexCoords(int n) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
expandPolyVertices	opengl/PGraphicsOpenGL.java	/^    void expandPolyVertices(int n) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
expandRawIndices	opengl/PGraphicsOpenGL.java	/^    void expandRawIndices(int n) {$/;"	m	class:PGraphicsOpenGL.Tessellator
expandShininess	opengl/PGraphicsOpenGL.java	/^    void expandShininess(int n) {$/;"	m	class:PGraphicsOpenGL.InGeometry
expandSpecular	opengl/PGraphicsOpenGL.java	/^    void expandSpecular(int n) {$/;"	m	class:PGraphicsOpenGL.InGeometry
expandStrokeColors	opengl/PGraphicsOpenGL.java	/^    void expandStrokeColors(int n) {$/;"	m	class:PGraphicsOpenGL.InGeometry
expandStrokeWeights	opengl/PGraphicsOpenGL.java	/^    void expandStrokeWeights(int n) {$/;"	m	class:PGraphicsOpenGL.InGeometry
expandTexCoords	opengl/PGraphicsOpenGL.java	/^    void expandTexCoords(int n) {$/;"	m	class:PGraphicsOpenGL.InGeometry
expandTextures	opengl/PGraphicsOpenGL.java	/^    void expandTextures(int n) {$/;"	m	class:PGraphicsOpenGL.TexCache
expandVertexCount	opengl/PGraphicsOpenGL.java	/^    void expandVertexCount(int n) {$/;"	m	class:PGraphicsOpenGL.IndexCache
expandVertexOffset	opengl/PGraphicsOpenGL.java	/^    void expandVertexOffset(int n) {$/;"	m	class:PGraphicsOpenGL.IndexCache
expandVertices	opengl/PGraphicsOpenGL.java	/^    void expandVertices(int n) {$/;"	m	class:PGraphicsOpenGL.InGeometry
extension	core/PApplet.java	/^    String extension;$/;"	f	class:PApplet.AsyncImageLoader
extensionOptions	data/Table.java	/^  static public String extensionOptions(boolean loading, String filename, String options) {$/;"	m	class:Table
external	core/PApplet.java	/^  boolean external = false;$/;"	f	class:PApplet
face	core/PShapeSVG.java	/^    public FontFace face;$/;"	f	class:PShapeSVG.Font
family	core/PShape.java	/^  protected int family;$/;"	f	class:PShape
fbStack	opengl/PGraphicsOpenGL.java	/^  static protected FrameBuffer[] fbStack = new FrameBuffer[FB_STACK_DEPTH];$/;"	f	class:PGraphicsOpenGL
fbStackDepth	opengl/PGraphicsOpenGL.java	/^  static protected int fbStackDepth;$/;"	f	class:PGraphicsOpenGL
fboHeight	opengl/PGL.java	/^  protected static int fboWidth, fboHeight;$/;"	f	class:PGL
fboLayerCreated	opengl/PGL.java	/^  protected static boolean fboLayerCreated = false;$/;"	f	class:PGL
fboLayerInUse	opengl/PGL.java	/^  protected static boolean fboLayerInUse = false;$/;"	f	class:PGL
fboLayerRequested	opengl/PGL.java	/^  protected static boolean fboLayerRequested = false;$/;"	f	class:PGL
fboMultisampleSupported	opengl/PGraphicsOpenGL.java	/^  static public boolean fboMultisampleSupported;$/;"	f	class:PGraphicsOpenGL
fboWidth	opengl/PGL.java	/^  protected static int fboWidth, fboHeight;$/;"	f	class:PGL
filename	core/PApplet.java	/^    String filename;$/;"	f	class:PApplet.AsyncImageLoader
fill	core/PApplet.java	/^  public void fill(float gray) {$/;"	m	class:PApplet
fill	core/PApplet.java	/^  public void fill(float gray, float alpha) {$/;"	m	class:PApplet
fill	core/PApplet.java	/^  public void fill(float v1, float v2, float v3) {$/;"	m	class:PApplet
fill	core/PApplet.java	/^  public void fill(float v1, float v2, float v3, float alpha) {$/;"	m	class:PApplet
fill	core/PApplet.java	/^  public void fill(int rgb) {$/;"	m	class:PApplet
fill	core/PApplet.java	/^  public void fill(int rgb, float alpha) {$/;"	m	class:PApplet
fill	core/PGraphics.java	/^  public boolean fill;$/;"	f	class:PGraphics
fill	core/PGraphics.java	/^  public void fill(float gray) {$/;"	m	class:PGraphics
fill	core/PGraphics.java	/^  public void fill(float gray, float alpha) {$/;"	m	class:PGraphics
fill	core/PGraphics.java	/^  public void fill(float v1, float v2, float v3) {$/;"	m	class:PGraphics
fill	core/PGraphics.java	/^  public void fill(float v1, float v2, float v3, float alpha) {$/;"	m	class:PGraphics
fill	core/PGraphics.java	/^  public void fill(int rgb) {$/;"	m	class:PGraphics
fill	core/PGraphics.java	/^  public void fill(int rgb, float alpha) {$/;"	m	class:PGraphics
fill	core/PShape.java	/^  protected boolean fill;$/;"	f	class:PShape
fill	core/PShape.java	/^  public void fill(float gray) {$/;"	m	class:PShape
fill	core/PShape.java	/^  public void fill(float gray, float alpha) {$/;"	m	class:PShape
fill	core/PShape.java	/^  public void fill(float x, float y, float z) {$/;"	m	class:PShape
fill	core/PShape.java	/^  public void fill(float x, float y, float z, float a) {$/;"	m	class:PShape
fill	core/PShape.java	/^  public void fill(int rgb) {$/;"	m	class:PShape
fill	core/PShape.java	/^  public void fill(int rgb, float alpha) {$/;"	m	class:PShape
fill	core/PStyle.java	/^  public boolean fill;$/;"	f	class:PStyle
fill	opengl/PGraphicsOpenGL.java	/^    boolean fill;$/;"	f	class:PGraphicsOpenGL.Tessellator
fillA	core/PGraphics.java	/^  protected float fillR, fillG, fillB, fillA;$/;"	f	class:PGraphics
fillAi	core/PGraphics.java	/^  protected int fillRi, fillGi, fillBi, fillAi;$/;"	f	class:PGraphics
fillAlpha	core/PGraphics.java	/^  protected boolean fillAlpha;$/;"	f	class:PGraphics
fillB	core/PGraphics.java	/^  protected float fillR, fillG, fillB, fillA;$/;"	f	class:PGraphics
fillBi	core/PGraphics.java	/^  protected int fillRi, fillGi, fillBi, fillAi;$/;"	f	class:PGraphics
fillByteBuffer	opengl/PGL.java	/^  protected static void fillByteBuffer(ByteBuffer buf, int i0, int i1,$/;"	m	class:PGL
fillColor	core/PGraphics.java	/^  public int fillColor = 0xffFFFFFF;$/;"	f	class:PGraphics
fillColor	core/PShape.java	/^  protected int fillColor;$/;"	f	class:PShape
fillColor	core/PStyle.java	/^  public int fillColor;$/;"	f	class:PStyle
fillColor	opengl/PGraphicsOpenGL.java	/^    int fillColor;$/;"	f	class:PGraphicsOpenGL.InGeometry
fillColorObject	core/PGraphicsJava2D.java	/^  protected Color fillColorObject;$/;"	f	class:PGraphicsJava2D
fillFloatBuffer	opengl/PGL.java	/^  protected static void fillFloatBuffer(FloatBuffer buf, int i0, int i1,$/;"	m	class:PGL
fillFromCalc	core/PGraphics.java	/^  protected void fillFromCalc() {$/;"	m	class:PGraphics
fillFromCalc	core/PGraphicsJava2D.java	/^  protected void fillFromCalc() {$/;"	m	class:PGraphicsJava2D
fillFromCalc	opengl/PGraphicsOpenGL.java	/^  protected void fillFromCalc() {$/;"	m	class:PGraphicsOpenGL
fillG	core/PGraphics.java	/^  protected float fillR, fillG, fillB, fillA;$/;"	f	class:PGraphics
fillGi	core/PGraphics.java	/^  protected int fillRi, fillGi, fillBi, fillAi;$/;"	f	class:PGraphics
fillGradient	core/PGraphicsJava2D.java	/^  public boolean fillGradient;$/;"	f	class:PGraphicsJava2D
fillGradient	core/PShapeSVG.java	/^  Gradient fillGradient;$/;"	f	class:PShapeSVG
fillGradientObject	core/PGraphicsJava2D.java	/^  public Paint fillGradientObject;$/;"	f	class:PGraphicsJava2D
fillGradientPaint	core/PShapeSVG.java	/^  Paint fillGradientPaint;$/;"	f	class:PShapeSVG
fillIntBuffer	opengl/PGL.java	/^  protected static void fillIntBuffer(IntBuffer buf, int i0, int i1, int val) {$/;"	m	class:PGL
fillName	core/PShapeSVG.java	/^  String fillName;  \/\/ id of another object$/;"	f	class:PShapeSVG
fillOpacity	core/PShapeSVG.java	/^  float fillOpacity;$/;"	f	class:PShapeSVG
fillR	core/PGraphics.java	/^  protected float fillR, fillG, fillB, fillA;$/;"	f	class:PGraphics
fillRi	core/PGraphics.java	/^  protected int fillRi, fillGi, fillBi, fillAi;$/;"	f	class:PGraphics
fillShape	core/PGraphicsJava2D.java	/^  protected void fillShape(Shape s) {$/;"	m	class:PGraphicsJava2D
fillShortBuffer	opengl/PGL.java	/^  protected static void fillShortBuffer(ShortBuffer buf, int i0, int i1,$/;"	m	class:PGL
filter	core/PApplet.java	/^  public void filter(PShader shader) {$/;"	m	class:PApplet
filter	core/PApplet.java	/^  public void filter(int kind) {$/;"	m	class:PApplet
filter	core/PApplet.java	/^  public void filter(int kind, float param) {$/;"	m	class:PApplet
filter	core/PGraphics.java	/^  public void filter(PShader shader) {$/;"	m	class:PGraphics
filter	core/PGraphicsRetina2D.java	/^  public void filter(int kind) {$/;"	m	class:PGraphicsRetina2D
filter	core/PGraphicsRetina2D.java	/^  public void filter(int kind, float param) {$/;"	m	class:PGraphicsRetina2D
filter	core/PImage.java	/^  public void filter(int kind) {$/;"	m	class:PImage
filter	core/PImage.java	/^  public void filter(int kind, float param) {$/;"	m	class:PImage
filter	opengl/PGraphicsOpenGL.java	/^  public void filter(PShader shader) {$/;"	m	class:PGraphicsOpenGL
filter	opengl/PGraphicsOpenGL.java	/^  public void filter(int kind) {$/;"	m	class:PGraphicsOpenGL
filter	opengl/PGraphicsOpenGL.java	/^  public void filter(int kind, float param) {$/;"	m	class:PGraphicsOpenGL
filterImage	opengl/PGraphicsOpenGL.java	/^  protected PImage filterImage;$/;"	f	class:PGraphicsOpenGL
filterTexture	opengl/PGraphicsOpenGL.java	/^  protected Texture filterTexture;$/;"	f	class:PGraphicsOpenGL
filter_bilinear	core/PImage.java	/^  private int filter_bilinear() {$/;"	m	class:PImage	file:
filter_new_scanline	core/PImage.java	/^  private void filter_new_scanline() {$/;"	m	class:PImage	file:
finalize	opengl/FrameBuffer.java	/^  protected void finalize() throws Throwable {$/;"	m	class:FrameBuffer
finalize	opengl/PGraphicsOpenGL.java	/^  protected void finalize() throws Throwable {$/;"	m	class:PGraphicsOpenGL
finalize	opengl/PShader.java	/^  protected void finalize() throws Throwable {$/;"	m	class:PShader
finalize	opengl/PShapeOpenGL.java	/^  protected void finalize() throws Throwable {$/;"	m	class:PShapeOpenGL
finalize	opengl/Texture.java	/^  protected void finalize() throws Throwable {$/;"	m	class:Texture
finalizeFrameBufferObject	opengl/PGraphicsOpenGL.java	/^  synchronized static protected void finalizeFrameBufferObject(int id, int context) {$/;"	m	class:PGraphicsOpenGL
finalizeGLSLFragShaderObject	opengl/PGraphicsOpenGL.java	/^  synchronized static protected void finalizeGLSLFragShaderObject(int id,$/;"	m	class:PGraphicsOpenGL
finalizeGLSLProgramObject	opengl/PGraphicsOpenGL.java	/^  synchronized static protected void finalizeGLSLProgramObject(int id, int context) {$/;"	m	class:PGraphicsOpenGL
finalizeGLSLVertShaderObject	opengl/PGraphicsOpenGL.java	/^  synchronized static protected void finalizeGLSLVertShaderObject(int id,$/;"	m	class:PGraphicsOpenGL
finalizeLineBuffers	opengl/PShapeOpenGL.java	/^  protected void finalizeLineBuffers() {$/;"	m	class:PShapeOpenGL
finalizePointBuffers	opengl/PShapeOpenGL.java	/^  protected void finalizePointBuffers() {$/;"	m	class:PShapeOpenGL
finalizePolyBuffers	opengl/PShapeOpenGL.java	/^  protected void finalizePolyBuffers() {$/;"	m	class:PShapeOpenGL
finalizeRenderBufferObject	opengl/PGraphicsOpenGL.java	/^  synchronized static protected void finalizeRenderBufferObject(int id, int context) {$/;"	m	class:PGraphicsOpenGL
finalizeTextureObject	opengl/PGraphicsOpenGL.java	/^  synchronized protected static void finalizeTextureObject(int id, int context) {$/;"	m	class:PGraphicsOpenGL
finalizeVertexBufferObject	opengl/PGraphicsOpenGL.java	/^  synchronized static protected void finalizeVertexBufferObject(int id, int context) {$/;"	m	class:PGraphicsOpenGL
findChild	core/PShape.java	/^  public PShape findChild(String target) {$/;"	m	class:PShape
findFont	core/PFont.java	/^  static public Font findFont(String name) {$/;"	m	class:PFont
findIndex	core/PApplet.java	/^    protected int findIndex(Object object) {$/;"	m	class:PApplet.RegisteredMethods
findNative	core/PFont.java	/^  public Object findNative() {$/;"	m	class:PFont
findRow	data/Table.java	/^  public TableRow findRow(String value, String columnName) {$/;"	m	class:Table
findRow	data/Table.java	/^  public TableRow findRow(String value, int column) {$/;"	m	class:Table
findRowIndex	data/Table.java	/^  public int findRowIndex(String value, String columnName) {$/;"	m	class:Table
findRowIndex	data/Table.java	/^  public int findRowIndex(String value, int column) {$/;"	m	class:Table
findRowIndices	data/Table.java	/^  public int[] findRowIndices(String value, String columnName) {$/;"	m	class:Table
findRowIndices	data/Table.java	/^  public int[] findRowIndices(String value, int column) {$/;"	m	class:Table
findRowIterator	data/Table.java	/^  public Iterator<TableRow> findRowIterator(String value, String columnName) {$/;"	m	class:Table
findRowIterator	data/Table.java	/^  public Iterator<TableRow> findRowIterator(String value, int column) {$/;"	m	class:Table
findRows	data/Table.java	/^  public Iterable<TableRow> findRows(final String value, final String columnName) {$/;"	m	class:Table
findRows	data/Table.java	/^  public Iterable<TableRow> findRows(final String value, final int column) {$/;"	m	class:Table
finish	opengl/FrameBuffer.java	/^  public void finish(PGraphicsOpenGL pg) {$/;"	m	class:FrameBuffer
finish	opengl/LineStroker.java	/^  private void finish() {$/;"	m	class:LineStroker	file:
finish	opengl/PGL.java	/^  public abstract void finish();$/;"	m	class:PGL
finish	opengl/PJOGL.java	/^  public void finish() {$/;"	m	class:PJOGL
finished	core/PApplet.java	/^  public volatile boolean finished;$/;"	f	class:PApplet
firstCache	opengl/PGraphicsOpenGL.java	/^    int[] firstCache;$/;"	f	class:PGraphicsOpenGL.TexCache
firstFrame	opengl/PGL.java	/^  protected static boolean firstFrame = true;$/;"	f	class:PGL
firstIndex	opengl/PGraphicsOpenGL.java	/^    int[] firstIndex;$/;"	f	class:PGraphicsOpenGL.TexCache
firstLineIndex	opengl/PGraphicsOpenGL.java	/^    int firstLineIndex;$/;"	f	class:PGraphicsOpenGL.TessGeometry
firstLineIndexCache	opengl/PGraphicsOpenGL.java	/^    int firstLineIndexCache;$/;"	f	class:PGraphicsOpenGL.Tessellator
firstLineIndexCache	opengl/PShapeOpenGL.java	/^  protected int firstLineIndexCache;$/;"	f	class:PShapeOpenGL
firstLineVertex	opengl/PGraphicsOpenGL.java	/^    int firstLineVertex;$/;"	f	class:PGraphicsOpenGL.TessGeometry
firstLineVertex	opengl/PShapeOpenGL.java	/^  protected int firstLineVertex;$/;"	f	class:PShapeOpenGL
firstModifiedLineAttribute	opengl/PShapeOpenGL.java	/^  protected int firstModifiedLineAttribute;$/;"	f	class:PShapeOpenGL
firstModifiedLineColor	opengl/PShapeOpenGL.java	/^  protected int firstModifiedLineColor;$/;"	f	class:PShapeOpenGL
firstModifiedLineVertex	opengl/PShapeOpenGL.java	/^  protected int firstModifiedLineVertex;$/;"	f	class:PShapeOpenGL
firstModifiedPointAttribute	opengl/PShapeOpenGL.java	/^  protected int firstModifiedPointAttribute;$/;"	f	class:PShapeOpenGL
firstModifiedPointColor	opengl/PShapeOpenGL.java	/^  protected int firstModifiedPointColor;$/;"	f	class:PShapeOpenGL
firstModifiedPointVertex	opengl/PShapeOpenGL.java	/^  protected int firstModifiedPointVertex;$/;"	f	class:PShapeOpenGL
firstModifiedPolyAmbient	opengl/PShapeOpenGL.java	/^  protected int firstModifiedPolyAmbient;$/;"	f	class:PShapeOpenGL
firstModifiedPolyColor	opengl/PShapeOpenGL.java	/^  protected int firstModifiedPolyColor;$/;"	f	class:PShapeOpenGL
firstModifiedPolyEmissive	opengl/PShapeOpenGL.java	/^  protected int firstModifiedPolyEmissive;$/;"	f	class:PShapeOpenGL
firstModifiedPolyNormal	opengl/PShapeOpenGL.java	/^  protected int firstModifiedPolyNormal;$/;"	f	class:PShapeOpenGL
firstModifiedPolyShininess	opengl/PShapeOpenGL.java	/^  protected int firstModifiedPolyShininess;$/;"	f	class:PShapeOpenGL
firstModifiedPolySpecular	opengl/PShapeOpenGL.java	/^  protected int firstModifiedPolySpecular;$/;"	f	class:PShapeOpenGL
firstModifiedPolyTexcoord	opengl/PShapeOpenGL.java	/^  protected int firstModifiedPolyTexcoord;$/;"	f	class:PShapeOpenGL
firstModifiedPolyVertex	opengl/PShapeOpenGL.java	/^  protected int firstModifiedPolyVertex;$/;"	f	class:PShapeOpenGL
firstMouse	core/PApplet.java	/^  public boolean firstMouse;$/;"	f	class:PApplet
firstPointIndex	opengl/PGraphicsOpenGL.java	/^    int firstPointIndex;$/;"	f	class:PGraphicsOpenGL.TessGeometry
firstPointIndexCache	opengl/PGraphicsOpenGL.java	/^    int firstPointIndexCache;$/;"	f	class:PGraphicsOpenGL.Tessellator
firstPointIndexCache	opengl/PShapeOpenGL.java	/^  protected int firstPointIndexCache;$/;"	f	class:PShapeOpenGL
firstPointVertex	opengl/PGraphicsOpenGL.java	/^    int firstPointVertex;$/;"	f	class:PGraphicsOpenGL.TessGeometry
firstPointVertex	opengl/PShapeOpenGL.java	/^  protected int firstPointVertex;$/;"	f	class:PShapeOpenGL
firstPolyIndex	opengl/PGraphicsOpenGL.java	/^    int firstPolyIndex;$/;"	f	class:PGraphicsOpenGL.TessGeometry
firstPolyIndexCache	opengl/PGraphicsOpenGL.java	/^    int firstPolyIndexCache;$/;"	f	class:PGraphicsOpenGL.Tessellator
firstPolyIndexCache	opengl/PShapeOpenGL.java	/^  protected int firstPolyIndexCache;$/;"	f	class:PShapeOpenGL
firstPolyVertex	opengl/PGraphicsOpenGL.java	/^    int firstPolyVertex;$/;"	f	class:PGraphicsOpenGL.TessGeometry
firstPolyVertex	opengl/PShapeOpenGL.java	/^  protected int firstPolyVertex;$/;"	f	class:PShapeOpenGL
firstTexCache	opengl/PGraphicsOpenGL.java	/^    int firstTexCache;$/;"	f	class:PGraphicsOpenGL.Tessellator
firstTexIndex	opengl/PGraphicsOpenGL.java	/^    int firstTexIndex;$/;"	f	class:PGraphicsOpenGL.Tessellator
flavor	event/Event.java	/^  protected int flavor;$/;"	f	class:Event
flipArrayOnX	opengl/Texture.java	/^  protected void flipArrayOnX(int[] intArray, int mult)  {$/;"	m	class:Texture
flipArrayOnY	opengl/Texture.java	/^  protected void flipArrayOnY(int[] intArray, int mult) {$/;"	m	class:Texture
floatBuffer	opengl/PGraphicsOpenGL.java	/^  static protected FloatBuffer floatBuffer;$/;"	f	class:PGraphicsOpenGL
floatBuffer	opengl/PShader.java	/^  protected FloatBuffer floatBuffer;$/;"	f	class:PShader
floatCoords	opengl/LinePath.java	/^    float floatCoords[];$/;"	f	class:LinePath.PathIterator
floatCoords	opengl/LinePath.java	/^  protected float[] floatCoords;$/;"	f	class:LinePath
float_nf	core/PApplet.java	/^  static private NumberFormat float_nf;$/;"	f	class:PApplet	file:
float_nf_commas	core/PApplet.java	/^  static private boolean float_nf_commas;$/;"	f	class:PApplet	file:
float_nf_left	core/PApplet.java	/^  static private int float_nf_left, float_nf_right;$/;"	f	class:PApplet	file:
float_nf_right	core/PApplet.java	/^  static private int float_nf_left, float_nf_right;$/;"	f	class:PApplet	file:
floor	core/PApplet.java	/^  static public final int floor(float n) {$/;"	m	class:PApplet
flush	core/PApplet.java	/^  public void flush() {$/;"	m	class:PApplet
flush	core/PGraphics.java	/^  public void flush() {$/;"	m	class:PGraphics
flush	opengl/PGL.java	/^  public abstract void flush();$/;"	m	class:PGL
flush	opengl/PGraphicsOpenGL.java	/^  public void flush() {$/;"	m	class:PGraphicsOpenGL
flush	opengl/PJOGL.java	/^  public void flush() {$/;"	m	class:PJOGL
flushLines	opengl/PGraphicsOpenGL.java	/^  protected void flushLines() {$/;"	m	class:PGraphicsOpenGL
flushMode	opengl/PGraphicsOpenGL.java	/^  protected int flushMode = FLUSH_WHEN_FULL;$/;"	f	class:PGraphicsOpenGL
flushPixels	opengl/PGraphicsOpenGL.java	/^  protected void flushPixels() {$/;"	m	class:PGraphicsOpenGL
flushPoints	opengl/PGraphicsOpenGL.java	/^  protected void flushPoints() {$/;"	m	class:PGraphicsOpenGL
flushPolys	opengl/PGraphicsOpenGL.java	/^  protected void flushPolys() {$/;"	m	class:PGraphicsOpenGL
focusGained	core/PApplet.java	/^  public void focusGained() { }$/;"	m	class:PApplet
focusGained	core/PApplet.java	/^  public void focusGained(FocusEvent e) {$/;"	m	class:PApplet
focusLost	core/PApplet.java	/^  public void focusLost() { }$/;"	m	class:PApplet
focusLost	core/PApplet.java	/^  public void focusLost(FocusEvent e) {$/;"	m	class:PApplet
focused	core/PApplet.java	/^  public boolean focused = false;$/;"	f	class:PApplet
font	core/PFont.java	/^  protected Font font;$/;"	f	class:PFont
fontDifferent	core/PFont.java	/^  static protected HashMap<String,Font> fontDifferent;$/;"	f	class:PFont
fontFamily	core/PShapeSVG.java	/^    String fontFamily;$/;"	f	class:PShapeSVG.FontFace
fontMap	opengl/PGraphicsOpenGL.java	/^  protected WeakHashMap<PFont, FontTexture> fontMap =$/;"	f	class:PGraphicsOpenGL
fontSearched	core/PFont.java	/^  protected boolean fontSearched;$/;"	f	class:PFont
fontStretch	core/PShapeSVG.java	/^    String fontStretch;$/;"	f	class:PShapeSVG.FontFace
fontWeight	core/PShapeSVG.java	/^    int fontWeight;    \/\/ can also be normal or bold (also comma separated)$/;"	f	class:PShapeSVG.FontFace
fonts	core/PFont.java	/^  static protected Font[] fonts;$/;"	f	class:PFont
format	core/PImage.java	/^  public int format;$/;"	f	class:PImage
format	data/JSONArray.java	/^  public String format(int indentFactor) {$/;"	m	class:JSONArray
format	data/JSONObject.java	/^  public String format(int indentFactor) {$/;"	m	class:JSONObject
format	data/XML.java	/^  public String format(int indent) {$/;"	m	class:XML
format	opengl/Texture.java	/^    public int format;$/;"	f	class:Texture.Parameters
fracU	core/PImage.java	/^  private int fracU, ifU, fracV, ifV, u1, u2, v1, v2, sX, sY, iw, iw1, ih1;$/;"	f	class:PImage	file:
fracV	core/PImage.java	/^  private int fracU, ifU, fracV, ifV, u1, u2, v1, v2, sX, sY, iw, iw1, ih1;$/;"	f	class:PImage	file:
fragmentFilename	opengl/PShader.java	/^  protected String fragmentFilename;$/;"	f	class:PShader
fragmentShaderSource	opengl/PShader.java	/^  protected String[] fragmentShaderSource;$/;"	f	class:PShader
fragmentURL	opengl/PShader.java	/^  protected URL fragmentURL;$/;"	f	class:PShader
fragmentedGroup	opengl/PShapeOpenGL.java	/^  protected boolean fragmentedGroup(PGraphicsOpenGL g) {$/;"	m	class:PShapeOpenGL
frame	core/PApplet.java	/^  public Frame frame;$/;"	f	class:PApplet
frameCount	core/PApplet.java	/^  public int frameCount;$/;"	f	class:PApplet
frameRate	core/PApplet.java	/^  public float frameRate = 10;$/;"	f	class:PApplet
frameRate	core/PApplet.java	/^  public void frameRate(float fps) {$/;"	m	class:PApplet
frameRateLastNanos	core/PApplet.java	/^  protected long frameRateLastNanos = 0;$/;"	f	class:PApplet
frameRatePeriod	core/PApplet.java	/^  protected long frameRatePeriod = 1000000000L \/ 60L;$/;"	f	class:PApplet
frameRateTarget	core/PApplet.java	/^  protected float frameRateTarget = 60;$/;"	f	class:PApplet
framebufferRenderbuffer	opengl/PGL.java	/^  public abstract void framebufferRenderbuffer(int target, int attachment, int rendbuferfTarget, int renderbuffer);$/;"	m	class:PGL
framebufferRenderbuffer	opengl/PJOGL.java	/^  public void framebufferRenderbuffer(int target, int attachment, int rendbuferfTarget, int renderbuffer) {$/;"	m	class:PJOGL
framebufferTexture2D	opengl/PGL.java	/^  public abstract void framebufferTexture2D(int target, int attachment, int texTarget, int texture, int level);$/;"	m	class:PGL
framebufferTexture2D	opengl/PJOGL.java	/^  public void framebufferTexture2D(int target, int attachment, int texTarget, int texture, int level) {$/;"	m	class:PJOGL
fromAngle	core/PVector.java	/^  static public PVector fromAngle(float angle) {$/;"	m	class:PVector
fromAngle	core/PVector.java	/^  static public PVector fromAngle(float angle, PVector target) {$/;"	m	class:PVector
fromRange	data/IntList.java	/^  static public IntList fromRange(int start, int stop) {$/;"	m	class:IntList
fromRange	data/IntList.java	/^  static public IntList fromRange(int stop) {$/;"	m	class:IntList
frontFBO	opengl/PJOGL.java	/^  protected static FBObject frontFBO;$/;"	f	class:PJOGL
frontFace	opengl/PGL.java	/^  public abstract void frontFace(int dir);$/;"	m	class:PGL
frontFace	opengl/PJOGL.java	/^  public void frontFace(int dir) {$/;"	m	class:PJOGL
frontTex	opengl/PGL.java	/^  protected static int backTex, frontTex;$/;"	f	class:PGL
frontTexAttach	opengl/PJOGL.java	/^  protected static FBObject.TextureAttachment frontTexAttach;$/;"	f	class:PJOGL
frustum	core/PApplet.java	/^  public void frustum(float left, float right,$/;"	m	class:PApplet
frustum	core/PGraphics.java	/^  public void frustum(float left, float right,$/;"	m	class:PGraphics
frustum	opengl/PGraphics2D.java	/^  public void frustum(float left, float right, float bottom, float top,$/;"	m	class:PGraphics2D
frustum	opengl/PGraphicsOpenGL.java	/^  public void frustum(float left, float right, float bottom, float top,$/;"	m	class:PGraphicsOpenGL
g	core/PApplet.java	/^  public PGraphics g;$/;"	f	class:PApplet
g	core/PImage.java	/^  private int r, g, b, a;$/;"	f	class:PImage	file:
g2	core/PGraphicsJava2D.java	/^  public Graphics2D g2;$/;"	f	class:PGraphicsJava2D
genBuffers	opengl/PGL.java	/^  public abstract void genBuffers(int n, IntBuffer buffers);$/;"	m	class:PGL
genBuffers	opengl/PJOGL.java	/^  public void genBuffers(int n, IntBuffer buffers) {$/;"	m	class:PJOGL
genFramebuffers	opengl/PGL.java	/^  public abstract void genFramebuffers(int n, IntBuffer framebuffers);$/;"	m	class:PGL
genFramebuffers	opengl/PJOGL.java	/^  public void genFramebuffers(int n, IntBuffer framebuffers) {$/;"	m	class:PJOGL
genRenderbuffers	opengl/PGL.java	/^  public abstract void genRenderbuffers(int n, IntBuffer renderbuffers);$/;"	m	class:PGL
genRenderbuffers	opengl/PJOGL.java	/^  public void genRenderbuffers(int n, IntBuffer renderbuffers) {$/;"	m	class:PJOGL
genTextures	opengl/PGL.java	/^  public abstract void genTextures(int n, IntBuffer textures);$/;"	m	class:PGL
genTextures	opengl/PJOGL.java	/^  public void genTextures(int n, IntBuffer textures) {$/;"	m	class:PJOGL
generateMipmap	opengl/PGL.java	/^  public abstract void generateMipmap(int target);$/;"	m	class:PGL
generateMipmap	opengl/PJOGL.java	/^  public void generateMipmap(int target) {$/;"	m	class:PJOGL
get	core/PApplet.java	/^  public PImage get() {$/;"	m	class:PApplet
get	core/PApplet.java	/^  public PImage get(int x, int y, int w, int h) {$/;"	m	class:PApplet
get	core/PApplet.java	/^  public int get(int x, int y) {$/;"	m	class:PApplet
get	core/PGraphicsJava2D.java	/^  public PImage get() {$/;"	m	class:PGraphicsJava2D
get	core/PGraphicsJava2D.java	/^  public int get(int x, int y) {$/;"	m	class:PGraphicsJava2D
get	core/PGraphicsRetina2D.java	/^  public PImage get() {$/;"	m	class:PGraphicsRetina2D
get	core/PGraphicsRetina2D.java	/^  public PImage get(int x, int y, int w, int h) {$/;"	m	class:PGraphicsRetina2D
get	core/PGraphicsRetina2D.java	/^  public int get(int x, int y) {$/;"	m	class:PGraphicsRetina2D
get	core/PImage.java	/^  public PImage get() {$/;"	m	class:PImage
get	core/PImage.java	/^  public PImage get(int x, int y, int w, int h) {$/;"	m	class:PImage
get	core/PImage.java	/^  public int get(int x, int y) {$/;"	m	class:PImage
get	core/PMatrix.java	/^  public PMatrix get();  $/;"	m	interface:PMatrix
get	core/PMatrix.java	/^  public float[] get(float[] target);$/;"	m	interface:PMatrix
get	core/PMatrix2D.java	/^  public PMatrix2D get() {$/;"	m	class:PMatrix2D
get	core/PMatrix2D.java	/^  public float[] get(float[] target) {$/;"	m	class:PMatrix2D
get	core/PMatrix3D.java	/^  public PMatrix3D get() {$/;"	m	class:PMatrix3D
get	core/PMatrix3D.java	/^  public float[] get(float[] target) {$/;"	m	class:PMatrix3D
get	core/PVector.java	/^  public PVector get() {$/;"	m	class:PVector
get	core/PVector.java	/^  public float[] get(float[] target) {$/;"	m	class:PVector
get	data/FloatDict.java	/^  public float get(String key) {$/;"	m	class:FloatDict
get	data/FloatList.java	/^  public float get(int index) {$/;"	m	class:FloatList
get	data/IntDict.java	/^  public int get(String key) {$/;"	m	class:IntDict
get	data/IntList.java	/^  public int get(int index) {$/;"	m	class:IntList
get	data/JSONArray.java	/^  private Object get(int index) {$/;"	m	class:JSONArray	file:
get	data/JSONObject.java	/^  private Object get(String key) {$/;"	m	class:JSONObject	file:
get	data/StringDict.java	/^  public String get(String key) {$/;"	m	class:StringDict
get	data/StringList.java	/^  public String get(int index) {$/;"	m	class:StringList
get	opengl/PGraphicsOpenGL.java	/^  public int get(int x, int y) {$/;"	m	class:PGraphicsOpenGL
get	opengl/Texture.java	/^  public void get(int[] pixels) {$/;"	m	class:Texture
getAction	event/Event.java	/^  public int getAction() {$/;"	m	class:Event
getActiveAttrib	opengl/PGL.java	/^  public abstract String getActiveAttrib(int program, int index, IntBuffer size, IntBuffer type);$/;"	m	class:PGL
getActiveAttrib	opengl/PJOGL.java	/^  public String getActiveAttrib(int program, int index, IntBuffer size, IntBuffer type) {$/;"	m	class:PJOGL
getActiveUniform	opengl/PGL.java	/^  public abstract String getActiveUniform(int program, int index, IntBuffer size, IntBuffer type);$/;"	m	class:PGL
getActiveUniform	opengl/PJOGL.java	/^  public String getActiveUniform(int program, int index, IntBuffer size, IntBuffer type) {$/;"	m	class:PJOGL
getAmbient	core/PShape.java	/^  public int getAmbient(int index) {$/;"	m	class:PShape
getAmbient	opengl/PShapeOpenGL.java	/^  public int getAmbient(int index) {$/;"	m	class:PShapeOpenGL
getAmount	event/MouseEvent.java	/^  public float getAmount() {$/;"	m	class:MouseEvent
getAttachedShaders	opengl/PGL.java	/^  public abstract void getAttachedShaders(int program, int maxCount, IntBuffer count, IntBuffer shaders);$/;"	m	class:PGL
getAttachedShaders	opengl/PJOGL.java	/^  public void getAttachedShaders(int program, int maxCount, IntBuffer count, IntBuffer shaders) {$/;"	m	class:PJOGL
getAttribLocation	opengl/PGL.java	/^  public abstract int getAttribLocation(int program, String name);$/;"	m	class:PGL
getAttribLocation	opengl/PJOGL.java	/^  public int getAttribLocation(int program, String name) {$/;"	m	class:PJOGL
getAttributeCount	data/XML.java	/^  public int getAttributeCount() {$/;"	m	class:XML
getAttributeLoc	opengl/PShader.java	/^  protected int getAttributeLoc(String name) {$/;"	m	class:PShader
getBasePath	core/PShapeOBJ.java	/^  static protected String getBasePath(PApplet parent, String filename) {$/;"	m	class:PShapeOBJ
getBoolean	data/JSONArray.java	/^  public boolean getBoolean(int index) {$/;"	m	class:JSONArray
getBoolean	data/JSONArray.java	/^  public boolean getBoolean(int index, boolean defaultValue)  {$/;"	m	class:JSONArray
getBoolean	data/JSONObject.java	/^  public boolean getBoolean(String key) {$/;"	m	class:JSONObject
getBoolean	data/JSONObject.java	/^  public boolean getBoolean(String key, boolean defaultValue) {$/;"	m	class:JSONObject
getBooleanArray	data/JSONArray.java	/^  public boolean[] getBooleanArray() {$/;"	m	class:JSONArray
getBooleanv	opengl/PGL.java	/^  public abstract void getBooleanv(int value, IntBuffer data);$/;"	m	class:PGL
getBooleanv	opengl/PJOGL.java	/^  public void getBooleanv(int value, IntBuffer data) {$/;"	m	class:PJOGL
getBufferParameteriv	opengl/PGL.java	/^  public abstract void getBufferParameteriv(int target, int value, IntBuffer data);$/;"	m	class:PGL
getBufferParameteriv	opengl/PJOGL.java	/^  public void getBufferParameteriv(int target, int value, IntBuffer data) {$/;"	m	class:PJOGL
getBufferPixels	opengl/Texture.java	/^  public void getBufferPixels(int[] pixels) {$/;"	m	class:Texture
getButton	event/MouseEvent.java	/^  public int getButton() {$/;"	m	class:MouseEvent
getByteArray	opengl/PGL.java	/^  protected static void getByteArray(ByteBuffer buf, byte[] arr) {$/;"	m	class:PGL
getCache	core/PApplet.java	/^  public Object getCache(PImage image) {$/;"	m	class:PApplet
getCache	core/PGraphics.java	/^  public Object getCache(PImage image) {$/;"	m	class:PGraphics
getCanvas	opengl/PGL.java	/^  public abstract Object getCanvas();$/;"	m	class:PGL
getCanvas	opengl/PJOGL.java	/^  public Canvas getCanvas() {$/;"	m	class:PJOGL
getChild	core/PShape.java	/^  public PShape getChild(String target) {$/;"	m	class:PShape
getChild	core/PShape.java	/^  public PShape getChild(int index) {$/;"	m	class:PShape
getChild	core/PShapeSVG.java	/^  public PShape getChild(String name) {$/;"	m	class:PShapeSVG
getChild	data/XML.java	/^  public XML getChild(String name) {$/;"	m	class:XML
getChild	data/XML.java	/^  public XML getChild(int index) {$/;"	m	class:XML
getChildCount	core/PShape.java	/^  public int getChildCount() {$/;"	m	class:PShape
getChildCount	data/XML.java	/^  public int getChildCount() {$/;"	m	class:XML
getChildIndex	core/PShape.java	/^  public int getChildIndex(PShape who) {$/;"	m	class:PShape
getChildRecursive	data/XML.java	/^  protected XML getChildRecursive(String[] items, int offset) {$/;"	m	class:XML
getChildren	core/PShape.java	/^  public PShape[] getChildren() {$/;"	m	class:PShape
getChildren	data/XML.java	/^  public XML[] getChildren() {$/;"	m	class:XML
getChildren	data/XML.java	/^  public XML[] getChildren(String name) {$/;"	m	class:XML
getChildrenRecursive	data/XML.java	/^  protected XML[] getChildrenRecursive(String[] items, int offset) {$/;"	m	class:XML
getClickCount	event/MouseEvent.java	/^  public int getClickCount() {$/;"	m	class:MouseEvent
getColorModel	core/PShapeSVG.java	/^      public ColorModel getColorModel() { return ColorModel.getRGBdefault(); }$/;"	m	class:PShapeSVG.LinearGradientPaint.LinearGradientContext
getColorModel	core/PShapeSVG.java	/^      public ColorModel getColorModel() { return ColorModel.getRGBdefault(); }$/;"	m	class:PShapeSVG.RadialGradientPaint.RadialGradientContext
getColorValue	opengl/PGL.java	/^  protected int getColorValue(int scrX, int scrY) {$/;"	m	class:PGL
getColumnCount	data/Table.java	/^    public int getColumnCount() {$/;"	m	class:Table.RowPointer
getColumnCount	data/Table.java	/^  public int getColumnCount() {$/;"	m	class:Table
getColumnCount	data/TableRow.java	/^  public int getColumnCount();$/;"	m	interface:TableRow
getColumnIndex	data/Table.java	/^  protected int getColumnIndex(String name, boolean report) {$/;"	m	class:Table
getColumnIndex	data/Table.java	/^  public int getColumnIndex(String columnName) {$/;"	m	class:Table
getColumnTitle	data/Table.java	/^  public String getColumnTitle(int col) {$/;"	m	class:Table
getColumnTitles	data/Table.java	/^  public String[] getColumnTitles() {$/;"	m	class:Table
getColumnType	data/Table.java	/^    public int getColumnType(String columnName) {$/;"	m	class:Table.RowPointer
getColumnType	data/Table.java	/^    public int getColumnType(int column) {$/;"	m	class:Table.RowPointer
getColumnType	data/Table.java	/^  public int getColumnType(String columnName) {$/;"	m	class:Table
getColumnType	data/Table.java	/^  public int getColumnType(int column) {$/;"	m	class:Table
getColumnType	data/TableRow.java	/^  public int getColumnType(String columnName);$/;"	m	interface:TableRow
getColumnType	data/TableRow.java	/^  public int getColumnType(int column);$/;"	m	interface:TableRow
getColumnTypes	data/Table.java	/^    public int[] getColumnTypes() {$/;"	m	class:Table.RowPointer
getColumnTypes	data/Table.java	/^  public int[] getColumnTypes() {$/;"	m	class:Table
getColumnTypes	data/TableRow.java	/^  public int[] getColumnTypes();$/;"	m	interface:TableRow
getContent	data/XML.java	/^  public String getContent() {$/;"	m	class:XML
getContent	data/XML.java	/^  public String getContent(String defaultValue) {$/;"	m	class:XML
getCount	event/MouseEvent.java	/^  public int getCount() {$/;"	m	class:MouseEvent
getCurrentContext	opengl/PGL.java	/^  protected int getCurrentContext() {$/;"	m	class:PGL
getCurrentTexture	opengl/FontTexture.java	/^  public PImage getCurrentTexture() {$/;"	m	class:FontTexture
getDefaultDrawBuffer	opengl/FrameBuffer.java	/^  public int getDefaultDrawBuffer() {$/;"	m	class:FrameBuffer
getDefaultDrawBuffer	opengl/PGL.java	/^  protected int getDefaultDrawBuffer()  {$/;"	m	class:PGL
getDefaultDrawBuffer	opengl/PJOGL.java	/^  protected int getDefaultDrawBuffer() {$/;"	m	class:PJOGL
getDefaultReadBuffer	opengl/FrameBuffer.java	/^  public int getDefaultReadBuffer() {$/;"	m	class:FrameBuffer
getDefaultReadBuffer	opengl/PGL.java	/^  protected int getDefaultReadBuffer()  {$/;"	m	class:PGL
getDefaultReadBuffer	opengl/PJOGL.java	/^  protected int getDefaultReadBuffer() {$/;"	m	class:PJOGL
getDepth	core/PShape.java	/^  public float getDepth() {$/;"	m	class:PShape
getDepth	opengl/PShapeOpenGL.java	/^  public float getDepth() {$/;"	m	class:PShapeOpenGL
getDepthBits	opengl/PGL.java	/^  protected int getDepthBits()  {$/;"	m	class:PGL
getDepthBits	opengl/PJOGL.java	/^  protected int getDepthBits() {$/;"	m	class:PJOGL
getDepthTest	opengl/PGL.java	/^  protected boolean getDepthTest() {$/;"	m	class:PGL
getDepthValue	opengl/PGL.java	/^  protected float getDepthValue(int scrX, int scrY) {$/;"	m	class:PGL
getDepthWriteMask	opengl/PGL.java	/^  protected boolean getDepthWriteMask() {$/;"	m	class:PGL
getDerivedFont	opengl/PGL.java	/^  protected Object getDerivedFont(Object font, float size) {$/;"	m	class:PGL
getDerivedFont	opengl/PJOGL.java	/^  protected Object getDerivedFont(Object font, float size) {$/;"	m	class:PJOGL
getDouble	data/JSONArray.java	/^  public double getDouble(int index) {$/;"	m	class:JSONArray
getDouble	data/JSONArray.java	/^  public double getDouble(int index, double defaultValue) {$/;"	m	class:JSONArray
getDouble	data/JSONObject.java	/^  public double getDouble(String key) {$/;"	m	class:JSONObject
getDouble	data/JSONObject.java	/^  public double getDouble(String key, double defaultValue) {$/;"	m	class:JSONObject
getDouble	data/Table.java	/^    public double getDouble(String columnName) {$/;"	m	class:Table.RowPointer
getDouble	data/Table.java	/^    public double getDouble(int column) {$/;"	m	class:Table.RowPointer
getDouble	data/Table.java	/^  public double getDouble(int row, String columnName) {$/;"	m	class:Table
getDouble	data/Table.java	/^  public double getDouble(int row, int column) {$/;"	m	class:Table
getDouble	data/TableRow.java	/^  public double getDouble(String columnName);$/;"	m	interface:TableRow
getDouble	data/TableRow.java	/^  public double getDouble(int column);$/;"	m	interface:TableRow
getDouble	data/XML.java	/^  public double getDouble(String name) {$/;"	m	class:XML
getDouble	data/XML.java	/^  public double getDouble(String name, double defaultValue) {$/;"	m	class:XML
getDoubleArray	data/JSONArray.java	/^  public double[] getDoubleArray() {$/;"	m	class:JSONArray
getDoubleColumn	data/Table.java	/^  public double[] getDoubleColumn(String name) {$/;"	m	class:Table
getDoubleColumn	data/Table.java	/^  public double[] getDoubleColumn(int col) {$/;"	m	class:Table
getDoubleContent	data/XML.java	/^  public double getDoubleContent() {$/;"	m	class:XML
getDoubleContent	data/XML.java	/^  public double getDoubleContent(double defaultValue) {$/;"	m	class:XML
getDoubleRow	data/Table.java	/^  public double[] getDoubleRow(int row) {$/;"	m	class:Table
getDrawFramebuffer	opengl/PGL.java	/^  protected int getDrawFramebuffer()  {$/;"	m	class:PGL
getDrawFramebuffer	opengl/PJOGL.java	/^  protected int getDrawFramebuffer() {$/;"	m	class:PJOGL
getEmissive	core/PShape.java	/^  public int getEmissive(int index) {$/;"	m	class:PShape
getEmissive	opengl/PShapeOpenGL.java	/^  public int getEmissive(int index) {$/;"	m	class:PShapeOpenGL
getError	opengl/PGL.java	/^  public abstract int getError();$/;"	m	class:PGL
getError	opengl/PJOGL.java	/^  public int getError() {$/;"	m	class:PJOGL
getExtension	core/PApplet.java	/^  static public String getExtension(String filename) {$/;"	m	class:PApplet
getFamily	core/PShape.java	/^  public int getFamily() {$/;"	m	class:PShape
getFill	core/PShape.java	/^  public int getFill(int index) {$/;"	m	class:PShape
getFill	opengl/PShapeOpenGL.java	/^  public int getFill(int index) {$/;"	m	class:PShapeOpenGL
getFlavor	event/Event.java	/^  public int getFlavor() {$/;"	m	class:Event
getFloat	data/JSONArray.java	/^  public float getFloat(int index) {$/;"	m	class:JSONArray
getFloat	data/JSONArray.java	/^  public float getFloat(int index, float defaultValue) {$/;"	m	class:JSONArray
getFloat	data/JSONObject.java	/^  public float getFloat(String key) {$/;"	m	class:JSONObject
getFloat	data/JSONObject.java	/^  public float getFloat(String key, float defaultValue) {$/;"	m	class:JSONObject
getFloat	data/Table.java	/^    public float getFloat(String columnName) {$/;"	m	class:Table.RowPointer
getFloat	data/Table.java	/^    public float getFloat(int column) {$/;"	m	class:Table.RowPointer
getFloat	data/Table.java	/^  public float getFloat(int row, String columnName) {$/;"	m	class:Table
getFloat	data/Table.java	/^  public float getFloat(int row, int column) {$/;"	m	class:Table
getFloat	data/TableRow.java	/^  public float getFloat(String columnName);$/;"	m	interface:TableRow
getFloat	data/TableRow.java	/^  public float getFloat(int column);$/;"	m	interface:TableRow
getFloat	data/XML.java	/^  public float getFloat(String name) {$/;"	m	class:XML
getFloat	data/XML.java	/^  public float getFloat(String name, float defaultValue) {$/;"	m	class:XML
getFloatArray	data/JSONArray.java	/^  public float[] getFloatArray() {$/;"	m	class:JSONArray
getFloatArray	opengl/PGL.java	/^  protected static void getFloatArray(FloatBuffer buf, float[] arr) {$/;"	m	class:PGL
getFloatColumn	data/Table.java	/^  public float[] getFloatColumn(String name) {$/;"	m	class:Table
getFloatColumn	data/Table.java	/^  public float[] getFloatColumn(int col) {$/;"	m	class:Table
getFloatContent	data/XML.java	/^  public float getFloatContent() {$/;"	m	class:XML
getFloatContent	data/XML.java	/^  public float getFloatContent(float defaultValue) {$/;"	m	class:XML
getFloatDict	data/Table.java	/^  public FloatDict getFloatDict(String keyColumnName, String valueColumnName) {$/;"	m	class:Table
getFloatDict	data/Table.java	/^  public FloatDict getFloatDict(int keyColumn, int valueColumn) {$/;"	m	class:Table
getFloatList	data/Table.java	/^  public FloatList getFloatList(String columnName) {$/;"	m	class:Table
getFloatList	data/Table.java	/^  public FloatList getFloatList(int column) {$/;"	m	class:Table
getFloatRow	data/Table.java	/^  public float[] getFloatRow(int row) {$/;"	m	class:Table
getFloatWithUnit	core/PShapeSVG.java	/^  static protected float getFloatWithUnit(XML element, String attribute) {$/;"	m	class:PShapeSVG
getFloatv	opengl/PGL.java	/^  public abstract void getFloatv(int value, FloatBuffer data);$/;"	m	class:PGL
getFloatv	opengl/PJOGL.java	/^  public void getFloatv(int value, FloatBuffer data) {$/;"	m	class:PJOGL
getFont	core/PFont.java	/^  public Font getFont() {$/;"	m	class:PFont
getFontAscent	opengl/PGL.java	/^  protected int getFontAscent(Object font) {$/;"	m	class:PGL
getFontAscent	opengl/PJOGL.java	/^  protected int getFontAscent(Object font) {$/;"	m	class:PJOGL
getFontDescent	opengl/PGL.java	/^  protected int getFontDescent(Object font) {$/;"	m	class:PGL
getFontDescent	opengl/PJOGL.java	/^  protected int getFontDescent(Object font) {$/;"	m	class:PJOGL
getFontTexture	opengl/PGraphicsOpenGL.java	/^  protected FontTexture getFontTexture(PFont font) {$/;"	m	class:PGraphicsOpenGL
getFramebufferAttachmentParameteriv	opengl/PGL.java	/^  public abstract void getFramebufferAttachmentParameteriv(int target, int attachment, int pname, IntBuffer params);$/;"	m	class:PGL
getFramebufferAttachmentParameteriv	opengl/PJOGL.java	/^  public void getFramebufferAttachmentParameteriv(int target, int attachment, int pname, IntBuffer params) {$/;"	m	class:PJOGL
getGL	opengl/PJOGL.java	/^    private void getGL(GLAutoDrawable glDrawable) {$/;"	m	class:PJOGL.PGLListener	file:
getGLParameters	opengl/PGraphicsOpenGL.java	/^  protected void getGLParameters() {$/;"	m	class:PGraphicsOpenGL
getGLVersion	opengl/PGL.java	/^  protected int[] getGLVersion() {$/;"	m	class:PGL
getGlyph	core/PFont.java	/^  public Glyph getGlyph(char c) {$/;"	m	class:PFont
getGlyph	core/PFont.java	/^  public Glyph getGlyph(int i)  {$/;"	m	class:PFont
getGlyphCount	core/PFont.java	/^  public int getGlyphCount()  {$/;"	m	class:PFont
getHeight	core/PShape.java	/^  public float getHeight() {$/;"	m	class:PShape
getHeight	opengl/PShapeOpenGL.java	/^  public float getHeight() {$/;"	m	class:PShapeOpenGL
getHint	opengl/PGraphicsOpenGL.java	/^  protected boolean getHint(int which) {$/;"	m	class:PGraphicsOpenGL
getImage	core/PImage.java	/^  public Image getImage() {  \/\/ ignore$/;"	m	class:PImage
getImpl	core/PGraphicsJava2D.java	/^  protected void getImpl(int sourceX, int sourceY,$/;"	m	class:PGraphicsJava2D
getImpl	core/PImage.java	/^  protected void getImpl(int sourceX, int sourceY,$/;"	m	class:PImage
getImpl	opengl/PGraphicsOpenGL.java	/^  protected void getImpl(int sourceX, int sourceY,$/;"	m	class:PGraphicsOpenGL
getInt	data/JSONArray.java	/^  public int getInt(int index) {$/;"	m	class:JSONArray
getInt	data/JSONArray.java	/^  public int getInt(int index, int defaultValue) {$/;"	m	class:JSONArray
getInt	data/JSONObject.java	/^  public int getInt(String key) {$/;"	m	class:JSONObject
getInt	data/JSONObject.java	/^  public int getInt(String key, int defaultValue) {$/;"	m	class:JSONObject
getInt	data/Table.java	/^    public int getInt(String columnName) {$/;"	m	class:Table.RowPointer
getInt	data/Table.java	/^    public int getInt(int column) {$/;"	m	class:Table.RowPointer
getInt	data/Table.java	/^  public int getInt(int row, String columnName) {$/;"	m	class:Table
getInt	data/Table.java	/^  public int getInt(int row, int column) {$/;"	m	class:Table
getInt	data/TableRow.java	/^  public int getInt(String columnName);$/;"	m	interface:TableRow
getInt	data/TableRow.java	/^  public int getInt(int column);$/;"	m	interface:TableRow
getInt	data/XML.java	/^  public int getInt(String name) {$/;"	m	class:XML
getInt	data/XML.java	/^  public int getInt(String name, int defaultValue) {$/;"	m	class:XML
getIntArray	data/JSONArray.java	/^  public int[] getIntArray() {$/;"	m	class:JSONArray
getIntArray	opengl/PGL.java	/^  protected static void getIntArray(IntBuffer buf, int[] arr) {$/;"	m	class:PGL
getIntColumn	data/Table.java	/^  public int[] getIntColumn(String name) {$/;"	m	class:Table
getIntColumn	data/Table.java	/^  public int[] getIntColumn(int col) {$/;"	m	class:Table
getIntContent	data/XML.java	/^  public int getIntContent() {$/;"	m	class:XML
getIntContent	data/XML.java	/^  public int getIntContent(int defaultValue) {$/;"	m	class:XML
getIntDict	data/Table.java	/^  public IntDict getIntDict(String keyColumnName, String valueColumnName) {$/;"	m	class:Table
getIntDict	data/Table.java	/^  public IntDict getIntDict(int keyColumn, int valueColumn) {$/;"	m	class:Table
getIntList	data/Table.java	/^  public IntList getIntList(String columnName) {$/;"	m	class:Table
getIntList	data/Table.java	/^  public IntList getIntList(int column) {$/;"	m	class:Table
getIntRow	data/Table.java	/^  public int[] getIntRow(int row) {$/;"	m	class:Table
getIntegerv	opengl/PGL.java	/^  public abstract void getIntegerv(int value, IntBuffer data);$/;"	m	class:PGL
getIntegerv	opengl/PJOGL.java	/^  public void getIntegerv(int value, IntBuffer data) {$/;"	m	class:PJOGL
getJSONArray	data/JSONArray.java	/^  public JSONArray getJSONArray(int index) {$/;"	m	class:JSONArray
getJSONArray	data/JSONArray.java	/^  public JSONArray getJSONArray(int index, JSONArray defaultValue) {$/;"	m	class:JSONArray
getJSONArray	data/JSONObject.java	/^  public JSONArray getJSONArray(String key) {$/;"	m	class:JSONObject
getJSONObject	data/JSONArray.java	/^  public JSONObject getJSONObject(int index) {$/;"	m	class:JSONArray
getJSONObject	data/JSONArray.java	/^  public JSONObject getJSONObject(int index, JSONObject defaultValue) {$/;"	m	class:JSONArray
getJSONObject	data/JSONObject.java	/^  public JSONObject getJSONObject(String key) {$/;"	m	class:JSONObject
getKey	event/KeyEvent.java	/^  public char getKey() {$/;"	m	class:KeyEvent
getKeyCode	event/KeyEvent.java	/^  public int getKeyCode() {$/;"	m	class:KeyEvent
getKind	core/PShape.java	/^  public int getKind() {$/;"	m	class:PShape
getLast	opengl/PGraphicsOpenGL.java	/^    int getLast() {$/;"	m	class:PGraphicsOpenGL.IndexCache
getLastTexUnit	opengl/PShader.java	/^  protected int getLastTexUnit() {$/;"	m	class:PShader
getLastVertexX	opengl/PGraphicsOpenGL.java	/^    float getLastVertexX() {$/;"	m	class:PGraphicsOpenGL.InGeometry
getLastVertexY	opengl/PGraphicsOpenGL.java	/^    float getLastVertexY() {$/;"	m	class:PGraphicsOpenGL.InGeometry
getLastVertexZ	opengl/PGraphicsOpenGL.java	/^    float getLastVertexZ() {$/;"	m	class:PGraphicsOpenGL.InGeometry
getLineShader	opengl/PGraphicsOpenGL.java	/^  protected PShader getLineShader() {$/;"	m	class:PGraphicsOpenGL
getLineVertexMax	opengl/PGraphicsOpenGL.java	/^    void getLineVertexMax(PVector v, int first, int last) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
getLineVertexMin	opengl/PGraphicsOpenGL.java	/^    void getLineVertexMin(PVector v, int first, int last) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
getLineVertexSum	opengl/PGraphicsOpenGL.java	/^    int getLineVertexSum(PVector v, int first, int last) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
getLocalName	data/XML.java	/^  public String getLocalName() {$/;"	m	class:XML
getLong	data/JSONArray.java	/^  public long getLong(int index) {$/;"	m	class:JSONArray
getLong	data/JSONArray.java	/^  public long getLong(int index, long defaultValue) {$/;"	m	class:JSONArray
getLong	data/JSONObject.java	/^  public long getLong(String key) {$/;"	m	class:JSONObject
getLong	data/JSONObject.java	/^  public long getLong(String key, long defaultValue) {$/;"	m	class:JSONObject
getLong	data/Table.java	/^    public long getLong(String columnName) {$/;"	m	class:Table.RowPointer
getLong	data/Table.java	/^    public long getLong(int column) {$/;"	m	class:Table.RowPointer
getLong	data/Table.java	/^  public long getLong(int row, String columnName) {$/;"	m	class:Table
getLong	data/Table.java	/^  public long getLong(int row, int column) {$/;"	m	class:Table
getLong	data/TableRow.java	/^  public long getLong(String columnName);$/;"	m	interface:TableRow
getLong	data/TableRow.java	/^  public long getLong(int column);$/;"	m	interface:TableRow
getLong	data/XML.java	/^  public long getLong(String name, long defaultValue) {$/;"	m	class:XML
getLongArray	data/JSONArray.java	/^  public long[] getLongArray() {$/;"	m	class:JSONArray
getLongColumn	data/Table.java	/^  public long[] getLongColumn(String name) {$/;"	m	class:Table
getLongColumn	data/Table.java	/^  public long[] getLongColumn(int col) {$/;"	m	class:Table
getLongContent	data/XML.java	/^  public long getLongContent() {$/;"	m	class:XML
getLongContent	data/XML.java	/^  public long getLongContent(long defaultValue) {$/;"	m	class:XML
getLongRow	data/Table.java	/^  public long[] getLongRow(int row) {$/;"	m	class:Table
getMatrix	core/PApplet.java	/^  public PMatrix getMatrix() {$/;"	m	class:PApplet
getMatrix	core/PApplet.java	/^  public PMatrix2D getMatrix(PMatrix2D target) {$/;"	m	class:PApplet
getMatrix	core/PApplet.java	/^  public PMatrix3D getMatrix(PMatrix3D target) {$/;"	m	class:PApplet
getMatrix	core/PGraphics.java	/^  public PMatrix getMatrix() {$/;"	m	class:PGraphics
getMatrix	core/PGraphics.java	/^  public PMatrix2D getMatrix(PMatrix2D target) {$/;"	m	class:PGraphics
getMatrix	core/PGraphics.java	/^  public PMatrix3D getMatrix(PMatrix3D target) {$/;"	m	class:PGraphics
getMatrix	core/PGraphicsJava2D.java	/^  public PMatrix getMatrix() {$/;"	m	class:PGraphicsJava2D
getMatrix	core/PGraphicsJava2D.java	/^  public PMatrix2D getMatrix(PMatrix2D target) {$/;"	m	class:PGraphicsJava2D
getMatrix	core/PGraphicsJava2D.java	/^  public PMatrix3D getMatrix(PMatrix3D target) {$/;"	m	class:PGraphicsJava2D
getMatrix	opengl/PGraphics2D.java	/^  public PMatrix3D getMatrix(PMatrix3D target) {$/;"	m	class:PGraphics2D
getMatrix	opengl/PGraphicsOpenGL.java	/^  public PMatrix getMatrix() {$/;"	m	class:PGraphicsOpenGL
getMatrix	opengl/PGraphicsOpenGL.java	/^  public PMatrix3D getMatrix(PMatrix3D target) {$/;"	m	class:PGraphicsOpenGL
getMaxFloat	data/Table.java	/^  protected float getMaxFloat() {$/;"	m	class:Table
getMaxTexUnits	opengl/PGL.java	/^  protected int getMaxTexUnits() {$/;"	m	class:PGL
getMillis	event/Event.java	/^  public long getMillis() {$/;"	m	class:Event
getModifiedX1	core/PImage.java	/^  public int getModifiedX1() {  \/\/ ignore$/;"	m	class:PImage
getModifiedX1	opengl/Texture.java	/^  public int getModifiedX1() {$/;"	m	class:Texture
getModifiedX2	core/PImage.java	/^  public int getModifiedX2() {  \/\/ ignore$/;"	m	class:PImage
getModifiedX2	opengl/Texture.java	/^  public int getModifiedX2() {$/;"	m	class:Texture
getModifiedY1	core/PImage.java	/^  public int getModifiedY1() {  \/\/ ignore$/;"	m	class:PImage
getModifiedY1	opengl/Texture.java	/^  public int getModifiedY1() {$/;"	m	class:Texture
getModifiedY2	core/PImage.java	/^  public int getModifiedY2() {  \/\/ ignore$/;"	m	class:PImage
getModifiedY2	opengl/Texture.java	/^  public int getModifiedY2() {$/;"	m	class:Texture
getModifiers	event/Event.java	/^  public int getModifiers() {$/;"	m	class:Event
getName	core/PFont.java	/^  public String getName() {$/;"	m	class:PFont
getName	core/PShape.java	/^  public String getName() {$/;"	m	class:PShape
getName	data/XML.java	/^  public String getName() {$/;"	m	class:XML
getNative	core/PFont.java	/^  public Object getNative() {$/;"	m	class:PFont
getNative	core/PImage.java	/^  public Object getNative() {  \/\/ ignore$/;"	m	class:PImage
getNative	data/XML.java	/^  protected Object getNative() {$/;"	m	class:XML
getNative	event/Event.java	/^  public Object getNative() {$/;"	m	class:Event
getNormal	core/PShape.java	/^  public PVector getNormal(int index) {$/;"	m	class:PShape
getNormal	core/PShape.java	/^  public PVector getNormal(int index, PVector vec) {$/;"	m	class:PShape
getNormal	opengl/PShapeOpenGL.java	/^  public PVector getNormal(int index, PVector vec) {$/;"	m	class:PShapeOpenGL
getNormalX	core/PShape.java	/^  public float getNormalX(int index) {$/;"	m	class:PShape
getNormalX	opengl/PShapeOpenGL.java	/^  public float getNormalX(int index) {$/;"	m	class:PShapeOpenGL
getNormalY	core/PShape.java	/^  public float getNormalY(int index) {$/;"	m	class:PShape
getNormalY	opengl/PShapeOpenGL.java	/^  public float getNormalY(int index) {$/;"	m	class:PShapeOpenGL
getNormalZ	core/PShape.java	/^  public float getNormalZ(int index) {$/;"	m	class:PShape
getNormalZ	opengl/PShapeOpenGL.java	/^  public float getNormalZ(int index) {$/;"	m	class:PShapeOpenGL
getNumEdgeClosures	opengl/PGraphicsOpenGL.java	/^    int getNumEdgeClosures() {$/;"	m	class:PGraphicsOpenGL.InGeometry
getNumEdgeIndices	opengl/PGraphicsOpenGL.java	/^    int getNumEdgeIndices(boolean bevel) {$/;"	m	class:PGraphicsOpenGL.InGeometry
getNumEdgeVertices	opengl/PGraphicsOpenGL.java	/^    int getNumEdgeVertices(boolean bevel) {$/;"	m	class:PGraphicsOpenGL.InGeometry
getOrder	data/StringList.java	/^  public IntDict getOrder() {$/;"	m	class:StringList
getOrder	data/Table.java	/^  public IntDict getOrder(String columnName) {$/;"	m	class:Table
getOrder	data/Table.java	/^  public IntDict getOrder(int column) {$/;"	m	class:Table
getParam	core/PShape.java	/^  public float getParam(int index) {$/;"	m	class:PShape
getParameters	opengl/Texture.java	/^  public Parameters getParameters() {$/;"	m	class:Texture
getParams	core/PShape.java	/^  public float[] getParams() {$/;"	m	class:PShape
getParams	core/PShape.java	/^  public float[] getParams(float[] target) {$/;"	m	class:PShape
getParent	core/PShape.java	/^  public PShape getParent() {$/;"	m	class:PShape
getParent	data/XML.java	/^  public XML getParent() {$/;"	m	class:XML
getPathIterator	opengl/LinePath.java	/^  public PathIterator getPathIterator() {$/;"	m	class:LinePath
getPercent	data/FloatDict.java	/^  public FloatDict getPercent() {$/;"	m	class:FloatDict
getPercent	data/FloatList.java	/^  public FloatList getPercent() {$/;"	m	class:FloatList
getPercent	data/IntDict.java	/^  public FloatDict getPercent() {$/;"	m	class:IntDict
getPercent	data/IntList.java	/^  public FloatList getPercent() {$/;"	m	class:IntList
getPixelBuffer	opengl/FrameBuffer.java	/^  public IntBuffer getPixelBuffer() {$/;"	m	class:FrameBuffer
getPixels	opengl/FrameBuffer.java	/^  public void getPixels(int[] pixels) {$/;"	m	class:FrameBuffer
getPointShader	opengl/PGraphicsOpenGL.java	/^  protected PShader getPointShader() {$/;"	m	class:PGraphicsOpenGL
getPointVertexMax	opengl/PGraphicsOpenGL.java	/^    void getPointVertexMax(PVector v, int first, int last) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
getPointVertexMin	opengl/PGraphicsOpenGL.java	/^    void getPointVertexMin(PVector v, int first, int last) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
getPointVertexSum	opengl/PGraphicsOpenGL.java	/^    int getPointVertexSum(PVector v, int first, int last) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
getPolyShader	opengl/PGraphicsOpenGL.java	/^  protected PShader getPolyShader(boolean lit, boolean tex) {$/;"	m	class:PGraphicsOpenGL
getPolyVertexMax	opengl/PGraphicsOpenGL.java	/^    void getPolyVertexMax(PVector v, int first, int last) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
getPolyVertexMin	opengl/PGraphicsOpenGL.java	/^    void getPolyVertexMin(PVector v, int first, int last) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
getPolyVertexSum	opengl/PGraphicsOpenGL.java	/^    int getPolyVertexSum(PVector v, int first, int last) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
getPostScriptName	core/PFont.java	/^  public String getPostScriptName() {$/;"	m	class:PFont
getProgramInfoLog	opengl/PGL.java	/^  public abstract String getProgramInfoLog(int program);$/;"	m	class:PGL
getProgramInfoLog	opengl/PJOGL.java	/^  public String getProgramInfoLog(int program) {$/;"	m	class:PJOGL
getProgramiv	opengl/PGL.java	/^  public abstract void getProgramiv(int program, int pname, IntBuffer params);$/;"	m	class:PGL
getProgramiv	opengl/PJOGL.java	/^  public void getProgramiv(int program, int pname, IntBuffer params) {$/;"	m	class:PJOGL
getRaster	core/PGraphicsJava2D.java	/^  protected WritableRaster getRaster() {$/;"	m	class:PGraphicsJava2D
getRaster	core/PShapeSVG.java	/^      public Raster getRaster(int x, int y, int w, int h) {$/;"	m	class:PShapeSVG.LinearGradientPaint.LinearGradientContext
getRaster	core/PShapeSVG.java	/^      public Raster getRaster(int x, int y, int w, int h) {$/;"	m	class:PShapeSVG.RadialGradientPaint.RadialGradientContext
getRaw	core/PGraphics.java	/^  public PGraphics getRaw() { \/\/ ignore$/;"	m	class:PGraphics
getReadFramebuffer	opengl/PGL.java	/^  protected int getReadFramebuffer()  {$/;"	m	class:PGL
getReadFramebuffer	opengl/PJOGL.java	/^  protected int getReadFramebuffer() {$/;"	m	class:PJOGL
getRenderbufferParameteriv	opengl/PGL.java	/^  public abstract void getRenderbufferParameteriv(int target, int pname, IntBuffer params);$/;"	m	class:PGL
getRenderbufferParameteriv	opengl/PJOGL.java	/^  public void getRenderbufferParameteriv(int target, int pname, IntBuffer params) {$/;"	m	class:PJOGL
getRow	data/Table.java	/^  public TableRow getRow(int row) {$/;"	m	class:Table
getRowCount	data/Table.java	/^  public int getRowCount() {$/;"	m	class:Table
getShaderInfoLog	opengl/PGL.java	/^  public abstract String getShaderInfoLog(int shader);$/;"	m	class:PGL
getShaderInfoLog	opengl/PJOGL.java	/^  public String getShaderInfoLog(int shader) {$/;"	m	class:PJOGL
getShaderPrecisionFormat	opengl/PGL.java	/^  public abstract void getShaderPrecisionFormat(int shaderType, int precisionType, IntBuffer range, IntBuffer precision);$/;"	m	class:PGL
getShaderPrecisionFormat	opengl/PJOGL.java	/^  public void getShaderPrecisionFormat(int shaderType, int precisionType, IntBuffer range, IntBuffer precision) {$/;"	m	class:PJOGL
getShaderSource	opengl/PGL.java	/^  public abstract String getShaderSource(int shader);$/;"	m	class:PGL
getShaderSource	opengl/PJOGL.java	/^  public String getShaderSource(int shader) {$/;"	m	class:PJOGL
getShaderType	opengl/PShader.java	/^  static protected int getShaderType(String[] source, int defaultType) {$/;"	m	class:PShader
getShaderiv	opengl/PGL.java	/^  public abstract void getShaderiv(int shader, int pname, IntBuffer params);$/;"	m	class:PGL
getShaderiv	opengl/PJOGL.java	/^  public void getShaderiv(int shader, int pname, IntBuffer params) {$/;"	m	class:PJOGL
getShape	core/PFont.java	/^  public PShape getShape(char ch) {$/;"	m	class:PFont
getShape	core/PFont.java	/^  public PShape getShape(char ch, float detail) {$/;"	m	class:PFont
getShininess	core/PShape.java	/^  public float getShininess(int index) {$/;"	m	class:PShape
getShininess	opengl/PShapeOpenGL.java	/^  public float getShininess(int index) {$/;"	m	class:PShapeOpenGL
getShortArray	opengl/PGL.java	/^  protected static void getShortArray(ShortBuffer buf, short[] arr) {$/;"	m	class:PGL
getSize	core/PFont.java	/^  public int getSize() {$/;"	m	class:PFont
getSourceMethods	opengl/Texture.java	/^  protected void getSourceMethods() {$/;"	m	class:Texture
getSpecular	core/PShape.java	/^  public int getSpecular(int index) {$/;"	m	class:PShape
getSpecular	opengl/PShapeOpenGL.java	/^  public int getSpecular(int index) {$/;"	m	class:PShapeOpenGL
getStencilBits	opengl/PGL.java	/^  protected int getStencilBits()  {$/;"	m	class:PGL
getStencilBits	opengl/PJOGL.java	/^  protected int getStencilBits() {$/;"	m	class:PJOGL
getStencilValue	opengl/PGL.java	/^  protected byte getStencilValue(int scrX, int scrY) {$/;"	m	class:PGL
getString	data/JSONArray.java	/^  public String getString(int index) {$/;"	m	class:JSONArray
getString	data/JSONArray.java	/^  public String getString(int index, String defaultValue) {$/;"	m	class:JSONArray
getString	data/JSONObject.java	/^  public String getString(String key) {$/;"	m	class:JSONObject
getString	data/JSONObject.java	/^  public String getString(String key, String defaultValue) {$/;"	m	class:JSONObject
getString	data/Table.java	/^    public String getString(String columnName) {$/;"	m	class:Table.RowPointer
getString	data/Table.java	/^    public String getString(int column) {$/;"	m	class:Table.RowPointer
getString	data/Table.java	/^  public String getString(int row, String columnName) {$/;"	m	class:Table
getString	data/Table.java	/^  public String getString(int row, int column) {$/;"	m	class:Table
getString	data/TableRow.java	/^  public String getString(String columnName);$/;"	m	interface:TableRow
getString	data/TableRow.java	/^  public String getString(int column);$/;"	m	interface:TableRow
getString	data/XML.java	/^  public String getString(String name) {$/;"	m	class:XML
getString	data/XML.java	/^  public String getString(String name, String defaultValue) {$/;"	m	class:XML
getString	opengl/PGL.java	/^  public abstract String getString(int name);$/;"	m	class:PGL
getString	opengl/PJOGL.java	/^  public String getString(int name) {$/;"	m	class:PJOGL
getStringArray	data/JSONArray.java	/^  public String[] getStringArray() {$/;"	m	class:JSONArray
getStringColumn	data/Table.java	/^  public String[] getStringColumn(String columnName) {$/;"	m	class:Table
getStringColumn	data/Table.java	/^  public String[] getStringColumn(int column) {$/;"	m	class:Table
getStringDict	data/Table.java	/^  public StringDict getStringDict(String keyColumnName, String valueColumnName) {$/;"	m	class:Table
getStringDict	data/Table.java	/^  public StringDict getStringDict(int keyColumn, int valueColumn) {$/;"	m	class:Table
getStringList	data/Table.java	/^  public StringList getStringList(String columnName) {$/;"	m	class:Table
getStringList	data/Table.java	/^  public StringList getStringList(int column) {$/;"	m	class:Table
getStringRow	data/Table.java	/^  public String[] getStringRow(int row) {$/;"	m	class:Table
getStroke	core/PShape.java	/^  public int getStroke(int index) {$/;"	m	class:PShape
getStroke	opengl/PShapeOpenGL.java	/^  public int getStroke(int index) {$/;"	m	class:PShapeOpenGL
getStrokeWeight	core/PShape.java	/^  public float getStrokeWeight(int index) {$/;"	m	class:PShape
getStrokeWeight	opengl/PShapeOpenGL.java	/^  public float getStrokeWeight(int index) {$/;"	m	class:PShapeOpenGL
getStyle	core/PGraphics.java	/^  public PStyle getStyle() {  \/\/ ignore$/;"	m	class:PGraphics
getStyle	core/PGraphics.java	/^  public PStyle getStyle(PStyle s) {  \/\/ ignore$/;"	m	class:PGraphics
getSubset	data/FloatList.java	/^  public FloatList getSubset(int start) {$/;"	m	class:FloatList
getSubset	data/FloatList.java	/^  public FloatList getSubset(int start, int num) {$/;"	m	class:FloatList
getSubset	data/IntList.java	/^  public IntList getSubset(int start) {$/;"	m	class:IntList
getSubset	data/IntList.java	/^  public IntList getSubset(int start, int num) {$/;"	m	class:IntList
getSubset	data/StringList.java	/^  public StringList getSubset(int start) {$/;"	m	class:StringList
getSubset	data/StringList.java	/^  public StringList getSubset(int start, int num) {$/;"	m	class:StringList
getTally	data/StringList.java	/^  public IntDict getTally() {$/;"	m	class:StringList
getTally	data/Table.java	/^  public IntDict getTally(String columnName) {$/;"	m	class:Table
getTally	data/Table.java	/^  public IntDict getTally(int column) {$/;"	m	class:Table
getTessellation	core/PShape.java	/^  public PShape getTessellation() {$/;"	m	class:PShape
getTessellation	opengl/PShapeOpenGL.java	/^  public PShape getTessellation() {$/;"	m	class:PShapeOpenGL
getTexInfo	opengl/FontTexture.java	/^  public TextureInfo getTexInfo(PFont.Glyph glyph) {$/;"	m	class:FontTexture
getTexParameterfv	opengl/PGL.java	/^  public abstract void getTexParameterfv(int target, int pname, FloatBuffer params);$/;"	m	class:PGL
getTexParameterfv	opengl/PJOGL.java	/^  public void getTexParameterfv(int target, int pname, FloatBuffer params) {$/;"	m	class:PJOGL
getTexParameteriv	opengl/PGL.java	/^  public abstract void getTexParameteriv(int target, int pname, IntBuffer params);$/;"	m	class:PGL
getTexParameteriv	opengl/PJOGL.java	/^  public void getTexParameteriv(int target, int pname, IntBuffer params) {$/;"	m	class:PJOGL
getTextWidth	opengl/PGL.java	/^  protected int getTextWidth(Object font, char buffer[], int start, int stop) {$/;"	m	class:PGL
getTextWidth	opengl/PJOGL.java	/^  protected int getTextWidth(Object font, char buffer[], int start, int stop) {$/;"	m	class:PJOGL
getTexture	opengl/FontTexture.java	/^  public PImage getTexture(int idx) {$/;"	m	class:FontTexture
getTexture	opengl/PGraphicsOpenGL.java	/^    Texture getTexture(int i) {$/;"	m	class:PGraphicsOpenGL.TexCache
getTexture	opengl/PGraphicsOpenGL.java	/^  public Texture getTexture() {$/;"	m	class:PGraphicsOpenGL
getTexture	opengl/PGraphicsOpenGL.java	/^  public Texture getTexture(PImage img) {$/;"	m	class:PGraphicsOpenGL
getTextureImage	opengl/PGraphicsOpenGL.java	/^    PImage getTextureImage(int i) {$/;"	m	class:PGraphicsOpenGL.TexCache
getTextureU	core/PShape.java	/^  public float getTextureU(int index) {$/;"	m	class:PShape
getTextureU	opengl/PShapeOpenGL.java	/^  public float getTextureU(int index) {$/;"	m	class:PShapeOpenGL
getTextureV	core/PShape.java	/^  public float getTextureV(int index) {$/;"	m	class:PShape
getTextureV	opengl/PShapeOpenGL.java	/^  public float getTextureV(int index) {$/;"	m	class:PShapeOpenGL
getTint	core/PShape.java	/^  public int getTint(int index) {$/;"	m	class:PShape
getTint	opengl/PShapeOpenGL.java	/^  public int getTint(int index) {$/;"	m	class:PShapeOpenGL
getTransparency	core/PShapeSVG.java	/^    public int getTransparency() {$/;"	m	class:PShapeSVG.LinearGradientPaint
getTransparency	core/PShapeSVG.java	/^    public int getTransparency() {$/;"	m	class:PShapeSVG.RadialGradientPaint
getType	opengl/PShader.java	/^  protected int getType() {$/;"	m	class:PShader
getUniformLoc	opengl/PShader.java	/^  protected int getUniformLoc(String name) {$/;"	m	class:PShader
getUniformLocation	opengl/PGL.java	/^  public abstract int getUniformLocation(int program, String name);$/;"	m	class:PGL
getUniformLocation	opengl/PJOGL.java	/^  public int getUniformLocation(int program, String name) {$/;"	m	class:PJOGL
getUniformfv	opengl/PGL.java	/^  public abstract void getUniformfv(int program, int location, FloatBuffer params);$/;"	m	class:PGL
getUniformfv	opengl/PJOGL.java	/^  public void getUniformfv(int program, int location, FloatBuffer params) {$/;"	m	class:PJOGL
getUniformiv	opengl/PGL.java	/^  public abstract void getUniformiv(int program, int location, IntBuffer params);$/;"	m	class:PGL
getUniformiv	opengl/PJOGL.java	/^  public void getUniformiv(int program, int location, IntBuffer params) {$/;"	m	class:PJOGL
getUnique	data/StringList.java	/^  public String[] getUnique() {$/;"	m	class:StringList
getUnique	data/Table.java	/^  public String[] getUnique(String columnName) {$/;"	m	class:Table
getUnique	data/Table.java	/^  public String[] getUnique(int column) {$/;"	m	class:Table
getVertex	core/PShape.java	/^  public PVector getVertex(int index) {$/;"	m	class:PShape
getVertex	core/PShape.java	/^  public PVector getVertex(int index, PVector vec) {$/;"	m	class:PShape
getVertex	opengl/PShapeOpenGL.java	/^  public PVector getVertex(int index, PVector vec) {$/;"	m	class:PShapeOpenGL
getVertexAttribPointerv	opengl/PGL.java	/^  public abstract void getVertexAttribPointerv(int index, int pname, ByteBuffer data);$/;"	m	class:PGL
getVertexAttribPointerv	opengl/PJOGL.java	/^  public void getVertexAttribPointerv(int index, int pname, ByteBuffer data) {$/;"	m	class:PJOGL
getVertexAttribfv	opengl/PGL.java	/^  public abstract void getVertexAttribfv(int index, int pname, FloatBuffer params);$/;"	m	class:PGL
getVertexAttribfv	opengl/PJOGL.java	/^  public void getVertexAttribfv(int index, int pname, FloatBuffer params) {$/;"	m	class:PJOGL
getVertexAttribiv	opengl/PGL.java	/^  public abstract void getVertexAttribiv(int index, int pname, IntBuffer params);$/;"	m	class:PGL
getVertexAttribiv	opengl/PJOGL.java	/^  public void getVertexAttribiv(int index, int pname, IntBuffer params) {$/;"	m	class:PJOGL
getVertexCode	core/PShape.java	/^  public int getVertexCode(int index) {$/;"	m	class:PShape
getVertexCode	opengl/PShapeOpenGL.java	/^  public int getVertexCode(int index) {$/;"	m	class:PShapeOpenGL
getVertexCodeCount	core/PShape.java	/^  public int getVertexCodeCount() {$/;"	m	class:PShape
getVertexCodeCount	opengl/PShapeOpenGL.java	/^  public int getVertexCodeCount() {$/;"	m	class:PShapeOpenGL
getVertexCodes	core/PShape.java	/^  public int[] getVertexCodes() {$/;"	m	class:PShape
getVertexCodes	opengl/PShapeOpenGL.java	/^  public int[] getVertexCodes() {$/;"	m	class:PShapeOpenGL
getVertexCount	core/PShape.java	/^  public int getVertexCount() {$/;"	m	class:PShape
getVertexCount	opengl/PShapeOpenGL.java	/^  public int getVertexCount() {$/;"	m	class:PShapeOpenGL
getVertexData	opengl/PGraphicsOpenGL.java	/^    float[][] getVertexData() {$/;"	m	class:PGraphicsOpenGL.InGeometry
getVertexMax	opengl/PGraphicsOpenGL.java	/^    void getVertexMax(PVector v) {$/;"	m	class:PGraphicsOpenGL.InGeometry
getVertexMax	opengl/PShapeOpenGL.java	/^  protected void getVertexMax(PVector max) {$/;"	m	class:PShapeOpenGL
getVertexMin	opengl/PGraphicsOpenGL.java	/^    void getVertexMin(PVector v) {$/;"	m	class:PGraphicsOpenGL.InGeometry
getVertexMin	opengl/PShapeOpenGL.java	/^  protected void getVertexMin(PVector min) {$/;"	m	class:PShapeOpenGL
getVertexSum	opengl/PGraphicsOpenGL.java	/^    int getVertexSum(PVector v) {$/;"	m	class:PGraphicsOpenGL.InGeometry
getVertexSum	opengl/PShapeOpenGL.java	/^  protected int getVertexSum(PVector sum, int count) {$/;"	m	class:PShapeOpenGL
getVertexX	core/PShape.java	/^  public float getVertexX(int index) {$/;"	m	class:PShape
getVertexX	opengl/PGraphicsOpenGL.java	/^    float getVertexX(int idx) {$/;"	m	class:PGraphicsOpenGL.InGeometry
getVertexX	opengl/PShapeOpenGL.java	/^  public float getVertexX(int index) {$/;"	m	class:PShapeOpenGL
getVertexY	core/PShape.java	/^  public float getVertexY(int index) {$/;"	m	class:PShape
getVertexY	opengl/PGraphicsOpenGL.java	/^    float getVertexY(int idx) {$/;"	m	class:PGraphicsOpenGL.InGeometry
getVertexY	opengl/PShapeOpenGL.java	/^  public float getVertexY(int index) {$/;"	m	class:PShapeOpenGL
getVertexZ	core/PShape.java	/^  public float getVertexZ(int index) {$/;"	m	class:PShape
getVertexZ	opengl/PGraphicsOpenGL.java	/^    float getVertexZ(int idx) {$/;"	m	class:PGraphicsOpenGL.InGeometry
getVertexZ	opengl/PShapeOpenGL.java	/^  public float getVertexZ(int index) {$/;"	m	class:PShapeOpenGL
getWidth	core/PShape.java	/^  public float getWidth() {$/;"	m	class:PShape
getWidth	opengl/PShapeOpenGL.java	/^  public float getWidth() {$/;"	m	class:PShapeOpenGL
getWindingRule	opengl/LinePath.java	/^    public int getWindingRule() {$/;"	m	class:LinePath.PathIterator
getWindingRule	opengl/LinePath.java	/^  public final int getWindingRule() {$/;"	m	class:LinePath
getX	event/MouseEvent.java	/^  public int getX() {$/;"	m	class:MouseEvent
getY	event/MouseEvent.java	/^  public int getY() {$/;"	m	class:MouseEvent
getset	core/PGraphicsJava2D.java	/^  static int getset[] = new int[1];$/;"	f	class:PGraphicsJava2D
gl	opengl/PJOGL.java	/^  public static GL gl;$/;"	f	class:PJOGL
gl2	opengl/PJOGL.java	/^  protected static GL2ES2 gl2;$/;"	f	class:PJOGL
gl2x	opengl/PJOGL.java	/^  protected static GL2 gl2x;$/;"	f	class:PJOGL
gl3	opengl/PJOGL.java	/^  protected static GL2GL3 gl3;$/;"	f	class:PJOGL
glColorBuf	opengl/PGL.java	/^  protected static IntBuffer glColorBuf;$/;"	f	class:PGL
glColorFbo	opengl/PGL.java	/^  protected static IntBuffer glColorFbo;$/;"	f	class:PGL
glColorTex	opengl/PGL.java	/^  protected static IntBuffer glColorTex;$/;"	f	class:PGL
glContext	opengl/PGL.java	/^  protected static int glContext;$/;"	f	class:PGL
glDepth	opengl/FrameBuffer.java	/^  public int glDepth;$/;"	f	class:FrameBuffer
glDepth	opengl/PGL.java	/^  protected static IntBuffer glDepth;$/;"	f	class:PGL
glDepthStencil	opengl/FrameBuffer.java	/^  public int glDepthStencil;$/;"	f	class:FrameBuffer
glDepthStencil	opengl/PGL.java	/^  protected static IntBuffer glDepthStencil;$/;"	f	class:PGL
glFbo	opengl/FrameBuffer.java	/^  public int glFbo;$/;"	f	class:FrameBuffer
glFormat	opengl/Texture.java	/^  public int glFormat;$/;"	f	class:Texture
glFragment	opengl/PShader.java	/^  public int glFragment;$/;"	f	class:PShader
glFrameBuffers	opengl/PGraphicsOpenGL.java	/^  static protected HashMap<GLResource, Boolean> glFrameBuffers =$/;"	f	class:PGraphicsOpenGL
glHeight	opengl/Texture.java	/^  public int glHeight;$/;"	f	class:Texture
glLineAttrib	opengl/PGraphicsOpenGL.java	/^  public int glLineAttrib;$/;"	f	class:PGraphicsOpenGL
glLineAttrib	opengl/PShapeOpenGL.java	/^  public int glLineAttrib;$/;"	f	class:PShapeOpenGL
glLineColor	opengl/PGraphicsOpenGL.java	/^  public int glLineColor;$/;"	f	class:PGraphicsOpenGL
glLineColor	opengl/PShapeOpenGL.java	/^  public int glLineColor;$/;"	f	class:PShapeOpenGL
glLineIndex	opengl/PGraphicsOpenGL.java	/^  public int glLineIndex;$/;"	f	class:PGraphicsOpenGL
glLineIndex	opengl/PShapeOpenGL.java	/^  public int glLineIndex;$/;"	f	class:PShapeOpenGL
glLineVertex	opengl/PGraphicsOpenGL.java	/^  public int glLineVertex;$/;"	f	class:PGraphicsOpenGL
glLineVertex	opengl/PShapeOpenGL.java	/^  public int glLineVertex;$/;"	f	class:PShapeOpenGL
glMagFilter	opengl/Texture.java	/^  public int glMagFilter;$/;"	f	class:Texture
glMinFilter	opengl/Texture.java	/^  public int glMinFilter;$/;"	f	class:Texture
glModelview	opengl/PGraphicsOpenGL.java	/^  protected float[] glModelview;$/;"	f	class:PGraphicsOpenGL
glMultiFbo	opengl/PGL.java	/^  protected static IntBuffer glMultiFbo;$/;"	f	class:PGL
glMultisample	opengl/FrameBuffer.java	/^  public int glMultisample;$/;"	f	class:FrameBuffer
glName	opengl/Texture.java	/^  public int glName;$/;"	f	class:Texture
glNormal	opengl/PGraphicsOpenGL.java	/^  protected float[] glNormal;$/;"	f	class:PGraphicsOpenGL
glParamsRead	opengl/PGraphicsOpenGL.java	/^  static protected boolean glParamsRead = false;$/;"	f	class:PGraphicsOpenGL
glPointAttrib	opengl/PGraphicsOpenGL.java	/^  public int glPointAttrib;$/;"	f	class:PGraphicsOpenGL
glPointAttrib	opengl/PShapeOpenGL.java	/^  public int glPointAttrib;$/;"	f	class:PShapeOpenGL
glPointColor	opengl/PGraphicsOpenGL.java	/^  public int glPointColor;$/;"	f	class:PGraphicsOpenGL
glPointColor	opengl/PShapeOpenGL.java	/^  public int glPointColor;$/;"	f	class:PShapeOpenGL
glPointIndex	opengl/PGraphicsOpenGL.java	/^  public int glPointIndex;$/;"	f	class:PGraphicsOpenGL
glPointIndex	opengl/PShapeOpenGL.java	/^  public int glPointIndex;$/;"	f	class:PShapeOpenGL
glPointVertex	opengl/PGraphicsOpenGL.java	/^  public int glPointVertex;$/;"	f	class:PGraphicsOpenGL
glPointVertex	opengl/PShapeOpenGL.java	/^  public int glPointVertex;$/;"	f	class:PShapeOpenGL
glPolyAmbient	opengl/PGraphicsOpenGL.java	/^  public int glPolyAmbient;$/;"	f	class:PGraphicsOpenGL
glPolyAmbient	opengl/PShapeOpenGL.java	/^  public int glPolyAmbient;$/;"	f	class:PShapeOpenGL
glPolyColor	opengl/PGraphicsOpenGL.java	/^  public int glPolyColor;$/;"	f	class:PGraphicsOpenGL
glPolyColor	opengl/PShapeOpenGL.java	/^  public int glPolyColor;$/;"	f	class:PShapeOpenGL
glPolyEmissive	opengl/PGraphicsOpenGL.java	/^  public int glPolyEmissive;$/;"	f	class:PGraphicsOpenGL
glPolyEmissive	opengl/PShapeOpenGL.java	/^  public int glPolyEmissive;$/;"	f	class:PShapeOpenGL
glPolyIndex	opengl/PGraphicsOpenGL.java	/^  public int glPolyIndex;$/;"	f	class:PGraphicsOpenGL
glPolyIndex	opengl/PShapeOpenGL.java	/^  public int glPolyIndex;$/;"	f	class:PShapeOpenGL
glPolyNormal	opengl/PGraphicsOpenGL.java	/^  public int glPolyNormal;$/;"	f	class:PGraphicsOpenGL
glPolyNormal	opengl/PShapeOpenGL.java	/^  public int glPolyNormal;$/;"	f	class:PShapeOpenGL
glPolyShininess	opengl/PGraphicsOpenGL.java	/^  public int glPolyShininess;$/;"	f	class:PGraphicsOpenGL
glPolyShininess	opengl/PShapeOpenGL.java	/^  public int glPolyShininess;$/;"	f	class:PShapeOpenGL
glPolySpecular	opengl/PGraphicsOpenGL.java	/^  public int glPolySpecular;$/;"	f	class:PGraphicsOpenGL
glPolySpecular	opengl/PShapeOpenGL.java	/^  public int glPolySpecular;$/;"	f	class:PShapeOpenGL
glPolyTexcoord	opengl/PGraphicsOpenGL.java	/^  public int glPolyTexcoord;$/;"	f	class:PGraphicsOpenGL
glPolyTexcoord	opengl/PShapeOpenGL.java	/^  public int glPolyTexcoord;$/;"	f	class:PShapeOpenGL
glPolyVertex	opengl/PGraphicsOpenGL.java	/^  public int glPolyVertex;$/;"	f	class:PGraphicsOpenGL
glPolyVertex	opengl/PShapeOpenGL.java	/^  public int glPolyVertex;$/;"	f	class:PShapeOpenGL
glProgram	opengl/PShader.java	/^  public int glProgram;$/;"	f	class:PShader
glProjection	opengl/PGraphicsOpenGL.java	/^  protected float[] glProjection;$/;"	f	class:PGraphicsOpenGL
glProjmodelview	opengl/PGraphicsOpenGL.java	/^  protected float[] glProjmodelview;$/;"	f	class:PGraphicsOpenGL
glRenderBuffers	opengl/PGraphicsOpenGL.java	/^  static protected HashMap<GLResource, Boolean> glRenderBuffers =$/;"	f	class:PGraphicsOpenGL
glStencil	opengl/FrameBuffer.java	/^  public int glStencil;$/;"	f	class:FrameBuffer
glStencil	opengl/PGL.java	/^  protected static IntBuffer glStencil;$/;"	f	class:PGL
glTarget	opengl/Texture.java	/^  public int glTarget;$/;"	f	class:Texture
glTextureObjects	opengl/PGraphicsOpenGL.java	/^  static protected HashMap<GLResource, Boolean> glTextureObjects =$/;"	f	class:PGraphicsOpenGL
glThread	opengl/PGL.java	/^  protected static Thread glThread;$/;"	f	class:PGL
glVertex	opengl/PShader.java	/^  public int glVertex;$/;"	f	class:PShader
glVertexBuffers	opengl/PGraphicsOpenGL.java	/^  static protected HashMap<GLResource, Boolean> glVertexBuffers =$/;"	f	class:PGraphicsOpenGL
glWidth	opengl/Texture.java	/^  public int glWidth;$/;"	f	class:Texture
glWrapS	opengl/Texture.java	/^  public int glWrapS;$/;"	f	class:Texture
glWrapT	opengl/Texture.java	/^  public int glWrapT;$/;"	f	class:Texture
glslFragmentShaders	opengl/PGraphicsOpenGL.java	/^  static protected HashMap<GLResource, Boolean> glslFragmentShaders =$/;"	f	class:PGraphicsOpenGL
glslPrograms	opengl/PGraphicsOpenGL.java	/^  static protected HashMap<GLResource, Boolean> glslPrograms =$/;"	f	class:PGraphicsOpenGL
glslVertexShaders	opengl/PGraphicsOpenGL.java	/^  static protected HashMap<GLResource, Boolean> glslVertexShaders =$/;"	f	class:PGraphicsOpenGL
glu	opengl/PJOGL.java	/^  public static GLU glu;$/;"	f	class:PJOGL
gluCallback	opengl/PJOGL.java	/^    protected GLUCallback gluCallback;$/;"	f	class:PJOGL.Tessellator
gluTess	opengl/PGraphicsOpenGL.java	/^    PGL.Tessellator gluTess;$/;"	f	class:PGraphicsOpenGL.Tessellator
glyphCount	core/PFont.java	/^  protected int glyphCount;$/;"	f	class:PFont
glyphCount	core/PShapeSVG.java	/^    public int glyphCount;$/;"	f	class:PShapeSVG.Font
glyphTexinfos	opengl/FontTexture.java	/^  protected TextureInfo[] glyphTexinfos;$/;"	f	class:FontTexture
glyphs	core/PFont.java	/^  protected Glyph[] glyphs;$/;"	f	class:PFont
glyphs	core/PShapeSVG.java	/^    public FontGlyph[] glyphs;$/;"	f	class:PShapeSVG.Font
gpath	core/PGraphicsJava2D.java	/^  GeneralPath gpath;$/;"	f	class:PGraphicsJava2D
green	core/PApplet.java	/^  public final float green(int rgb) {$/;"	m	class:PApplet
green	core/PGraphics.java	/^  public final float green(int rgb) {$/;"	m	class:PGraphics
h	opengl/Texture.java	/^    int w, h;$/;"	f	class:Texture.BufferData
handle	core/PApplet.java	/^    void handle() {$/;"	m	class:PApplet.RegisteredMethods
handle	core/PApplet.java	/^    void handle(Object[] args) {$/;"	m	class:PApplet.RegisteredMethods
handleDraw	core/PApplet.java	/^  public void handleDraw() {$/;"	m	class:PApplet
handleKeyEvent	core/PApplet.java	/^  protected void handleKeyEvent(KeyEvent event) {$/;"	m	class:PApplet
handleMethods	core/PApplet.java	/^  protected void handleMethods(String methodName) {$/;"	m	class:PApplet
handleMethods	core/PApplet.java	/^  protected void handleMethods(String methodName, Object[] args) {$/;"	m	class:PApplet
handleMouseEvent	core/PApplet.java	/^  protected void handleMouseEvent(MouseEvent event) {$/;"	m	class:PApplet
hasAnisoSamplingSupport	opengl/PGL.java	/^  protected boolean hasAnisoSamplingSupport() {$/;"	m	class:PGL
hasAttribute	data/XML.java	/^  public boolean hasAttribute(String name) {$/;"	m	class:XML
hasAutoMipmapGenSupport	opengl/PGL.java	/^  protected boolean hasAutoMipmapGenSupport() {$/;"	m	class:PGL
hasBezierVertex	opengl/PGraphicsOpenGL.java	/^    boolean hasBezierVertex() {$/;"	m	class:PGraphicsOpenGL.InGeometry
hasBufferSource	opengl/Texture.java	/^  public boolean hasBufferSource() {$/;"	m	class:Texture
hasBuffers	opengl/Texture.java	/^  public boolean hasBuffers() {$/;"	m	class:Texture
hasChildren	data/XML.java	/^  public boolean hasChildren() {$/;"	m	class:XML
hasColumnTitles	data/Table.java	/^  public boolean hasColumnTitles() {$/;"	m	class:Table
hasCurveVertex	opengl/PGraphicsOpenGL.java	/^    boolean hasCurveVertex() {$/;"	m	class:PGraphicsOpenGL.InGeometry
hasDepthBuffer	opengl/FrameBuffer.java	/^  public boolean hasDepthBuffer() {$/;"	m	class:FrameBuffer
hasFBOs	opengl/PGL.java	/^  protected boolean hasFBOs() {$/;"	m	class:PGL
hasFBOs	opengl/PJOGL.java	/^  protected boolean hasFBOs() {$/;"	m	class:PJOGL
hasFboMultisampleSupport	opengl/PGL.java	/^  protected boolean hasFboMultisampleSupport() {$/;"	m	class:PGL
hasFragmentShader	opengl/PShader.java	/^  protected boolean hasFragmentShader() {$/;"	m	class:PShader
hasKey	data/FloatDict.java	/^  public boolean hasKey(String key) {$/;"	m	class:FloatDict
hasKey	data/IntDict.java	/^  public boolean hasKey(String key) {$/;"	m	class:IntDict
hasKey	data/JSONObject.java	/^  public boolean hasKey(String key) {$/;"	m	class:JSONObject
hasKey	data/StringDict.java	/^  public boolean hasKey(String key) {$/;"	m	class:StringDict
hasLines	opengl/PShapeOpenGL.java	/^  protected boolean hasLines;$/;"	f	class:PShapeOpenGL
hasNext	data/Table.java	/^    public boolean hasNext() {$/;"	m	class:Table.RowIndexIterator
hasNext	data/Table.java	/^    public boolean hasNext() {$/;"	m	class:Table.RowIterator
hasNpotTexSupport	opengl/PGL.java	/^  protected boolean hasNpotTexSupport() {$/;"	m	class:PGL
hasPackedDepthStencilSupport	opengl/PGL.java	/^  protected boolean hasPackedDepthStencilSupport() {$/;"	m	class:PGL
hasPoints	opengl/PShapeOpenGL.java	/^  protected boolean hasPoints;$/;"	f	class:PShapeOpenGL
hasPolys	opengl/PShapeOpenGL.java	/^  protected boolean hasPolys;$/;"	f	class:PShapeOpenGL
hasQuadraticVertex	opengl/PGraphicsOpenGL.java	/^    boolean hasQuadraticVertex() {$/;"	m	class:PGraphicsOpenGL.InGeometry
hasShaders	opengl/PGL.java	/^  protected boolean hasShaders() {$/;"	m	class:PGL
hasShaders	opengl/PJOGL.java	/^  protected boolean hasShaders() {$/;"	m	class:PJOGL
hasStencilBuffer	opengl/FrameBuffer.java	/^  public boolean hasStencilBuffer() {$/;"	m	class:FrameBuffer
hasStrokedTexture	opengl/PShapeOpenGL.java	/^  protected boolean hasStrokedTexture() {$/;"	m	class:PShapeOpenGL
hasTexture	opengl/PShapeOpenGL.java	/^  protected boolean hasTexture(PImage tex) {$/;"	m	class:PShapeOpenGL
hasTextures	opengl/PGraphicsOpenGL.java	/^    boolean hasTextures;$/;"	f	class:PGraphicsOpenGL.TexCache
hasType	opengl/PShader.java	/^  protected boolean hasType() {$/;"	m	class:PShader
hasValue	data/FloatList.java	/^  public boolean hasValue(float value) {$/;"	m	class:FloatList
hasValue	data/IntList.java	/^  public boolean hasValue(int value) {$/;"	m	class:IntList
hasValue	data/StringList.java	/^  public boolean hasValue(String value) {$/;"	m	class:StringList
hasVertexShader	opengl/PShader.java	/^  protected boolean hasVertexShader() {$/;"	m	class:PShader
hashCode	core/PVector.java	/^  public int hashCode() {$/;"	m	class:PVector
hashCode	data/JSONObject.java	/^    public int hashCode() {$/;"	m	class:JSONObject.Null
hashCode	opengl/PGraphicsOpenGL.java	/^    public int hashCode() {$/;"	m	class:PGraphicsOpenGL.GLResource
haveRaw	core/PGraphics.java	/^  public boolean haveRaw() { \/\/ ignore$/;"	m	class:PGraphics
heading	core/PVector.java	/^  public float heading() {$/;"	m	class:PVector
heading2D	core/PVector.java	/^  public float heading2D() {$/;"	m	class:PVector
height	core/PApplet.java	/^  public int height;$/;"	f	class:PApplet
height	core/PFont.java	/^    public int height;$/;"	f	class:PFont.Glyph
height	core/PImage.java	/^  public int height;$/;"	f	class:PImage
height	core/PShape.java	/^  public float height;$/;"	f	class:PShape
height	opengl/FontTexture.java	/^    int height;$/;"	f	class:FontTexture.TextureInfo
height	opengl/FrameBuffer.java	/^  public int height;$/;"	f	class:FrameBuffer
height	opengl/Texture.java	/^  public int width, height;$/;"	f	class:Texture
hex	core/PApplet.java	/^  static final public String hex(byte value) {$/;"	m	class:PApplet
hex	core/PApplet.java	/^  static final public String hex(char value) {$/;"	m	class:PApplet
hex	core/PApplet.java	/^  static final public String hex(int value) {$/;"	m	class:PApplet
hex	core/PApplet.java	/^  static final public String hex(int value, int digits) {$/;"	m	class:PApplet
high	core/PImage.java	/^  private static int high(int a, int b) {$/;"	m	class:PImage	file:
hint	core/PApplet.java	/^  public void hint(int which) {$/;"	m	class:PApplet
hint	core/PGraphics.java	/^  public void hint(int which) {$/;"	m	class:PGraphics
hint	core/PGraphicsJava2D.java	/^  public void hint(int which) {$/;"	m	class:PGraphicsJava2D
hint	opengl/PGL.java	/^  public abstract void hint(int target, int hint);$/;"	m	class:PGL
hint	opengl/PGraphics2D.java	/^  public void hint(int which) {$/;"	m	class:PGraphics2D
hint	opengl/PGraphicsOpenGL.java	/^  public void hint(int which) {$/;"	m	class:PGraphicsOpenGL
hint	opengl/PJOGL.java	/^  public void hint(int target, int hint) {$/;"	m	class:PJOGL
hints	core/PGraphics.java	/^  protected boolean[] hints = new boolean[HINT_COUNT];$/;"	f	class:PGraphics
horizAdvX	core/PShapeSVG.java	/^    int horizAdvX;$/;"	f	class:PShapeSVG.Font
horizAdvX	core/PShapeSVG.java	/^    int horizAdvX;$/;"	f	class:PShapeSVG.FontGlyph
horizOriginX	core/PShapeSVG.java	/^    int horizOriginX;  \/\/ dflt 0$/;"	f	class:PShapeSVG.FontFace
horizOriginY	core/PShapeSVG.java	/^    int horizOriginY;  \/\/ dflt 0$/;"	f	class:PShapeSVG.FontFace
hour	core/PApplet.java	/^  static public int hour() {$/;"	m	class:PApplet
hue	core/PApplet.java	/^  public final float hue(int rgb) {$/;"	m	class:PApplet
hue	core/PGraphics.java	/^  public final float hue(int rgb) {$/;"	m	class:PGraphics
hypot	opengl/LinePath.java	/^  public static double hypot(double x, double y) {$/;"	m	class:LinePath
hypot	opengl/LinePath.java	/^  public static int hypot(int x, int y) {$/;"	m	class:LinePath
hypot	opengl/LinePath.java	/^  public static long hypot(long x, long y) {$/;"	m	class:LinePath
i0	opengl/PGraphicsOpenGL.java	/^    int i0, i1, i2;$/;"	f	class:PGraphicsOpenGL.Triangle
i1	opengl/PGraphicsOpenGL.java	/^    int i0, i1, i2;$/;"	f	class:PGraphicsOpenGL.Triangle
i2	opengl/PGraphicsOpenGL.java	/^    int i0, i1, i2;$/;"	f	class:PGraphicsOpenGL.Triangle
iconImages	core/PApplet.java	/^  static ArrayList<Image> iconImages;$/;"	f	class:PApplet
id	opengl/PGraphicsOpenGL.java	/^    int id;$/;"	f	class:PGraphicsOpenGL.GLResource
identity	opengl/LinePath.java	/^  private static PMatrix2D identity = new PMatrix2D();$/;"	f	class:LinePath	file:
identity	opengl/PGraphicsOpenGL.java	/^  static protected PMatrix3D identity = new PMatrix3D();$/;"	f	class:PGraphicsOpenGL
ifU	core/PImage.java	/^  private int fracU, ifU, fracV, ifV, u1, u2, v1, v2, sX, sY, iw, iw1, ih1;$/;"	f	class:PImage	file:
ifV	core/PImage.java	/^  private int fracU, ifU, fracV, ifV, u1, u2, v1, v2, sX, sY, iw, iw1, ih1;$/;"	f	class:PImage	file:
ih1	core/PImage.java	/^  private int fracU, ifU, fracV, ifV, u1, u2, v1, v2, sX, sY, iw, iw1, ih1;$/;"	f	class:PImage	file:
image	core/PApplet.java	/^  public void image(PImage img, float a, float b) {$/;"	m	class:PApplet
image	core/PApplet.java	/^  public void image(PImage img, float a, float b, float c, float d) {$/;"	m	class:PApplet
image	core/PApplet.java	/^  public void image(PImage img,$/;"	m	class:PApplet
image	core/PFont.java	/^    public PImage image;$/;"	f	class:PFont.Glyph
image	core/PGraphics.java	/^  public Image image;$/;"	f	class:PGraphics
image	core/PGraphics.java	/^  public void image(PImage img, float a, float b) {$/;"	m	class:PGraphics
image	core/PGraphics.java	/^  public void image(PImage img, float a, float b, float c, float d) {$/;"	m	class:PGraphics
image	core/PGraphics.java	/^  public void image(PImage img,$/;"	m	class:PGraphics
image	core/PGraphicsJava2D.java	/^    BufferedImage image;$/;"	f	class:PGraphicsJava2D.ImageCache
image	core/PShape.java	/^  protected PImage image;$/;"	f	class:PShape
imageImpl	core/PGraphics.java	/^  protected void imageImpl(PImage img,$/;"	m	class:PGraphics
imageImpl	core/PGraphicsJava2D.java	/^  protected void imageImpl(PImage who,$/;"	m	class:PGraphicsJava2D
imageMode	core/PApplet.java	/^  public void imageMode(int mode) {$/;"	m	class:PApplet
imageMode	core/PGraphics.java	/^  public int imageMode = CORNER;$/;"	f	class:PGraphics
imageMode	core/PGraphics.java	/^  public void imageMode(int mode) {$/;"	m	class:PGraphics
imageMode	core/PStyle.java	/^  public int imageMode;$/;"	f	class:PStyle
imageioDPI	core/PImage.java	/^  private IIOMetadata imageioDPI(ImageWriter writer, ImageWriteParam param, double dpi) {$/;"	m	class:PImage	file:
imageioWriter	core/PImage.java	/^  private ImageWriter imageioWriter(String extension) {$/;"	m	class:PImage	file:
images	opengl/FontTexture.java	/^  protected PImage[] images = null;$/;"	f	class:FontTexture
in	opengl/PGraphicsOpenGL.java	/^    InGeometry in;$/;"	f	class:PGraphicsOpenGL.Tessellator
inGeo	opengl/PGraphicsOpenGL.java	/^  protected InGeometry inGeo;$/;"	f	class:PGraphicsOpenGL
inGeo	opengl/PShapeOpenGL.java	/^  protected InGeometry inGeo;$/;"	f	class:PShapeOpenGL
incCounts	opengl/PGraphicsOpenGL.java	/^    void incCounts(int index, int icount, int vcount) {$/;"	m	class:PGraphicsOpenGL.IndexCache
incLineIndices	opengl/PGraphicsOpenGL.java	/^    void incLineIndices(int first, int last, int inc) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
incPointIndices	opengl/PGraphicsOpenGL.java	/^    void incPointIndices(int first, int last, int inc) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
incPolyIndices	opengl/PGraphicsOpenGL.java	/^    void incPolyIndices(int first, int last, int inc) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
increment	data/IntDict.java	/^  public void increment(String key) {$/;"	m	class:IntDict
increment	data/IntList.java	/^  public void increment(int index) {$/;"	m	class:IntList
indent	data/JSONObject.java	/^  static final void indent(Writer writer, int indent) throws IOException {$/;"	m	class:JSONObject
index	core/PFont.java	/^    public int index;$/;"	f	class:PFont.Glyph
index	core/PFont.java	/^  protected int index(char c) {$/;"	m	class:PFont
index	data/FloatDict.java	/^  public int index(String what) {$/;"	m	class:FloatDict
index	data/FloatList.java	/^  public int index(float what) {$/;"	m	class:FloatList
index	data/IntDict.java	/^  public int index(String what) {$/;"	m	class:IntDict
index	data/IntList.java	/^  public int index(int what) {$/;"	m	class:IntList
index	data/JSONTokener.java	/^  private long    index;$/;"	f	class:JSONTokener	file:
index	data/StringDict.java	/^  public int index(String what) {$/;"	m	class:StringDict
index	data/StringList.java	/^  public int index(String what) {$/;"	m	class:StringList
index	data/Table.java	/^    int index(String key) {$/;"	m	class:Table.HashMapBlows
index	data/Table.java	/^    int index;$/;"	f	class:Table.RowIndexIterator
indexActual	core/PFont.java	/^  protected int indexActual(char c) {$/;"	m	class:PFont
indexCount	opengl/PGraphicsOpenGL.java	/^    int[] indexCount;$/;"	f	class:PGraphicsOpenGL.IndexCache
indexHunt	core/PFont.java	/^  protected int indexHunt(int c, int start, int stop) {$/;"	m	class:PFont
indexOffset	opengl/PGraphicsOpenGL.java	/^    int[] indexOffset;$/;"	f	class:PGraphicsOpenGL.IndexCache
indexToData	data/Table.java	/^    ArrayList<String> indexToData = new ArrayList<String>();$/;"	f	class:Table.HashMapBlows
indices	data/FloatDict.java	/^  private HashMap<String, Integer> indices = new HashMap<String, Integer>();$/;"	f	class:FloatDict	file:
indices	data/IntDict.java	/^  private HashMap<String, Integer> indices = new HashMap<String, Integer>();$/;"	f	class:IntDict	file:
indices	data/StringDict.java	/^  private HashMap<String, Integer> indices = new HashMap<String, Integer>();$/;"	f	class:StringDict	file:
indices	data/Table.java	/^    int[] indices;$/;"	f	class:Table.RowIndexIterator
init	core/PApplet.java	/^  public void init() {$/;"	m	class:PApplet
init	core/PImage.java	/^  public void init(int width, int height, int format) {  \/\/ ignore$/;"	m	class:PImage
init	data/Table.java	/^  protected void init() {$/;"	m	class:Table
init	opengl/PGraphicsOpenGL.java	/^      public void init(boolean addCache, boolean strokeTess, boolean calcNorm,$/;"	m	class:PGraphicsOpenGL.Tessellator.TessellatorCallback
init	opengl/PGraphicsOpenGL.java	/^    void init(int n) {$/;"	m	class:PGraphicsOpenGL.IndexCache
init	opengl/PJOGL.java	/^    public void init(GLAutoDrawable glDrawable) {$/;"	m	class:PJOGL.PGLListener
init	opengl/PShader.java	/^  protected void init() {$/;"	m	class:PShader
init	opengl/Texture.java	/^  public void init(int width, int height) {$/;"	m	class:Texture
init	opengl/Texture.java	/^  public void init(int width, int height, Parameters params)  {$/;"	m	class:Texture
init	opengl/Texture.java	/^  public void init(int width, int height,$/;"	m	class:Texture
initBuffers	opengl/PShapeOpenGL.java	/^  protected void initBuffers() {$/;"	m	class:PShapeOpenGL
initCache	opengl/PGraphicsOpenGL.java	/^  protected Object initCache(PImage img) {$/;"	m	class:PGraphicsOpenGL
initLineBuffers	opengl/PShapeOpenGL.java	/^  protected void initLineBuffers() {$/;"	m	class:PShapeOpenGL
initModified	opengl/PShapeOpenGL.java	/^  protected void initModified() {$/;"	m	class:PShapeOpenGL
initOffscreen	opengl/PGraphicsOpenGL.java	/^  protected void initOffscreen() {$/;"	m	class:PGraphicsOpenGL
initPointBuffers	opengl/PShapeOpenGL.java	/^  protected void initPointBuffers() {$/;"	m	class:PShapeOpenGL
initPolyBuffers	opengl/PShapeOpenGL.java	/^  protected void initPolyBuffers() {$/;"	m	class:PShapeOpenGL
initPrimary	opengl/PGraphicsOpenGL.java	/^  protected void initPrimary() {$/;"	m	class:PGraphicsOpenGL
initSurface	opengl/PGL.java	/^  protected abstract void initSurface(int antialias);$/;"	m	class:PGL
initSurface	opengl/PJOGL.java	/^  protected void initSurface(int antialias) {$/;"	m	class:PJOGL
initTex2DShader	opengl/PGL.java	/^  protected void initTex2DShader() {$/;"	m	class:PGL
initTexRectShader	opengl/PGL.java	/^  protected void initTexRectShader() {$/;"	m	class:PGL
initTexture	opengl/FontTexture.java	/^  protected void initTexture(PGraphicsOpenGL pg, PFont font) {$/;"	m	class:FontTexture
initTexture	opengl/PGL.java	/^  protected void initTexture(int target, int format, int width, int height) {$/;"	m	class:PGL
initTexture	opengl/PGL.java	/^  protected void initTexture(int target, int format, int width, int height,$/;"	m	class:PGL
initialized	opengl/PGraphicsOpenGL.java	/^  public boolean initialized;$/;"	f	class:PGraphicsOpenGL
insert	data/FloatList.java	/^  public void insert(int index, IntList list) {$/;"	m	class:FloatList
insert	data/FloatList.java	/^  public void insert(int index, int[] values) {$/;"	m	class:FloatList
insert	data/IntList.java	/^  public void insert(int index, IntList list) {$/;"	m	class:IntList
insert	data/IntList.java	/^  public void insert(int index, int[] values) {$/;"	m	class:IntList
insert	data/StringList.java	/^  public void insert(int index, StringList list) {$/;"	m	class:StringList
insert	data/StringList.java	/^  public void insert(int index, String[] values) {$/;"	m	class:StringList
insertColumn	data/Table.java	/^  public void insertColumn(int index) {$/;"	m	class:Table
insertColumn	data/Table.java	/^  public void insertColumn(int index, String title) {$/;"	m	class:Table
insertColumn	data/Table.java	/^  public void insertColumn(int index, String title, int type) {$/;"	m	class:Table
insertFrame	core/PApplet.java	/^  public String insertFrame(String what) {$/;"	m	class:PApplet
insertRow	data/Table.java	/^  public void insertRow(int insert, Object[] columnData) {$/;"	m	class:Table
insideDraw	core/PApplet.java	/^  protected boolean insideDraw;$/;"	f	class:PApplet
intBuffer	opengl/PGL.java	/^  protected IntBuffer intBuffer;$/;"	f	class:PGL
intBuffer	opengl/PGraphicsOpenGL.java	/^  static protected IntBuffer intBuffer;$/;"	f	class:PGraphicsOpenGL
intBuffer	opengl/PShader.java	/^  protected IntBuffer intBuffer;$/;"	f	class:PShader
int_nf	core/PApplet.java	/^  static private NumberFormat int_nf;$/;"	f	class:PApplet	file:
int_nf_commas	core/PApplet.java	/^  static private boolean int_nf_commas;$/;"	f	class:PApplet	file:
int_nf_digits	core/PApplet.java	/^  static private int int_nf_digits;$/;"	f	class:PApplet	file:
internalRandom	core/PApplet.java	/^  Random internalRandom;$/;"	f	class:PApplet
intersect	core/PImage.java	/^  private boolean intersect(int sx1, int sy1, int sx2, int sy2,$/;"	m	class:PImage	file:
invApply	core/PMatrix3D.java	/^  protected boolean invApply(float n00, float n01, float n02, float n03,$/;"	m	class:PMatrix3D
invRotate	core/PMatrix3D.java	/^  protected void invRotate(float angle, float v0, float v1, float v2) {$/;"	m	class:PMatrix3D
invRotate	opengl/PGraphicsOpenGL.java	/^  static private void invRotate(PMatrix3D matrix, float angle,$/;"	m	class:PGraphicsOpenGL	file:
invRotateX	core/PMatrix3D.java	/^  protected void invRotateX(float angle) {$/;"	m	class:PMatrix3D
invRotateY	core/PMatrix3D.java	/^  protected void invRotateY(float angle) {$/;"	m	class:PMatrix3D
invRotateZ	core/PMatrix3D.java	/^  protected void invRotateZ(float angle) {$/;"	m	class:PMatrix3D
invScale	core/PMatrix3D.java	/^  protected void invScale(float x, float y, float z) {$/;"	m	class:PMatrix3D
invScale	opengl/PGraphicsOpenGL.java	/^  static protected void invScale(PMatrix3D matrix, float x, float y, float z) {$/;"	m	class:PGraphicsOpenGL
invTranslate	core/PMatrix3D.java	/^  protected void invTranslate(float tx, float ty, float tz) {$/;"	m	class:PMatrix3D
invTranslate	opengl/PGraphicsOpenGL.java	/^  static protected void invTranslate(PMatrix3D matrix,$/;"	m	class:PGraphicsOpenGL
inverseCopy	core/PMatrix3D.java	/^  protected PMatrix3D inverseCopy;$/;"	f	class:PMatrix3D
invert	core/PMatrix.java	/^  public boolean invert();$/;"	m	interface:PMatrix
invert	core/PMatrix2D.java	/^  public boolean invert() {$/;"	m	class:PMatrix2D
invert	core/PMatrix3D.java	/^  public boolean invert() {$/;"	m	class:PMatrix3D
invertedX	opengl/Texture.java	/^  protected boolean invertedX;$/;"	f	class:Texture
invertedX	opengl/Texture.java	/^  public boolean invertedX() {$/;"	m	class:Texture
invertedX	opengl/Texture.java	/^  public void invertedX(boolean v) {$/;"	m	class:Texture
invertedY	opengl/Texture.java	/^  protected boolean invertedY;$/;"	f	class:Texture
invertedY	opengl/Texture.java	/^  public boolean invertedY() {$/;"	m	class:Texture
invertedY	opengl/Texture.java	/^  public void invertedY(boolean v) {$/;"	m	class:Texture
invisibleCursor	core/PApplet.java	/^  Cursor invisibleCursor;$/;"	f	class:PApplet
is2D	core/PGraphics.java	/^  public boolean is2D() {$/;"	m	class:PGraphics
is2D	core/PShape.java	/^  public boolean is2D() {$/;"	m	class:PShape
is2D	opengl/PGraphics2D.java	/^  public boolean is2D() {$/;"	m	class:PGraphics2D
is2D	opengl/PGraphics3D.java	/^  public boolean is2D() {$/;"	m	class:PGraphics3D
is2D	opengl/PGraphicsOpenGL.java	/^    boolean is2D, is3D;$/;"	f	class:PGraphicsOpenGL.Tessellator
is3D	core/PGraphics.java	/^  public boolean is3D() {$/;"	m	class:PGraphics
is3D	core/PShape.java	/^  protected boolean is3D = false;$/;"	f	class:PShape
is3D	core/PShape.java	/^  public boolean is3D() {$/;"	m	class:PShape
is3D	core/PShape.java	/^  public void is3D(boolean val) {$/;"	m	class:PShape
is3D	opengl/FontTexture.java	/^  protected boolean is3D;$/;"	f	class:FontTexture
is3D	opengl/PGraphics2D.java	/^  public boolean is3D() {$/;"	m	class:PGraphics2D
is3D	opengl/PGraphics3D.java	/^  public boolean is3D() {$/;"	m	class:PGraphics3D
is3D	opengl/PGraphicsOpenGL.java	/^    boolean is2D, is3D;$/;"	f	class:PGraphicsOpenGL.Tessellator
isAltDown	event/Event.java	/^  public boolean isAltDown() {$/;"	m	class:Event
isBuffer	opengl/PGL.java	/^  public abstract void isBuffer(int buffer);$/;"	m	class:PGL
isBuffer	opengl/PJOGL.java	/^  public void isBuffer(int buffer) {$/;"	m	class:PJOGL
isCCW	opengl/LineStroker.java	/^  private boolean isCCW(int x0, int y0, int x1, int y1, int x2, int y2) {$/;"	m	class:LineStroker	file:
isClosed	core/PShape.java	/^  public boolean isClosed() {$/;"	m	class:PShape
isControlDown	event/Event.java	/^  public boolean isControlDown() {$/;"	m	class:Event
isDone	opengl/LinePath.java	/^    public boolean isDone() {$/;"	m	class:LinePath.PathIterator
isDone	opengl/PGL.java	/^    public boolean isDone();$/;"	m	interface:PGL.FontOutline
isDone	opengl/PJOGL.java	/^    public boolean isDone() {$/;"	m	class:PJOGL.FontOutline
isEnabled	opengl/PGL.java	/^  public abstract boolean isEnabled(int value);$/;"	m	class:PGL
isEnabled	opengl/PJOGL.java	/^  public boolean isEnabled(int value) {$/;"	m	class:PJOGL
isFBOBacked	opengl/PGL.java	/^  protected boolean isFBOBacked() {$/;"	m	class:PGL
isFBOBacked	opengl/PJOGL.java	/^  protected boolean isFBOBacked() {$/;"	m	class:PJOGL
isFramebuffer	opengl/PGL.java	/^  public abstract boolean isFramebuffer(int framebuffer);$/;"	m	class:PGL
isFramebuffer	opengl/PJOGL.java	/^  public boolean isFramebuffer(int framebuffer) {$/;"	m	class:PJOGL
isFull	opengl/PGraphicsOpenGL.java	/^    boolean isFull() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
isGL	core/PApplet.java	/^  public boolean isGL() {$/;"	m	class:PApplet
isGL	core/PGraphics.java	/^  public boolean isGL() {$/;"	m	class:PGraphics
isGL	opengl/PGraphicsOpenGL.java	/^  public boolean isGL() {$/;"	m	class:PGraphicsOpenGL
isIdentity	core/PMatrix2D.java	/^  protected boolean isIdentity() {$/;"	m	class:PMatrix2D
isLegit	core/PShapeSVG.java	/^    protected boolean isLegit() {  \/\/ TODO need a better way to handle this...$/;"	m	class:PShapeSVG.FontGlyph
isLineShader	opengl/PShader.java	/^  protected boolean isLineShader() {$/;"	m	class:PShader
isLoaded	core/PImage.java	/^  public boolean isLoaded() { \/\/ ignore$/;"	m	class:PImage
isMetaDown	event/Event.java	/^  public boolean isMetaDown() {$/;"	m	class:Event
isModified	core/PImage.java	/^  public boolean isModified() {  \/\/ ignore$/;"	m	class:PImage
isModified	opengl/Texture.java	/^  public boolean isModified() {$/;"	m	class:Texture
isMultisampled	opengl/PGL.java	/^  protected boolean isMultisampled() {$/;"	m	class:PGL
isNull	data/JSONArray.java	/^  public boolean isNull(int index) {$/;"	m	class:JSONArray
isNull	data/JSONObject.java	/^  public boolean isNull(String key) {$/;"	m	class:JSONObject
isPointShader	opengl/PShader.java	/^  protected boolean isPointShader() {$/;"	m	class:PShader
isPolyShader	opengl/PShader.java	/^  protected boolean isPolyShader() {$/;"	m	class:PShader
isProgram	opengl/PGL.java	/^  public abstract boolean isProgram(int program);$/;"	m	class:PGL
isProgram	opengl/PJOGL.java	/^  public boolean isProgram(int program) {$/;"	m	class:PJOGL
isRenderbuffer	opengl/PGL.java	/^  public abstract boolean isRenderbuffer(int renderbuffer);$/;"	m	class:PGL
isRenderbuffer	opengl/PJOGL.java	/^  public boolean isRenderbuffer(int renderbuffer) {$/;"	m	class:PJOGL
isShader	opengl/PGL.java	/^  public abstract boolean isShader(int shader);$/;"	m	class:PGL
isShader	opengl/PJOGL.java	/^  public boolean isShader(int shader) {$/;"	m	class:PJOGL
isShiftDown	event/Event.java	/^  public boolean isShiftDown() {$/;"	m	class:Event
isStream	core/PFont.java	/^  public boolean isStream() {$/;"	m	class:PFont
isSupportedExtension	opengl/PGraphics2D.java	/^  static protected boolean isSupportedExtension(String extension) {$/;"	m	class:PGraphics2D
isSupportedExtension	opengl/PGraphics3D.java	/^  static protected boolean isSupportedExtension(String extension) {$/;"	m	class:PGraphics3D
isTexture	opengl/PGL.java	/^  public abstract boolean isTexture(int texture);$/;"	m	class:PGL
isTexture	opengl/PJOGL.java	/^  public boolean isTexture(int texture) {$/;"	m	class:PJOGL
isVisible	core/PShape.java	/^  public boolean isVisible() {$/;"	m	class:PShape
isWarped	core/PMatrix2D.java	/^  protected boolean isWarped() {$/;"	m	class:PMatrix2D
isqrt	opengl/LinePath.java	/^  public static int isqrt(int x) {$/;"	m	class:LinePath
iter	opengl/PJOGL.java	/^    PathIterator iter;$/;"	f	class:PJOGL.FontOutline
iterator	data/FloatList.java	/^  public Iterator<Float> iterator() {$/;"	m	class:FloatList
iterator	data/IntList.java	/^  public Iterator<Integer> iterator() {$/;"	m	class:IntList
iterator	data/StringList.java	/^  public Iterator<String> iterator() {$/;"	m	class:StringList
iw	core/PImage.java	/^  private int fracU, ifU, fracV, ifV, u1, u2, v1, v2, sX, sY, iw, iw1, ih1;$/;"	f	class:PImage	file:
iw1	core/PImage.java	/^  private int fracU, ifU, fracV, ifV, u1, u2, v1, v2, sX, sY, iw, iw1, ih1;$/;"	f	class:PImage	file:
javaToNativeARGB	opengl/PGL.java	/^  protected static int javaToNativeARGB(int color) {$/;"	m	class:PGL
javaToNativeARGB	opengl/PGL.java	/^  protected static void javaToNativeARGB(int[] pixels, int width, int height) {$/;"	m	class:PGL
javaToNativeRGB	opengl/PGL.java	/^  protected static int javaToNativeRGB(int color) {$/;"	m	class:PGL
javaToNativeRGB	opengl/PGL.java	/^  protected static void javaToNativeRGB(int[] pixels, int width, int height) {$/;"	m	class:PGL
javaVersion	core/PApplet.java	/^  public static final float javaVersion =$/;"	f	class:PApplet
javaVersionName	core/PApplet.java	/^  public static final String javaVersionName =$/;"	f	class:PApplet
join	core/PApplet.java	/^  static public String join(String[] list, String separator) {$/;"	m	class:PApplet
join	core/PApplet.java	/^  static public String join(String[] list, char separator) {$/;"	m	class:PApplet
join	data/FloatList.java	/^  public String join(String separator) {$/;"	m	class:FloatList
join	data/IntList.java	/^  public String join(String separator) {$/;"	m	class:IntList
join	data/JSONArray.java	/^  public String join(String separator) {$/;"	m	class:JSONArray
join	data/StringList.java	/^  public String join(String separator) {$/;"	m	class:StringList
join	opengl/LineStroker.java	/^  private int[] join;$/;"	f	class:LineStroker	file:
joinSegment	opengl/LineStroker.java	/^  boolean joinSegment = false;$/;"	f	class:LineStroker
joinStyle	opengl/LineStroker.java	/^  private int joinStyle;$/;"	f	class:LineStroker	file:
joinToOrigin	opengl/LineStroker.java	/^  private boolean joinToOrigin;$/;"	f	class:LineStroker	file:
ka	core/PShapeOBJ.java	/^    PVector ka;$/;"	f	class:PShapeOBJ.OBJMaterial
kd	core/PShapeOBJ.java	/^    PVector kd;$/;"	f	class:PShapeOBJ.OBJMaterial
kdMap	core/PShapeOBJ.java	/^    PImage kdMap;$/;"	f	class:PShapeOBJ.OBJMaterial
kern	core/PFont.java	/^  public float kern(char a, char b) {$/;"	m	class:PFont
key	core/PApplet.java	/^  public char key;$/;"	f	class:PApplet
key	data/FloatDict.java	/^  public String key(int index) {$/;"	m	class:FloatDict
key	data/IntDict.java	/^  public String key(int index) {$/;"	m	class:IntDict
key	data/StringDict.java	/^  public String key(int index) {$/;"	m	class:StringDict
key	data/Table.java	/^    String key(int index) {$/;"	m	class:Table.HashMapBlows
key	event/KeyEvent.java	/^  char key;$/;"	f	class:KeyEvent
keyArray	data/FloatDict.java	/^  public String[] keyArray() {$/;"	m	class:FloatDict
keyArray	data/FloatDict.java	/^  public String[] keyArray(String[] outgoing) {$/;"	m	class:FloatDict
keyArray	data/IntDict.java	/^  public String[] keyArray() {$/;"	m	class:IntDict
keyArray	data/IntDict.java	/^  public String[] keyArray(String[] outgoing) {$/;"	m	class:IntDict
keyArray	data/StringDict.java	/^  public String[] keyArray() {$/;"	m	class:StringDict
keyArray	data/StringDict.java	/^  public String[] keyArray(String[] outgoing) {$/;"	m	class:StringDict
keyCode	core/PApplet.java	/^  public int keyCode;$/;"	f	class:PApplet
keyCode	event/KeyEvent.java	/^  int keyCode;$/;"	f	class:KeyEvent
keyEvent	core/PApplet.java	/^  public KeyEvent keyEvent;$/;"	f	class:PApplet
keyEventMethods	core/PApplet.java	/^  RegisteredMethods mouseEventMethods, keyEventMethods;$/;"	f	class:PApplet
keyIterator	data/IntDict.java	/^  public Iterator<String> keyIterator() {$/;"	m	class:IntDict
keyIterator	data/JSONObject.java	/^  public Iterator keyIterator() {$/;"	m	class:JSONObject
keyPool	data/JSONObject.java	/^  private static HashMap<String, Object> keyPool =$/;"	f	class:JSONObject	file:
keyPoolSize	data/JSONObject.java	/^  private static final int keyPoolSize = 100;$/;"	f	class:JSONObject	file:
keyPressed	core/PApplet.java	/^  public boolean keyPressed;$/;"	f	class:PApplet
keyPressed	core/PApplet.java	/^  public void keyPressed() { }$/;"	m	class:PApplet
keyPressed	core/PApplet.java	/^  public void keyPressed(KeyEvent event) {$/;"	m	class:PApplet
keyPressed	core/PApplet.java	/^  public void keyPressed(java.awt.event.KeyEvent e) {$/;"	m	class:PApplet
keyPressed	opengl/PJOGL.java	/^    public void keyPressed(com.jogamp.newt.event.KeyEvent e) {$/;"	m	class:PJOGL.NEWTKeyListener
keyReleased	core/PApplet.java	/^  public void keyReleased() { }$/;"	m	class:PApplet
keyReleased	core/PApplet.java	/^  public void keyReleased(KeyEvent event) {$/;"	m	class:PApplet
keyReleased	core/PApplet.java	/^  public void keyReleased(java.awt.event.KeyEvent e) {$/;"	m	class:PApplet
keyReleased	opengl/PJOGL.java	/^    public void keyReleased(com.jogamp.newt.event.KeyEvent e) {$/;"	m	class:PJOGL.NEWTKeyListener
keyTyped	core/PApplet.java	/^  public void keyTyped() { }$/;"	m	class:PApplet
keyTyped	core/PApplet.java	/^  public void keyTyped(KeyEvent event) {$/;"	m	class:PApplet
keyTyped	core/PApplet.java	/^  public void keyTyped(java.awt.event.KeyEvent e) {$/;"	m	class:PApplet
keyTyped	opengl/PJOGL.java	/^    public void keyTyped(com.jogamp.newt.event.KeyEvent e)  {$/;"	m	class:PJOGL.NEWTKeyListener
keys	data/FloatDict.java	/^  protected String[] keys;$/;"	f	class:FloatDict
keys	data/FloatDict.java	/^  public Iterable<String> keys() {$/;"	m	class:FloatDict
keys	data/IntDict.java	/^  protected String[] keys;$/;"	f	class:IntDict
keys	data/IntDict.java	/^  public Iterable<String> keys() {$/;"	m	class:IntDict
keys	data/JSONObject.java	/^  public Set keys() {$/;"	m	class:JSONObject
keys	data/StringDict.java	/^  protected String[] keys;$/;"	f	class:StringDict
keys	data/StringDict.java	/^  public Iterable<String> keys() {$/;"	m	class:StringDict
kind	core/PShape.java	/^  protected int kind;$/;"	f	class:PShape
ks	core/PShapeOBJ.java	/^    PVector ks;$/;"	f	class:PShapeOBJ.OBJMaterial
lastBlendMode	opengl/PGraphicsOpenGL.java	/^  protected int lastBlendMode = -1;$/;"	f	class:PGraphicsOpenGL
lastCache	opengl/PGraphicsOpenGL.java	/^    int[] lastCache;$/;"	f	class:PGraphicsOpenGL.TexCache
lastIndex	opengl/PGraphicsOpenGL.java	/^    int[] lastIndex;$/;"	f	class:PGraphicsOpenGL.TexCache
lastLineIndex	opengl/PGraphicsOpenGL.java	/^    int lastLineIndex;$/;"	f	class:PGraphicsOpenGL.TessGeometry
lastLineIndexCache	opengl/PGraphicsOpenGL.java	/^    int lastLineIndexCache;$/;"	f	class:PGraphicsOpenGL.Tessellator
lastLineIndexCache	opengl/PShapeOpenGL.java	/^  protected int lastLineIndexCache;$/;"	f	class:PShapeOpenGL
lastLineVertex	opengl/PGraphicsOpenGL.java	/^    int lastLineVertex;$/;"	f	class:PGraphicsOpenGL.TessGeometry
lastLineVertex	opengl/PShapeOpenGL.java	/^  protected int lastLineVertex;$/;"	f	class:PShapeOpenGL
lastModifiedLineAttribute	opengl/PShapeOpenGL.java	/^  protected int lastModifiedLineAttribute;$/;"	f	class:PShapeOpenGL
lastModifiedLineColor	opengl/PShapeOpenGL.java	/^  protected int lastModifiedLineColor;$/;"	f	class:PShapeOpenGL
lastModifiedLineVertex	opengl/PShapeOpenGL.java	/^  protected int lastModifiedLineVertex;$/;"	f	class:PShapeOpenGL
lastModifiedPointAttribute	opengl/PShapeOpenGL.java	/^  protected int lastModifiedPointAttribute;$/;"	f	class:PShapeOpenGL
lastModifiedPointColor	opengl/PShapeOpenGL.java	/^  protected int lastModifiedPointColor;$/;"	f	class:PShapeOpenGL
lastModifiedPointVertex	opengl/PShapeOpenGL.java	/^  protected int lastModifiedPointVertex;$/;"	f	class:PShapeOpenGL
lastModifiedPolyAmbient	opengl/PShapeOpenGL.java	/^  protected int lastModifiedPolyAmbient;$/;"	f	class:PShapeOpenGL
lastModifiedPolyColor	opengl/PShapeOpenGL.java	/^  protected int lastModifiedPolyColor;$/;"	f	class:PShapeOpenGL
lastModifiedPolyEmissive	opengl/PShapeOpenGL.java	/^  protected int lastModifiedPolyEmissive;$/;"	f	class:PShapeOpenGL
lastModifiedPolyNormal	opengl/PShapeOpenGL.java	/^  protected int lastModifiedPolyNormal;$/;"	f	class:PShapeOpenGL
lastModifiedPolyShininess	opengl/PShapeOpenGL.java	/^  protected int lastModifiedPolyShininess;$/;"	f	class:PShapeOpenGL
lastModifiedPolySpecular	opengl/PShapeOpenGL.java	/^  protected int lastModifiedPolySpecular;$/;"	f	class:PShapeOpenGL
lastModifiedPolyTexcoord	opengl/PShapeOpenGL.java	/^  protected int lastModifiedPolyTexcoord;$/;"	f	class:PShapeOpenGL
lastModifiedPolyVertex	opengl/PShapeOpenGL.java	/^  protected int lastModifiedPolyVertex;$/;"	f	class:PShapeOpenGL
lastPointIndex	opengl/PGraphicsOpenGL.java	/^    int lastPointIndex;$/;"	f	class:PGraphicsOpenGL.TessGeometry
lastPointIndexCache	opengl/PGraphicsOpenGL.java	/^    int lastPointIndexCache;$/;"	f	class:PGraphicsOpenGL.Tessellator
lastPointIndexCache	opengl/PShapeOpenGL.java	/^  protected int lastPointIndexCache;$/;"	f	class:PShapeOpenGL
lastPointVertex	opengl/PGraphicsOpenGL.java	/^    int lastPointVertex;$/;"	f	class:PGraphicsOpenGL.TessGeometry
lastPointVertex	opengl/PShapeOpenGL.java	/^  protected int lastPointVertex;$/;"	f	class:PShapeOpenGL
lastPolyIndex	opengl/PGraphicsOpenGL.java	/^    int lastPolyIndex;$/;"	f	class:PGraphicsOpenGL.TessGeometry
lastPolyIndexCache	opengl/PGraphicsOpenGL.java	/^    int lastPolyIndexCache;$/;"	f	class:PGraphicsOpenGL.Tessellator
lastPolyIndexCache	opengl/PShapeOpenGL.java	/^  protected int lastPolyIndexCache;$/;"	f	class:PShapeOpenGL
lastPolyVertex	opengl/PGraphicsOpenGL.java	/^    int lastPolyVertex;$/;"	f	class:PGraphicsOpenGL.TessGeometry
lastPolyVertex	opengl/PShapeOpenGL.java	/^  protected int lastPolyVertex;$/;"	f	class:PShapeOpenGL
lastRowIndex	data/Table.java	/^  public int lastRowIndex() {$/;"	m	class:Table
lastSmoothCall	opengl/PGraphicsOpenGL.java	/^  protected int lastSmoothCall = -10;$/;"	f	class:PGraphicsOpenGL
lastTex	opengl/FontTexture.java	/^  protected int lastTex;$/;"	f	class:FontTexture
lazy	core/PFont.java	/^  protected boolean lazy;$/;"	f	class:PFont
lazyGraphics	core/PFont.java	/^  protected Graphics2D lazyGraphics;$/;"	f	class:PFont
lazyImage	core/PFont.java	/^  protected BufferedImage lazyImage;$/;"	f	class:PFont
lazyMetrics	core/PFont.java	/^  protected FontMetrics lazyMetrics;$/;"	f	class:PFont
lazySamples	core/PFont.java	/^  protected int[] lazySamples;$/;"	f	class:PFont
leftExtent	core/PFont.java	/^    public int leftExtent;$/;"	f	class:PFont.Glyph
lerp	core/PApplet.java	/^  static public final float lerp(float start, float stop, float amt) {$/;"	m	class:PApplet
lerp	core/PVector.java	/^  public static PVector lerp(PVector v1, PVector v2, float amt) {$/;"	m	class:PVector
lerp	core/PVector.java	/^  public void lerp(PVector v, float amt) {$/;"	m	class:PVector
lerp	core/PVector.java	/^  public void lerp(float x, float y, float z, float amt) {$/;"	m	class:PVector
lerpColor	core/PApplet.java	/^  public int lerpColor(int c1, int c2, float amt) {$/;"	m	class:PApplet
lerpColor	core/PApplet.java	/^  static public int lerpColor(int c1, int c2, float amt, int mode) {$/;"	m	class:PApplet
lerpColor	core/PGraphics.java	/^  public int lerpColor(int c1, int c2, float amt) {$/;"	m	class:PGraphics
lerpColor	core/PGraphics.java	/^  static public int lerpColor(int c1, int c2, float amt, int mode) {$/;"	m	class:PGraphics
lerpColorHSB1	core/PGraphics.java	/^  static float[] lerpColorHSB1;$/;"	f	class:PGraphics
lerpColorHSB2	core/PGraphics.java	/^  static float[] lerpColorHSB2;$/;"	f	class:PGraphics
lightAmbient	opengl/PGraphicsOpenGL.java	/^  protected void lightAmbient(int num, float r, float g, float b) {$/;"	m	class:PGraphicsOpenGL
lightAmbient	opengl/PGraphicsOpenGL.java	/^  public float[] lightAmbient;$/;"	f	class:PGraphicsOpenGL
lightAmbientLoc	opengl/PShader.java	/^  protected int lightAmbientLoc;$/;"	f	class:PShader
lightCount	opengl/PGraphicsOpenGL.java	/^  public int lightCount = 0;$/;"	f	class:PGraphicsOpenGL
lightCountLoc	opengl/PShader.java	/^  protected int lightCountLoc;$/;"	f	class:PShader
lightDiffuse	opengl/PGraphicsOpenGL.java	/^  protected void lightDiffuse(int num, float r, float g, float b) {$/;"	m	class:PGraphicsOpenGL
lightDiffuse	opengl/PGraphicsOpenGL.java	/^  public float[] lightDiffuse;$/;"	f	class:PGraphicsOpenGL
lightDiffuseLoc	opengl/PShader.java	/^  protected int lightDiffuseLoc;$/;"	f	class:PShader
lightFalloff	core/PApplet.java	/^  public void lightFalloff(float constant, float linear, float quadratic) {$/;"	m	class:PApplet
lightFalloff	core/PGraphics.java	/^  public void lightFalloff(float constant, float linear, float quadratic) {$/;"	m	class:PGraphics
lightFalloff	opengl/PGraphics2D.java	/^  public void lightFalloff(float constant, float linear, float quadratic) {$/;"	m	class:PGraphics2D
lightFalloff	opengl/PGraphicsOpenGL.java	/^  protected void lightFalloff(int num, float c0, float c1, float c2) {$/;"	m	class:PGraphicsOpenGL
lightFalloff	opengl/PGraphicsOpenGL.java	/^  public void lightFalloff(float constant, float linear, float quadratic) {$/;"	m	class:PGraphicsOpenGL
lightFalloffCoefficients	opengl/PGraphicsOpenGL.java	/^  public float[] lightFalloffCoefficients;$/;"	f	class:PGraphicsOpenGL
lightFalloffLoc	opengl/PShader.java	/^  protected int lightFalloffLoc;$/;"	f	class:PShader
lightNormal	opengl/PGraphicsOpenGL.java	/^  protected void lightNormal(int num, float dx, float dy, float dz) {$/;"	m	class:PGraphicsOpenGL
lightNormal	opengl/PGraphicsOpenGL.java	/^  public float[] lightNormal;$/;"	f	class:PGraphicsOpenGL
lightNormalLoc	opengl/PShader.java	/^  protected int lightNormalLoc;$/;"	f	class:PShader
lightPosition	opengl/PGraphicsOpenGL.java	/^  protected void lightPosition(int num, float x, float y, float z,$/;"	m	class:PGraphicsOpenGL
lightPosition	opengl/PGraphicsOpenGL.java	/^  public float[] lightPosition;$/;"	f	class:PGraphicsOpenGL
lightPositionLoc	opengl/PShader.java	/^  protected int lightPositionLoc;$/;"	f	class:PShader
lightShaderDefRegexp	opengl/PShader.java	/^  static protected String lightShaderDefRegexp =$/;"	f	class:PShader
lightSpecular	core/PApplet.java	/^  public void lightSpecular(float v1, float v2, float v3) {$/;"	m	class:PApplet
lightSpecular	core/PGraphics.java	/^  public void lightSpecular(float v1, float v2, float v3) {$/;"	m	class:PGraphics
lightSpecular	opengl/PGraphics2D.java	/^  public void lightSpecular(float v1, float v2, float v3) {$/;"	m	class:PGraphics2D
lightSpecular	opengl/PGraphicsOpenGL.java	/^  protected void lightSpecular(int num, float r, float g, float b) {$/;"	m	class:PGraphicsOpenGL
lightSpecular	opengl/PGraphicsOpenGL.java	/^  public float[] lightSpecular;$/;"	f	class:PGraphicsOpenGL
lightSpecular	opengl/PGraphicsOpenGL.java	/^  public void lightSpecular(float x, float y, float z) {$/;"	m	class:PGraphicsOpenGL
lightSpecularLoc	opengl/PShader.java	/^  protected int lightSpecularLoc;$/;"	f	class:PShader
lightSpot	opengl/PGraphicsOpenGL.java	/^  protected void lightSpot(int num, float angle, float exponent) {$/;"	m	class:PGraphicsOpenGL
lightSpotLoc	opengl/PShader.java	/^  protected int lightSpotLoc;$/;"	f	class:PShader
lightSpotParameters	opengl/PGraphicsOpenGL.java	/^  public float[] lightSpotParameters;$/;"	f	class:PGraphicsOpenGL
lightType	opengl/PGraphicsOpenGL.java	/^  public int[] lightType;$/;"	f	class:PGraphicsOpenGL
lights	core/PApplet.java	/^  public void lights() {$/;"	m	class:PApplet
lights	core/PGraphics.java	/^  public void lights() {$/;"	m	class:PGraphics
lights	opengl/PGraphics2D.java	/^  public void lights() {$/;"	m	class:PGraphics2D
lights	opengl/PGraphicsOpenGL.java	/^  public boolean lights;$/;"	f	class:PGraphicsOpenGL
lights	opengl/PGraphicsOpenGL.java	/^  public void lights() {$/;"	m	class:PGraphicsOpenGL
lightsAllocated	opengl/PGraphicsOpenGL.java	/^  protected boolean lightsAllocated = false;$/;"	f	class:PGraphicsOpenGL
limit	core/PVector.java	/^  public void limit(float max) {$/;"	m	class:PVector
line	core/PApplet.java	/^  public void line(float x1, float y1, float x2, float y2) {$/;"	m	class:PApplet
line	core/PApplet.java	/^  public void line(float x1, float y1, float z1,$/;"	m	class:PApplet
line	core/PGraphics.java	/^  public void line(float x1, float y1, float x2, float y2) {$/;"	m	class:PGraphics
line	core/PGraphics.java	/^  public void line(float x1, float y1, float z1,$/;"	m	class:PGraphics
line	core/PGraphicsJava2D.java	/^  Line2D.Float line = new Line2D.Float();$/;"	f	class:PGraphicsJava2D
line	core/PGraphicsJava2D.java	/^  public void line(float x1, float y1, float x2, float y2) {$/;"	m	class:PGraphicsJava2D
line	data/JSONTokener.java	/^  private long    line;$/;"	f	class:JSONTokener	file:
line	opengl/PGraphicsOpenGL.java	/^  public void line(float x1, float y1, float x2, float y2) {$/;"	m	class:PGraphicsOpenGL
line	opengl/PGraphicsOpenGL.java	/^  public void line(float x1, float y1, float z1,$/;"	m	class:PGraphicsOpenGL
lineBufferContextIsOutdated	opengl/PGraphicsOpenGL.java	/^  protected boolean lineBufferContextIsOutdated() {$/;"	m	class:PGraphicsOpenGL
lineBuffersContext	opengl/PGraphicsOpenGL.java	/^  protected int lineBuffersContext;$/;"	f	class:PGraphicsOpenGL
lineBuffersCreated	opengl/PGraphicsOpenGL.java	/^  protected boolean lineBuffersCreated = false;$/;"	f	class:PGraphicsOpenGL
lineColors	opengl/PGraphicsOpenGL.java	/^    int[] lineColors;$/;"	f	class:PGraphicsOpenGL.TessGeometry
lineColorsBuffer	opengl/PGraphicsOpenGL.java	/^    IntBuffer lineColorsBuffer;$/;"	f	class:PGraphicsOpenGL.TessGeometry
lineDirections	opengl/PGraphicsOpenGL.java	/^    float[] lineDirections;$/;"	f	class:PGraphicsOpenGL.TessGeometry
lineDirectionsBuffer	opengl/PGraphicsOpenGL.java	/^    FloatBuffer lineDirectionsBuffer;$/;"	f	class:PGraphicsOpenGL.TessGeometry
lineHeight	opengl/FontTexture.java	/^  protected int lineHeight;$/;"	f	class:FontTexture
lineImpl	opengl/PGraphicsOpenGL.java	/^  protected void lineImpl(float x1, float y1, float z1,$/;"	m	class:PGraphicsOpenGL
lineIndCopyOffset	opengl/PShapeOpenGL.java	/^  protected int lineIndCopyOffset;$/;"	f	class:PShapeOpenGL
lineIndexCache	opengl/PGraphicsOpenGL.java	/^    IndexCache lineIndexCache = new IndexCache();$/;"	f	class:PGraphicsOpenGL.TessGeometry
lineIndexCheck	opengl/PGraphicsOpenGL.java	/^    void lineIndexCheck(int count) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
lineIndexCount	opengl/PGraphicsOpenGL.java	/^    int lineIndexCount;$/;"	f	class:PGraphicsOpenGL.TessGeometry
lineIndexOffset	opengl/PShapeOpenGL.java	/^  protected int lineIndexOffset;$/;"	f	class:PShapeOpenGL
lineIndices	opengl/PGraphicsOpenGL.java	/^    short[] lineIndices;$/;"	f	class:PGraphicsOpenGL.TessGeometry
lineIndicesBuffer	opengl/PGraphicsOpenGL.java	/^    ShortBuffer lineIndicesBuffer;$/;"	f	class:PGraphicsOpenGL.TessGeometry
lineJoin	opengl/LineStroker.java	/^  public void lineJoin() {$/;"	m	class:LineStroker
lineLength	opengl/LineStroker.java	/^  long lineLength(long ldx, long ldy) {$/;"	m	class:LineStroker
lineShader	opengl/PGraphicsOpenGL.java	/^  protected PShader lineShader;$/;"	f	class:PGraphicsOpenGL
lineShaderAttrRegexp	opengl/PShader.java	/^  static protected String lineShaderAttrRegexp =$/;"	f	class:PShader
lineShaderDefRegexp	opengl/PShader.java	/^  static protected String lineShaderDefRegexp =$/;"	f	class:PShader
lineTo	opengl/LinePath.java	/^  public final void lineTo(float x, float y, int c) {$/;"	m	class:LinePath
lineTo	opengl/LineStroker.java	/^  public void lineTo(int x1, int y1, int c1) {$/;"	m	class:LineStroker
lineToImpl	opengl/LineStroker.java	/^  private void lineToImpl(int x1, int y1, int c1, boolean joinSegment) {$/;"	m	class:LineStroker	file:
lineToOrigin	opengl/LineStroker.java	/^  private boolean lineToOrigin;$/;"	f	class:LineStroker	file:
lineVertCopyOffset	opengl/PShapeOpenGL.java	/^  protected int lineVertCopyOffset;$/;"	f	class:PShapeOpenGL
lineVertexAbs	opengl/PShapeOpenGL.java	/^  protected int lineVertexAbs;$/;"	f	class:PShapeOpenGL
lineVertexCheck	opengl/PGraphicsOpenGL.java	/^    void lineVertexCheck(int count) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
lineVertexCount	opengl/PGraphicsOpenGL.java	/^    int lineVertexCount;$/;"	f	class:PGraphicsOpenGL.TessGeometry
lineVertexOffset	opengl/PShapeOpenGL.java	/^  protected int lineVertexOffset;$/;"	f	class:PShapeOpenGL
lineVertexRel	opengl/PShapeOpenGL.java	/^  protected int lineVertexRel;$/;"	f	class:PShapeOpenGL
lineVertices	opengl/PGraphicsOpenGL.java	/^    float[] lineVertices;$/;"	f	class:PGraphicsOpenGL.TessGeometry
lineVerticesBuffer	opengl/PGraphicsOpenGL.java	/^    FloatBuffer lineVerticesBuffer;$/;"	f	class:PGraphicsOpenGL.TessGeometry
lineWidth	opengl/PGL.java	/^  public abstract void lineWidth(float width);$/;"	m	class:PGL
lineWidth	opengl/PJOGL.java	/^  public void lineWidth(float width) {$/;"	m	class:PJOGL
lineWidth2	opengl/LineStroker.java	/^  private int lineWidth2;$/;"	f	class:LineStroker	file:
link	core/PApplet.java	/^  public void link(String url) {$/;"	m	class:PApplet
link	core/PApplet.java	/^  public void link(String url, String target) {$/;"	m	class:PApplet
linkProgram	opengl/PGL.java	/^  public abstract void linkProgram(int program);$/;"	m	class:PGL
linkProgram	opengl/PJOGL.java	/^  public void linkProgram(int program) {$/;"	m	class:PJOGL
linked	opengl/PGL.java	/^  protected boolean linked(int program) {$/;"	m	class:PGL
list	core/PFont.java	/^  static public String[] list() {$/;"	m	class:PFont
listAttributes	data/XML.java	/^  public String[] listAttributes() {$/;"	m	class:XML
listChildren	data/XML.java	/^  public String[] listChildren() {$/;"	m	class:XML
listener	opengl/PJOGL.java	/^  protected static PGLListener listener;$/;"	f	class:PJOGL
ll	core/PImage.java	/^  private int ul, ll, ur, lr, cUL, cLL, cUR, cLR;$/;"	f	class:PImage	file:
loadAttributes	opengl/PShader.java	/^  protected void loadAttributes() {$/;"	m	class:PShader
loadBinary	data/Table.java	/^  protected void loadBinary(InputStream is) throws IOException {$/;"	m	class:Table
loadBytes	core/PApplet.java	/^  public byte[] loadBytes(String filename) {$/;"	m	class:PApplet
loadBytes	core/PApplet.java	/^  static public byte[] loadBytes(File file) {$/;"	m	class:PApplet
loadBytes	core/PApplet.java	/^  static public byte[] loadBytes(InputStream input) {$/;"	m	class:PApplet
loadExtensions	data/Table.java	/^  static final String[] loadExtensions = { "csv", "tsv", "ods", "bin" };$/;"	f	class:Table
loadFont	core/PApplet.java	/^  public PFont loadFont(String filename) {$/;"	m	class:PApplet
loadFonts	core/PFont.java	/^  static public void loadFonts() {$/;"	m	class:PFont
loadFragmentShader	opengl/PGL.java	/^  protected String[] loadFragmentShader(String filename) {$/;"	m	class:PGL
loadFragmentShader	opengl/PGL.java	/^  protected String[] loadFragmentShader(String filename, int version) {$/;"	m	class:PGL
loadFragmentShader	opengl/PGL.java	/^  protected String[] loadFragmentShader(URL url) {$/;"	m	class:PGL
loadFragmentShader	opengl/PGL.java	/^  protected String[] loadFragmentShader(URL url, int version) {$/;"	m	class:PGL
loadFragmentShader	opengl/PJOGL.java	/^  protected String[] loadFragmentShader(String filename, int version) {$/;"	m	class:PJOGL
loadFragmentShader	opengl/PJOGL.java	/^  protected String[] loadFragmentShader(URL url, int version) {$/;"	m	class:PJOGL
loadImage	core/PApplet.java	/^  public PImage loadImage(String filename) {$/;"	m	class:PApplet
loadImage	core/PApplet.java	/^  public PImage loadImage(String filename, String extension) { \/\/, Object params) {$/;"	m	class:PApplet
loadImageFormats	core/PApplet.java	/^  protected String[] loadImageFormats;$/;"	f	class:PApplet
loadImageIO	core/PApplet.java	/^  protected PImage loadImageIO(String filename) {$/;"	m	class:PApplet
loadImageMT	core/PApplet.java	/^  protected PImage loadImageMT(Image awtImage) {$/;"	m	class:PApplet
loadImageTGA	core/PApplet.java	/^  protected PImage loadImageTGA(String filename) throws IOException {$/;"	m	class:PApplet
loadJSONArray	core/PApplet.java	/^  public JSONArray loadJSONArray(String filename) {$/;"	m	class:PApplet
loadJSONArray	core/PApplet.java	/^  static public JSONArray loadJSONArray(File file) {$/;"	m	class:PApplet
loadJSONObject	core/PApplet.java	/^  public JSONObject loadJSONObject(String filename) {$/;"	m	class:PApplet
loadJSONObject	core/PApplet.java	/^  static public JSONObject loadJSONObject(File file) {$/;"	m	class:PApplet
loadPixels	core/PApplet.java	/^  public void loadPixels() {$/;"	m	class:PApplet
loadPixels	core/PGraphicsJava2D.java	/^  public void loadPixels() {$/;"	m	class:PGraphicsJava2D
loadPixels	core/PGraphicsRetina2D.java	/^  public void loadPixels() {$/;"	m	class:PGraphicsRetina2D
loadPixels	core/PImage.java	/^  public void loadPixels() {  \/\/ ignore$/;"	m	class:PImage
loadPixels	opengl/PGraphicsOpenGL.java	/^  public void loadPixels() {$/;"	m	class:PGraphicsOpenGL
loadPixels	opengl/Texture.java	/^  protected void loadPixels(int len) {$/;"	m	class:Texture
loadShader	core/PApplet.java	/^  public PShader loadShader(String fragFilename) {$/;"	m	class:PApplet
loadShader	core/PApplet.java	/^  public PShader loadShader(String fragFilename, String vertFilename) {$/;"	m	class:PApplet
loadShader	core/PGraphics.java	/^  public PShader loadShader(String fragFilename) {$/;"	m	class:PGraphics
loadShader	core/PGraphics.java	/^  public PShader loadShader(String fragFilename, String vertFilename) {$/;"	m	class:PGraphics
loadShader	opengl/PGraphicsOpenGL.java	/^  public PShader loadShader(String fragFilename) {$/;"	m	class:PGraphicsOpenGL
loadShader	opengl/PGraphicsOpenGL.java	/^  public PShader loadShader(String fragFilename, String vertFilename) {$/;"	m	class:PGraphicsOpenGL
loadShape	core/PApplet.java	/^  public PShape loadShape(String filename) {$/;"	m	class:PApplet
loadShape	core/PApplet.java	/^  public PShape loadShape(String filename, String options) {$/;"	m	class:PApplet
loadShape	core/PGraphics.java	/^  public PShape loadShape(String filename) {$/;"	m	class:PGraphics
loadShape	core/PGraphics.java	/^  public PShape loadShape(String filename, String options) {$/;"	m	class:PGraphics
loadShape	core/PGraphicsJava2D.java	/^  public PShape loadShape(String filename) {$/;"	m	class:PGraphicsJava2D
loadShape	core/PGraphicsJava2D.java	/^  public PShape loadShape(String filename, String options) {$/;"	m	class:PGraphicsJava2D
loadShape	opengl/PGraphicsOpenGL.java	/^  public PShape loadShape(String filename) {$/;"	m	class:PGraphicsOpenGL
loadShapeImpl	opengl/PGraphics2D.java	/^  static protected PShape loadShapeImpl(PGraphics pg, String filename,$/;"	m	class:PGraphics2D
loadShapeImpl	opengl/PGraphics3D.java	/^  static protected PShape loadShapeImpl(PGraphics pg, String filename,$/;"	m	class:PGraphics3D
loadStrings	core/PApplet.java	/^  public String[] loadStrings(String filename) {$/;"	m	class:PApplet
loadStrings	core/PApplet.java	/^  static public String[] loadStrings(BufferedReader reader) {$/;"	m	class:PApplet
loadStrings	core/PApplet.java	/^  static public String[] loadStrings(File file) {$/;"	m	class:PApplet
loadStrings	core/PApplet.java	/^  static public String[] loadStrings(InputStream input) {$/;"	m	class:PApplet
loadTIFF	core/PImage.java	/^  static protected PImage loadTIFF(byte tiff[]) {$/;"	m	class:PImage
loadTable	core/PApplet.java	/^  public Table loadTable(String filename) {$/;"	m	class:PApplet
loadTable	core/PApplet.java	/^  public Table loadTable(String filename, String options) {$/;"	m	class:PApplet
loadTexture	opengl/PGraphicsOpenGL.java	/^  public void loadTexture() {$/;"	m	class:PGraphicsOpenGL
loadTextureImpl	opengl/PGraphicsOpenGL.java	/^  protected void loadTextureImpl(int sampling, boolean mipmap) {$/;"	m	class:PGraphicsOpenGL
loadUniforms	opengl/PShader.java	/^  protected void loadUniforms() {$/;"	m	class:PShader
loadVertexShader	opengl/PGL.java	/^  protected String[] loadVertexShader(String filename) {$/;"	m	class:PGL
loadVertexShader	opengl/PGL.java	/^  protected String[] loadVertexShader(String filename, int version) {$/;"	m	class:PGL
loadVertexShader	opengl/PGL.java	/^  protected String[] loadVertexShader(URL url) {$/;"	m	class:PGL
loadVertexShader	opengl/PGL.java	/^  protected String[] loadVertexShader(URL url, int version) {$/;"	m	class:PGL
loadVertexShader	opengl/PJOGL.java	/^  protected String[] loadVertexShader(String filename, int version) {$/;"	m	class:PJOGL
loadVertexShader	opengl/PJOGL.java	/^  protected String[] loadVertexShader(URL url, int version) {$/;"	m	class:PJOGL
loadXML	core/PApplet.java	/^  public XML loadXML(String filename) {$/;"	m	class:PApplet
loadXML	core/PApplet.java	/^  public XML loadXML(String filename, String options) {$/;"	m	class:PApplet
loaded	core/PImage.java	/^  public boolean loaded = false;$/;"	f	class:PImage
loadedAttributes	opengl/PShader.java	/^  protected boolean loadedAttributes = false;$/;"	f	class:PShader
loadedTex2DShader	opengl/PGL.java	/^  protected static boolean loadedTex2DShader = false;$/;"	f	class:PGL
loadedTexRectShader	opengl/PGL.java	/^  protected static boolean loadedTexRectShader = false;$/;"	f	class:PGL
loadedUniforms	opengl/PShader.java	/^  protected boolean loadedUniforms = false;$/;"	f	class:PShader
log	core/PApplet.java	/^  static public final float log(float n) {$/;"	m	class:PApplet
loop	core/PApplet.java	/^  synchronized public void loop() {$/;"	m	class:PApplet
looping	core/PApplet.java	/^  protected boolean looping;$/;"	f	class:PApplet
low	core/PImage.java	/^  private static int low(int a, int b) {$/;"	m	class:PImage	file:
lower	data/StringList.java	/^  public void lower() {$/;"	m	class:StringList
lr	core/PImage.java	/^  private int ul, ll, ur, lr, cUL, cLL, cUR, cLR;$/;"	f	class:PImage	file:
lsqrt	opengl/LinePath.java	/^  public static long lsqrt(long x) {$/;"	m	class:LinePath
m00	core/PMatrix2D.java	/^  public float m00, m01, m02;$/;"	f	class:PMatrix2D
m00	core/PMatrix3D.java	/^  public float m00, m01, m02, m03;$/;"	f	class:PMatrix3D
m00	opengl/LineStroker.java	/^  private int m00, m01;$/;"	f	class:LineStroker	file:
m00_2_m01_2	opengl/LineStroker.java	/^  private double m00_2_m01_2;$/;"	f	class:LineStroker	file:
m00_m10_m01_m11	opengl/LineStroker.java	/^  private double m00_m10_m01_m11;$/;"	f	class:LineStroker	file:
m01	core/PMatrix2D.java	/^  public float m00, m01, m02;$/;"	f	class:PMatrix2D
m01	core/PMatrix3D.java	/^  public float m00, m01, m02, m03;$/;"	f	class:PMatrix3D
m01	opengl/LineStroker.java	/^  private int m00, m01;$/;"	f	class:LineStroker	file:
m02	core/PMatrix2D.java	/^  public float m00, m01, m02;$/;"	f	class:PMatrix2D
m02	core/PMatrix3D.java	/^  public float m00, m01, m02, m03;$/;"	f	class:PMatrix3D
m03	core/PMatrix3D.java	/^  public float m00, m01, m02, m03;$/;"	f	class:PMatrix3D
m10	core/PMatrix2D.java	/^  public float m10, m11, m12;$/;"	f	class:PMatrix2D
m10	core/PMatrix3D.java	/^  public float m10, m11, m12, m13;$/;"	f	class:PMatrix3D
m10	opengl/LineStroker.java	/^  private int m10, m11;$/;"	f	class:LineStroker	file:
m10_2_m11_2	opengl/LineStroker.java	/^  private double m10_2_m11_2;$/;"	f	class:LineStroker	file:
m11	core/PMatrix2D.java	/^  public float m10, m11, m12;$/;"	f	class:PMatrix2D
m11	core/PMatrix3D.java	/^  public float m10, m11, m12, m13;$/;"	f	class:PMatrix3D
m11	opengl/LineStroker.java	/^  private int m10, m11;$/;"	f	class:LineStroker	file:
m12	core/PMatrix2D.java	/^  public float m10, m11, m12;$/;"	f	class:PMatrix2D
m12	core/PMatrix3D.java	/^  public float m10, m11, m12, m13;$/;"	f	class:PMatrix3D
m13	core/PMatrix3D.java	/^  public float m10, m11, m12, m13;$/;"	f	class:PMatrix3D
m20	core/PMatrix3D.java	/^  public float m20, m21, m22, m23;$/;"	f	class:PMatrix3D
m21	core/PMatrix3D.java	/^  public float m20, m21, m22, m23;$/;"	f	class:PMatrix3D
m22	core/PMatrix3D.java	/^  public float m20, m21, m22, m23;$/;"	f	class:PMatrix3D
m23	core/PMatrix3D.java	/^  public float m20, m21, m22, m23;$/;"	f	class:PMatrix3D
m30	core/PMatrix3D.java	/^  public float m30, m31, m32, m33;$/;"	f	class:PMatrix3D
m31	core/PMatrix3D.java	/^  public float m30, m31, m32, m33;$/;"	f	class:PMatrix3D
m32	core/PMatrix3D.java	/^  public float m30, m31, m32, m33;$/;"	f	class:PMatrix3D
m33	core/PMatrix3D.java	/^  public float m30, m31, m32, m33;$/;"	f	class:PMatrix3D
mag	core/PApplet.java	/^  static public final float mag(float a, float b) {$/;"	m	class:PApplet
mag	core/PApplet.java	/^  static public final float mag(float a, float b, float c) {$/;"	m	class:PApplet
mag	core/PVector.java	/^  public float mag() {$/;"	m	class:PVector
magSq	core/PVector.java	/^  public float magSq() {$/;"	m	class:PVector
main	core/PApplet.java	/^  static public void main(final String mainClass) {$/;"	m	class:PApplet
main	core/PApplet.java	/^  static public void main(final String mainClass, final String[] passedArgs) {$/;"	m	class:PApplet
main	core/PApplet.java	/^  static public void main(final String[] args) {$/;"	m	class:PApplet
makeGraphics	core/PApplet.java	/^  protected PGraphics makeGraphics(int w, int h,$/;"	m	class:PApplet
manipulatingCamera	opengl/PGraphicsOpenGL.java	/^  protected boolean manipulatingCamera;$/;"	f	class:PGraphicsOpenGL
map	core/PApplet.java	/^  static public final float map(float value,$/;"	m	class:PApplet
map	data/JSONObject.java	/^  private final HashMap<String, Object> map;$/;"	f	class:JSONObject	file:
mapBuffer	opengl/PGL.java	/^  public abstract ByteBuffer mapBuffer(int target, int access);$/;"	m	class:PGL
mapBuffer	opengl/PJOGL.java	/^  public ByteBuffer mapBuffer(int target, int access) {$/;"	m	class:PJOGL
mapBufferRange	opengl/PGL.java	/^  public abstract ByteBuffer mapBufferRange(int target, int offset, int length, int access);$/;"	m	class:PGL
mapBufferRange	opengl/PJOGL.java	/^  public ByteBuffer mapBufferRange(int target, int offset, int length, int access) {$/;"	m	class:PJOGL
markForTessellation	opengl/PShapeOpenGL.java	/^  protected void markForTessellation() {$/;"	m	class:PShapeOpenGL
mask	core/PApplet.java	/^  public void mask(PImage img) {$/;"	m	class:PApplet
mask	core/PGraphicsJava2D.java	/^  public void mask(PImage alpha) {$/;"	m	class:PGraphicsJava2D
mask	core/PGraphicsJava2D.java	/^  public void mask(int alpha[]) {$/;"	m	class:PGraphicsJava2D
mask	core/PGraphicsRetina2D.java	/^  public void mask(PImage alpha) {$/;"	m	class:PGraphicsRetina2D
mask	core/PGraphicsRetina2D.java	/^  public void mask(int alpha[]) {$/;"	m	class:PGraphicsRetina2D
mask	core/PImage.java	/^  public void mask(PImage img) {$/;"	m	class:PImage
mask	core/PImage.java	/^  public void mask(int maskArray[]) {  \/\/ ignore$/;"	m	class:PImage
mask	opengl/PGraphicsOpenGL.java	/^  public void mask(PImage alpha) {$/;"	m	class:PGraphicsOpenGL
maskShader	opengl/PGraphicsOpenGL.java	/^  static protected PShader maskShader;$/;"	f	class:PGraphicsOpenGL
maskShaderFragURL	opengl/PGraphicsOpenGL.java	/^  static protected URL maskShaderFragURL =$/;"	f	class:PGraphicsOpenGL
matIdx	core/PShapeOBJ.java	/^    int matIdx;$/;"	f	class:PShapeOBJ.OBJFace
match	core/PApplet.java	/^  static public String[] match(String str, String regexp) {$/;"	m	class:PApplet
matchAll	core/PApplet.java	/^  static public String[][] matchAll(String str, String regexp) {$/;"	m	class:PApplet
matchPattern	core/PApplet.java	/^  static Pattern matchPattern(String regexp) {$/;"	m	class:PApplet
matchPatterns	core/PApplet.java	/^  static protected HashMap<String, Pattern> matchPatterns;$/;"	f	class:PApplet
matchRow	data/Table.java	/^  public TableRow matchRow(String regexp, String columnName) {$/;"	m	class:Table
matchRow	data/Table.java	/^  public TableRow matchRow(String regexp, int column) {$/;"	m	class:Table
matchRowIndex	data/Table.java	/^  public int matchRowIndex(String regexp, int column) {$/;"	m	class:Table
matchRowIndex	data/Table.java	/^  public int matchRowIndex(String what, String columnName) {$/;"	m	class:Table
matchRowIndices	data/Table.java	/^  public int[] matchRowIndices(String regexp, int column) {$/;"	m	class:Table
matchRowIndices	data/Table.java	/^  public int[] matchRowIndices(String what, String columnName) {$/;"	m	class:Table
matchRowIterator	data/Table.java	/^  public Iterator<TableRow> matchRowIterator(String value, String columnName) {$/;"	m	class:Table
matchRowIterator	data/Table.java	/^  public Iterator<TableRow> matchRowIterator(String value, int column) {$/;"	m	class:Table
matchRows	data/Table.java	/^  public Iterable<TableRow> matchRows(String regexp, String columnName) {$/;"	m	class:Table
matchRows	data/Table.java	/^  public Iterable<TableRow> matchRows(final String regexp, final int column) {$/;"	m	class:Table
matricesAllocated	opengl/PGraphicsOpenGL.java	/^  protected boolean matricesAllocated = false;$/;"	f	class:PGraphicsOpenGL
matrix	core/PShape.java	/^  protected PMatrix matrix;$/;"	f	class:PShape
max	core/PApplet.java	/^  static public final float max(float a, float b) {$/;"	m	class:PApplet
max	core/PApplet.java	/^  static public final float max(float a, float b, float c) {$/;"	m	class:PApplet
max	core/PApplet.java	/^  static public final float max(float[] list) {$/;"	m	class:PApplet
max	core/PApplet.java	/^  static public final int max(int a, int b) {$/;"	m	class:PApplet
max	core/PApplet.java	/^  static public final int max(int a, int b, int c) {$/;"	m	class:PApplet
max	core/PApplet.java	/^  static public final int max(int[] list) {$/;"	m	class:PApplet
max	core/PMatrix2D.java	/^  static private final float max(float a, float b) {$/;"	m	class:PMatrix2D	file:
max	core/PMatrix3D.java	/^  static private final float max(float a, float b) {$/;"	m	class:PMatrix3D	file:
max	data/FloatList.java	/^  public float max() {$/;"	m	class:FloatList
max	data/IntList.java	/^  public int max() {$/;"	m	class:IntList
maxAnisoAmount	opengl/PGraphicsOpenGL.java	/^  static public float maxAnisoAmount;$/;"	f	class:PGraphicsOpenGL
maxIndex	data/FloatDict.java	/^  public int maxIndex() {$/;"	m	class:FloatDict
maxIndex	data/FloatList.java	/^  public int maxIndex() {$/;"	m	class:FloatList
maxIndex	data/IntDict.java	/^  public int maxIndex() {$/;"	m	class:IntDict
maxIndex	data/IntList.java	/^  public int maxIndex() {$/;"	m	class:IntList
maxKey	data/FloatDict.java	/^  public String maxKey() {$/;"	m	class:FloatDict
maxKey	data/IntDict.java	/^  public String maxKey() {$/;"	m	class:IntDict
maxSamples	opengl/PGL.java	/^  protected int maxSamples() {$/;"	m	class:PGL
maxSamples	opengl/PGraphicsOpenGL.java	/^  static public int maxSamples;$/;"	f	class:PGraphicsOpenGL
maxSize	opengl/FontTexture.java	/^  protected int maxSize;$/;"	f	class:FontTexture
maxTexUnits	opengl/PGL.java	/^  protected static int maxTexUnits;$/;"	f	class:PGL
maxTexcoordU	opengl/Texture.java	/^  protected float maxTexcoordU;$/;"	f	class:Texture
maxTexcoordU	opengl/Texture.java	/^  public float maxTexcoordU() {$/;"	m	class:Texture
maxTexcoordV	opengl/Texture.java	/^  protected float maxTexcoordV;$/;"	f	class:Texture
maxTexcoordV	opengl/Texture.java	/^  public float maxTexcoordV() {$/;"	m	class:Texture
maxTextureSize	opengl/PGraphicsOpenGL.java	/^  static public int maxTextureSize;$/;"	f	class:PGraphicsOpenGL
maxValue	data/FloatDict.java	/^  public float maxValue() {$/;"	m	class:FloatDict
maxValue	data/IntDict.java	/^  public int maxValue() {$/;"	m	class:IntDict
method	core/PApplet.java	/^  public void method(String name) {$/;"	m	class:PApplet
methods	core/PApplet.java	/^    Method[] methods;$/;"	f	class:PApplet.RegisteredMethods
millis	core/PApplet.java	/^  public int millis() {$/;"	m	class:PApplet
millis	event/Event.java	/^  protected long millis;$/;"	f	class:Event
millisOffset	core/PApplet.java	/^  long millisOffset = System.currentTimeMillis();$/;"	f	class:PApplet
min	core/PApplet.java	/^  static public final float min(float a, float b) {$/;"	m	class:PApplet
min	core/PApplet.java	/^  static public final float min(float a, float b, float c) {$/;"	m	class:PApplet
min	core/PApplet.java	/^  static public final float min(float[] list) {$/;"	m	class:PApplet
min	core/PApplet.java	/^  static public final int min(int a, int b) {$/;"	m	class:PApplet
min	core/PApplet.java	/^  static public final int min(int a, int b, int c) {$/;"	m	class:PApplet
min	core/PApplet.java	/^  static public final int min(int[] list) {$/;"	m	class:PApplet
min	data/FloatList.java	/^  public float min() {$/;"	m	class:FloatList
min	data/IntList.java	/^  public int min() {$/;"	m	class:IntList
minIndex	data/FloatDict.java	/^  public int minIndex() {$/;"	m	class:FloatDict
minIndex	data/FloatList.java	/^  public int minIndex() {$/;"	m	class:FloatList
minIndex	data/IntDict.java	/^  public int minIndex() {$/;"	m	class:IntDict
minIndex	data/IntList.java	/^  public int minIndex() {$/;"	m	class:IntList
minKey	data/FloatDict.java	/^  public String minKey() {$/;"	m	class:FloatDict
minKey	data/IntDict.java	/^  public String minKey() {$/;"	m	class:IntDict
minSize	opengl/FontTexture.java	/^  protected int minSize;$/;"	f	class:FontTexture
minValue	data/FloatDict.java	/^  public float minValue() {$/;"	m	class:FloatDict
minValue	data/IntDict.java	/^  public int minValue() {$/;"	m	class:IntDict
minute	core/PApplet.java	/^  static public int minute() {$/;"	m	class:PApplet
mipmaps	opengl/Texture.java	/^    public boolean mipmaps;$/;"	f	class:Texture.Parameters
missingCategory	data/Table.java	/^  protected int missingCategory = -1;$/;"	f	class:Table
missingDouble	data/Table.java	/^  protected double missingDouble = Double.NaN;$/;"	f	class:Table
missingFloat	data/Table.java	/^  protected float missingFloat = Float.NaN;$/;"	f	class:Table
missingGlyph	core/PShapeSVG.java	/^    public FontGlyph missingGlyph;$/;"	f	class:PShapeSVG.Font
missingInt	data/Table.java	/^  protected int missingInt = 0;$/;"	f	class:Table
missingLong	data/Table.java	/^  protected long missingLong = 0;$/;"	f	class:Table
missingString	data/Table.java	/^  protected String missingString = null;$/;"	f	class:Table
miter	opengl/LineStroker.java	/^  private int[] miter = new int[2];$/;"	f	class:LineStroker	file:
miterLimitSq	opengl/LineStroker.java	/^  private long miterLimitSq;$/;"	f	class:LineStroker	file:
mix	core/PImage.java	/^  private static int mix(int a, int b, int f) {$/;"	m	class:PImage	file:
mode	core/PGraphicsJava2D.java	/^    private int mode;$/;"	f	class:PGraphicsJava2D.BlendingContext	file:
modelX	core/PApplet.java	/^  public float modelX(float x, float y, float z) {$/;"	m	class:PApplet
modelX	core/PGraphics.java	/^  public float modelX(float x, float y, float z) {$/;"	m	class:PGraphics
modelX	opengl/PGraphicsOpenGL.java	/^  public float modelX(float x, float y, float z) {$/;"	m	class:PGraphicsOpenGL
modelY	core/PApplet.java	/^  public float modelY(float x, float y, float z) {$/;"	m	class:PApplet
modelY	core/PGraphics.java	/^  public float modelY(float x, float y, float z) {$/;"	m	class:PGraphics
modelY	opengl/PGraphicsOpenGL.java	/^  public float modelY(float x, float y, float z) {$/;"	m	class:PGraphicsOpenGL
modelZ	core/PApplet.java	/^  public float modelZ(float x, float y, float z) {$/;"	m	class:PApplet
modelZ	core/PGraphics.java	/^  public float modelZ(float x, float y, float z) {$/;"	m	class:PGraphics
modelZ	opengl/PGraphicsOpenGL.java	/^  public float modelZ(float x, float y, float z) {$/;"	m	class:PGraphicsOpenGL
modelview	opengl/PGraphicsOpenGL.java	/^  public PMatrix3D modelview;$/;"	f	class:PGraphicsOpenGL
modelviewInv	opengl/PGraphicsOpenGL.java	/^  public PMatrix3D modelviewInv;$/;"	f	class:PGraphicsOpenGL
modelviewInvStack	opengl/PGraphicsOpenGL.java	/^  protected float[][] modelviewInvStack = new float[MATRIX_STACK_DEPTH][16];$/;"	f	class:PGraphicsOpenGL
modelviewMatLoc	opengl/PShader.java	/^  protected int modelviewMatLoc;$/;"	f	class:PShader
modelviewStack	opengl/PGraphicsOpenGL.java	/^  protected float[][] modelviewStack = new float[MATRIX_STACK_DEPTH][16];$/;"	f	class:PGraphicsOpenGL
modelviewStackDepth	opengl/PGraphicsOpenGL.java	/^  protected int modelviewStackDepth;$/;"	f	class:PGraphicsOpenGL
modified	core/PImage.java	/^  protected boolean modified;$/;"	f	class:PImage
modified	opengl/PShapeOpenGL.java	/^  protected boolean modified;$/;"	f	class:PShapeOpenGL
modified	opengl/Texture.java	/^  protected boolean modified;$/;"	f	class:Texture
modifiedLineAttributes	opengl/PShapeOpenGL.java	/^  protected boolean modifiedLineAttributes;$/;"	f	class:PShapeOpenGL
modifiedLineColors	opengl/PShapeOpenGL.java	/^  protected boolean modifiedLineColors;$/;"	f	class:PShapeOpenGL
modifiedLineVertices	opengl/PShapeOpenGL.java	/^  protected boolean modifiedLineVertices;$/;"	f	class:PShapeOpenGL
modifiedPointAttributes	opengl/PShapeOpenGL.java	/^  protected boolean modifiedPointAttributes;$/;"	f	class:PShapeOpenGL
modifiedPointColors	opengl/PShapeOpenGL.java	/^  protected boolean modifiedPointColors;$/;"	f	class:PShapeOpenGL
modifiedPointVertices	opengl/PShapeOpenGL.java	/^  protected boolean modifiedPointVertices;$/;"	f	class:PShapeOpenGL
modifiedPolyAmbient	opengl/PShapeOpenGL.java	/^  protected boolean modifiedPolyAmbient;$/;"	f	class:PShapeOpenGL
modifiedPolyColors	opengl/PShapeOpenGL.java	/^  protected boolean modifiedPolyColors;$/;"	f	class:PShapeOpenGL
modifiedPolyEmissive	opengl/PShapeOpenGL.java	/^  protected boolean modifiedPolyEmissive;$/;"	f	class:PShapeOpenGL
modifiedPolyNormals	opengl/PShapeOpenGL.java	/^  protected boolean modifiedPolyNormals;$/;"	f	class:PShapeOpenGL
modifiedPolyShininess	opengl/PShapeOpenGL.java	/^  protected boolean modifiedPolyShininess;$/;"	f	class:PShapeOpenGL
modifiedPolySpecular	opengl/PShapeOpenGL.java	/^  protected boolean modifiedPolySpecular;$/;"	f	class:PShapeOpenGL
modifiedPolyTexCoords	opengl/PShapeOpenGL.java	/^  protected boolean modifiedPolyTexCoords;$/;"	f	class:PShapeOpenGL
modifiedPolyVertices	opengl/PShapeOpenGL.java	/^  protected boolean modifiedPolyVertices;$/;"	f	class:PShapeOpenGL
modifiers	event/Event.java	/^  protected int modifiers;$/;"	f	class:Event
month	core/PApplet.java	/^  static public int month() {$/;"	m	class:PApplet
more	data/JSONTokener.java	/^  public boolean more() {$/;"	m	class:JSONTokener
mouseButton	core/PApplet.java	/^  public int mouseButton;$/;"	f	class:PApplet
mouseClicked	core/PApplet.java	/^  public void mouseClicked() { }$/;"	m	class:PApplet
mouseClicked	core/PApplet.java	/^  public void mouseClicked(MouseEvent event) {$/;"	m	class:PApplet
mouseClicked	core/PApplet.java	/^  public void mouseClicked(java.awt.event.MouseEvent e) {$/;"	m	class:PApplet
mouseClicked	opengl/PJOGL.java	/^    public void mouseClicked(com.jogamp.newt.event.MouseEvent e) {$/;"	m	class:PJOGL.NEWTMouseListener
mouseDragged	core/PApplet.java	/^  public void mouseDragged() { }$/;"	m	class:PApplet
mouseDragged	core/PApplet.java	/^  public void mouseDragged(MouseEvent event) {$/;"	m	class:PApplet
mouseDragged	core/PApplet.java	/^  public void mouseDragged(java.awt.event.MouseEvent e) {$/;"	m	class:PApplet
mouseDragged	opengl/PJOGL.java	/^    public void mouseDragged(com.jogamp.newt.event.MouseEvent e) {$/;"	m	class:PJOGL.NEWTMouseListener
mouseEntered	core/PApplet.java	/^  public void mouseEntered() { }$/;"	m	class:PApplet
mouseEntered	core/PApplet.java	/^  public void mouseEntered(MouseEvent event) {$/;"	m	class:PApplet
mouseEntered	core/PApplet.java	/^  public void mouseEntered(java.awt.event.MouseEvent e) {$/;"	m	class:PApplet
mouseEntered	opengl/PJOGL.java	/^    public void mouseEntered(com.jogamp.newt.event.MouseEvent e) {$/;"	m	class:PJOGL.NEWTMouseListener
mouseEvent	core/PApplet.java	/^  public MouseEvent mouseEvent;$/;"	f	class:PApplet
mouseEventMethods	core/PApplet.java	/^  RegisteredMethods mouseEventMethods, keyEventMethods;$/;"	f	class:PApplet
mouseExited	core/PApplet.java	/^  public void mouseExited() { }$/;"	m	class:PApplet
mouseExited	core/PApplet.java	/^  public void mouseExited(MouseEvent event) {$/;"	m	class:PApplet
mouseExited	core/PApplet.java	/^  public void mouseExited(java.awt.event.MouseEvent e) {$/;"	m	class:PApplet
mouseExited	opengl/PJOGL.java	/^    public void mouseExited(com.jogamp.newt.event.MouseEvent e) {$/;"	m	class:PJOGL.NEWTMouseListener
mouseMoved	core/PApplet.java	/^  public void mouseMoved() { }$/;"	m	class:PApplet
mouseMoved	core/PApplet.java	/^  public void mouseMoved(MouseEvent event) {$/;"	m	class:PApplet
mouseMoved	core/PApplet.java	/^  public void mouseMoved(java.awt.event.MouseEvent e) {$/;"	m	class:PApplet
mouseMoved	opengl/PJOGL.java	/^    public void mouseMoved(com.jogamp.newt.event.MouseEvent e) {$/;"	m	class:PJOGL.NEWTMouseListener
mousePressed	core/PApplet.java	/^  public boolean mousePressed;$/;"	f	class:PApplet
mousePressed	core/PApplet.java	/^  public void mousePressed() { }$/;"	m	class:PApplet
mousePressed	core/PApplet.java	/^  public void mousePressed(MouseEvent event) {$/;"	m	class:PApplet
mousePressed	core/PApplet.java	/^  public void mousePressed(java.awt.event.MouseEvent e) {$/;"	m	class:PApplet
mousePressed	opengl/PJOGL.java	/^    public void mousePressed(com.jogamp.newt.event.MouseEvent e) {$/;"	m	class:PJOGL.NEWTMouseListener
mouseReleased	core/PApplet.java	/^  public void mouseReleased() { }$/;"	m	class:PApplet
mouseReleased	core/PApplet.java	/^  public void mouseReleased(MouseEvent event) {$/;"	m	class:PApplet
mouseReleased	core/PApplet.java	/^  public void mouseReleased(java.awt.event.MouseEvent e) {$/;"	m	class:PApplet
mouseReleased	opengl/PJOGL.java	/^    public void mouseReleased(com.jogamp.newt.event.MouseEvent e) {$/;"	m	class:PJOGL.NEWTMouseListener
mouseWheel	core/PApplet.java	/^  public void mouseWheel() { }$/;"	m	class:PApplet
mouseWheel	core/PApplet.java	/^  public void mouseWheel(MouseEvent event) {$/;"	m	class:PApplet
mouseWheelMoved	core/PApplet.java	/^  public void mouseWheelMoved(java.awt.event.MouseWheelEvent e) {$/;"	m	class:PApplet
mouseWheelMoved	opengl/PJOGL.java	/^    public void mouseWheelMoved(com.jogamp.newt.event.MouseEvent e) {$/;"	m	class:PJOGL.NEWTMouseListener
mouseX	core/PApplet.java	/^  public int mouseX;$/;"	f	class:PApplet
mouseY	core/PApplet.java	/^  public int mouseY;$/;"	f	class:PApplet
moveTo	opengl/LinePath.java	/^  public final void moveTo(float x, float y, int c) {$/;"	m	class:LinePath
moveTo	opengl/LineStroker.java	/^  public void moveTo(int x0, int y0, int c0) {$/;"	m	class:LineStroker
mult	core/PMatrix.java	/^  public PVector mult(PVector source, PVector target);$/;"	m	interface:PMatrix
mult	core/PMatrix.java	/^  public float[] mult(float[] source, float[] target);$/;"	m	interface:PMatrix
mult	core/PMatrix2D.java	/^  public PVector mult(PVector source, PVector target) {$/;"	m	class:PMatrix2D
mult	core/PMatrix2D.java	/^  public float[] mult(float vec[], float out[]) {$/;"	m	class:PMatrix2D
mult	core/PMatrix3D.java	/^  public PVector mult(PVector source, PVector target) {$/;"	m	class:PMatrix3D
mult	core/PMatrix3D.java	/^  public float[] mult(float[] source, float[] target) {$/;"	m	class:PMatrix3D
mult	core/PVector.java	/^  public void mult(float n) {$/;"	m	class:PVector
mult	core/PVector.java	/^  static public PVector mult(PVector v, float n) {$/;"	m	class:PVector
mult	core/PVector.java	/^  static public PVector mult(PVector v, float n, PVector target) {$/;"	m	class:PVector
mult	data/FloatDict.java	/^  public void mult(String key, float amount) {$/;"	m	class:FloatDict
mult	data/FloatList.java	/^  public void mult(int index, float amount) {$/;"	m	class:FloatList
mult	data/IntDict.java	/^  public void mult(String key, int amount) {$/;"	m	class:IntDict
mult	data/IntList.java	/^  public void mult(int index, int amount) {$/;"	m	class:IntList
multW	core/PMatrix3D.java	/^  public float multW(float x, float y, float z) {$/;"	m	class:PMatrix3D
multW	core/PMatrix3D.java	/^  public float multW(float x, float y, float z, float w) {$/;"	m	class:PMatrix3D
multX	core/PMatrix2D.java	/^  public float multX(float x, float y) {$/;"	m	class:PMatrix2D
multX	core/PMatrix3D.java	/^  public float multX(float x, float y) {$/;"	m	class:PMatrix3D
multX	core/PMatrix3D.java	/^  public float multX(float x, float y, float z) {$/;"	m	class:PMatrix3D
multX	core/PMatrix3D.java	/^  public float multX(float x, float y, float z, float w) {$/;"	m	class:PMatrix3D
multY	core/PMatrix2D.java	/^  public float multY(float x, float y) {$/;"	m	class:PMatrix2D
multY	core/PMatrix3D.java	/^  public float multY(float x, float y) {$/;"	m	class:PMatrix3D
multY	core/PMatrix3D.java	/^  public float multY(float x, float y, float z) {$/;"	m	class:PMatrix3D
multY	core/PMatrix3D.java	/^  public float multY(float x, float y, float z, float w) {$/;"	m	class:PMatrix3D
multZ	core/PMatrix3D.java	/^  public float multZ(float x, float y, float z) {$/;"	m	class:PMatrix3D
multZ	core/PMatrix3D.java	/^  public float multZ(float x, float y, float z, float w) {$/;"	m	class:PMatrix3D
multisample	opengl/FrameBuffer.java	/^  protected boolean multisample;$/;"	f	class:FrameBuffer
multisampleFramebuffer	opengl/PGraphicsOpenGL.java	/^  protected FrameBuffer multisampleFramebuffer;$/;"	f	class:PGraphicsOpenGL
mvMatrix	opengl/PJOGL.java	/^  protected float[] mvMatrix;$/;"	f	class:PJOGL
mx0	opengl/LineStroker.java	/^  private int mx0, my0, omx, omy;$/;"	f	class:LineStroker	file:
mx1	core/PImage.java	/^  protected int mx1, my1, mx2, my2;$/;"	f	class:PImage
mx1	opengl/Texture.java	/^  protected int mx1, my1, mx2, my2;$/;"	f	class:Texture
mx2	core/PImage.java	/^  protected int mx1, my1, mx2, my2;$/;"	f	class:PImage
mx2	opengl/Texture.java	/^  protected int mx1, my1, mx2, my2;$/;"	f	class:Texture
my0	opengl/LineStroker.java	/^  private int mx0, my0, omx, omy;$/;"	f	class:LineStroker	file:
my1	core/PImage.java	/^  protected int mx1, my1, mx2, my2;$/;"	f	class:PImage
my1	opengl/Texture.java	/^  protected int mx1, my1, mx2, my2;$/;"	f	class:Texture
my2	core/PImage.java	/^  protected int mx1, my1, mx2, my2;$/;"	f	class:PImage
my2	opengl/Texture.java	/^  protected int mx1, my1, mx2, my2;$/;"	f	class:Texture
myArrayList	data/JSONArray.java	/^  private final ArrayList<Object> myArrayList;$/;"	f	class:JSONArray	file:
name	core/PFont.java	/^  protected String name;$/;"	f	class:PFont
name	core/PShape.java	/^  protected String name;$/;"	f	class:PShape
name	core/PShapeOBJ.java	/^    String name;$/;"	f	class:PShapeOBJ.OBJFace
name	core/PShapeOBJ.java	/^    String name;$/;"	f	class:PShapeOBJ.OBJMaterial
name	core/PShapeSVG.java	/^    public String name;$/;"	f	class:PShapeSVG.FontGlyph
nameTable	core/PShape.java	/^  protected HashMap<String,PShape> nameTable;$/;"	f	class:PShape
namedGlyphs	core/PShapeSVG.java	/^    public HashMap<String,FontGlyph> namedGlyphs;$/;"	f	class:PShapeSVG.Font
natBuf	opengl/Texture.java	/^    Object natBuf;$/;"	f	class:Texture.BufferData
nativeKeyEvent	core/PApplet.java	/^  protected void nativeKeyEvent(java.awt.event.KeyEvent event) {$/;"	m	class:PApplet
nativeKeyEvent	opengl/PJOGL.java	/^  protected void nativeKeyEvent(com.jogamp.newt.event.KeyEvent nativeEvent,$/;"	m	class:PJOGL
nativeMouseEvent	core/PApplet.java	/^  protected void nativeMouseEvent(java.awt.event.MouseEvent nativeEvent) {$/;"	m	class:PApplet
nativeMouseEvent	opengl/PJOGL.java	/^  protected void nativeMouseEvent(com.jogamp.newt.event.MouseEvent nativeEvent,$/;"	m	class:PJOGL
nativeObject	event/Event.java	/^  protected Object nativeObject;$/;"	f	class:Event
nativePixelBuffer	opengl/PGraphicsOpenGL.java	/^  protected IntBuffer nativePixelBuffer;$/;"	f	class:PGraphicsOpenGL
nativePixels	opengl/PGraphicsOpenGL.java	/^  protected int[] nativePixels;$/;"	f	class:PGraphicsOpenGL
nativeToJavaARGB	opengl/PGL.java	/^  protected static int nativeToJavaARGB(int color) {$/;"	m	class:PGL
nativeToJavaARGB	opengl/PGL.java	/^  protected static void nativeToJavaARGB(int[] pixels, int width, int height) {$/;"	m	class:PGL
nativeToJavaRGB	opengl/PGL.java	/^  protected static int nativeToJavaRGB(int color) {$/;"	m	class:PGL
nativeToJavaRGB	opengl/PGL.java	/^  protected static void nativeToJavaRGB(int[] pixels, int width, int height) {$/;"	m	class:PGL
needBufferInit	opengl/PShapeOpenGL.java	/^  protected boolean needBufferInit = false;$/;"	f	class:PShapeOpenGL
needFBOLayer	opengl/PGL.java	/^  protected boolean needFBOLayer(boolean clear0) {$/;"	m	class:PGL
needRoom	opengl/LinePath.java	/^  void needRoom(boolean needMove, int newPoints) {$/;"	m	class:LinePath
needSepFrontTex	opengl/PGL.java	/^  protected boolean needSepFrontTex = false;$/;"	f	class:PGL
newInGeometry	opengl/PGraphicsOpenGL.java	/^  static protected InGeometry newInGeometry(PGraphicsOpenGL pg, int mode) {$/;"	m	class:PGraphicsOpenGL
newTessGeometry	opengl/PGraphicsOpenGL.java	/^  static protected TessGeometry newTessGeometry(PGraphicsOpenGL pg, int mode) {$/;"	m	class:PGraphicsOpenGL
newTexCache	opengl/PGraphicsOpenGL.java	/^  static protected TexCache newTexCache() {$/;"	m	class:PGraphicsOpenGL
newTexImage	opengl/PGraphicsOpenGL.java	/^    PImage newTexImage;$/;"	f	class:PGraphicsOpenGL.Tessellator
next	data/JSONTokener.java	/^  public String next(int n) {$/;"	m	class:JSONTokener
next	data/JSONTokener.java	/^  public char next() {$/;"	m	class:JSONTokener
next	data/JSONTokener.java	/^  public char next(char c) {$/;"	m	class:JSONTokener
next	data/Table.java	/^    public TableRow next() {$/;"	m	class:Table.RowIndexIterator
next	data/Table.java	/^    public TableRow next() {$/;"	m	class:Table.RowIterator
next	opengl/LinePath.java	/^    public void next() {$/;"	m	class:LinePath.PathIterator
next	opengl/PGL.java	/^    public void next();$/;"	m	interface:PGL.FontOutline
next	opengl/PJOGL.java	/^    public void next() {$/;"	m	class:PJOGL.FontOutline
nextClean	data/JSONTokener.java	/^  public char nextClean() {$/;"	m	class:JSONTokener
nextComma	data/Table.java	/^  static protected int nextComma(char[] c, int index) {$/;"	m	class:Table
nextPowerOfTwo	opengl/PGL.java	/^  protected static int nextPowerOfTwo(int val) {$/;"	m	class:PGL
nextString	data/JSONTokener.java	/^  public String nextString(char quote) {$/;"	m	class:JSONTokener
nextTo	data/JSONTokener.java	/^  public String nextTo(String delimiters) {$/;"	m	class:JSONTokener
nextTo	data/JSONTokener.java	/^  public String nextTo(char delimiter) {$/;"	m	class:JSONTokener
nextValue	data/JSONTokener.java	/^  public Object nextValue() {$/;"	m	class:JSONTokener
nf	core/PApplet.java	/^  static public String nf(float num, int left, int right) {$/;"	m	class:PApplet
nf	core/PApplet.java	/^  static public String nf(int num, int digits) {$/;"	m	class:PApplet
nf	core/PApplet.java	/^  static public String[] nf(float num[], int left, int right) {$/;"	m	class:PApplet
nf	core/PApplet.java	/^  static public String[] nf(int num[], int digits) {$/;"	m	class:PApplet
nfc	core/PApplet.java	/^  static public String nfc(float num, int right) {$/;"	m	class:PApplet
nfc	core/PApplet.java	/^  static public String nfc(int num) {$/;"	m	class:PApplet
nfc	core/PApplet.java	/^  static public String[] nfc(float num[], int right) {$/;"	m	class:PApplet
nfc	core/PApplet.java	/^  static public String[] nfc(int num[]) {$/;"	m	class:PApplet
nfp	core/PApplet.java	/^  static public String nfp(float num, int left, int right) {$/;"	m	class:PApplet
nfp	core/PApplet.java	/^  static public String nfp(int num, int digits) {$/;"	m	class:PApplet
nfp	core/PApplet.java	/^  static public String[] nfp(float num[], int left, int right) {$/;"	m	class:PApplet
nfp	core/PApplet.java	/^  static public String[] nfp(int num[], int digits) {$/;"	m	class:PApplet
nfs	core/PApplet.java	/^  static public String nfs(float num, int left, int right) {$/;"	m	class:PApplet
nfs	core/PApplet.java	/^  static public String nfs(int num, int digits) {$/;"	m	class:PApplet
nfs	core/PApplet.java	/^  static public String[] nfs(float num[], int left, int right) {$/;"	m	class:PApplet
nfs	core/PApplet.java	/^  static public String[] nfs(int num[], int digits) {$/;"	m	class:PApplet
noCapsJoins	opengl/PGraphicsOpenGL.java	/^    boolean noCapsJoins() {$/;"	m	class:PGraphicsOpenGL.Tessellator
noCapsJoins	opengl/PGraphicsOpenGL.java	/^    boolean noCapsJoins(int nInVert) {$/;"	m	class:PGraphicsOpenGL.Tessellator
noClip	core/PApplet.java	/^  public void noClip() {$/;"	m	class:PApplet
noClip	core/PGraphics.java	/^  public void noClip() {$/;"	m	class:PGraphics
noClip	core/PGraphicsJava2D.java	/^  public void noClip() {$/;"	m	class:PGraphicsJava2D
noClip	opengl/PGraphicsOpenGL.java	/^  public void noClip() {$/;"	m	class:PGraphicsOpenGL
noCursor	core/PApplet.java	/^  public void noCursor() {$/;"	m	class:PApplet
noDepth	opengl/FrameBuffer.java	/^  protected boolean noDepth;$/;"	f	class:FrameBuffer
noFill	core/PApplet.java	/^  public void noFill() {$/;"	m	class:PApplet
noFill	core/PGraphics.java	/^  public void noFill() {$/;"	m	class:PGraphics
noFill	core/PShape.java	/^  public void noFill() {$/;"	m	class:PShape
noLightAmbient	opengl/PGraphicsOpenGL.java	/^  protected void noLightAmbient(int num) {$/;"	m	class:PGraphicsOpenGL
noLightDiffuse	opengl/PGraphicsOpenGL.java	/^  protected void noLightDiffuse(int num) {$/;"	m	class:PGraphicsOpenGL
noLightFalloff	opengl/PGraphicsOpenGL.java	/^  protected void noLightFalloff(int num) {$/;"	m	class:PGraphicsOpenGL
noLightSpecular	opengl/PGraphicsOpenGL.java	/^  protected void noLightSpecular(int num) {$/;"	m	class:PGraphicsOpenGL
noLightSpot	opengl/PGraphicsOpenGL.java	/^  protected void noLightSpot(int num) {$/;"	m	class:PGraphicsOpenGL
noLights	core/PApplet.java	/^  public void noLights() {$/;"	m	class:PApplet
noLights	core/PGraphics.java	/^  public void noLights() {$/;"	m	class:PGraphics
noLights	opengl/PGraphics2D.java	/^  public void noLights() {$/;"	m	class:PGraphics2D
noLights	opengl/PGraphicsOpenGL.java	/^  public void noLights() {$/;"	m	class:PGraphicsOpenGL
noLoop	core/PApplet.java	/^  synchronized public void noLoop() {$/;"	m	class:PApplet
noSmooth	core/PApplet.java	/^  public void noSmooth() {$/;"	m	class:PApplet
noSmooth	core/PGraphics.java	/^  public void noSmooth() {$/;"	m	class:PGraphics
noSmooth	core/PGraphicsJava2D.java	/^  public void noSmooth() {$/;"	m	class:PGraphicsJava2D
noSmooth	opengl/PGraphicsOpenGL.java	/^  public void noSmooth() {$/;"	m	class:PGraphicsOpenGL
noStroke	core/PApplet.java	/^  public void noStroke() {$/;"	m	class:PApplet
noStroke	core/PGraphics.java	/^  public void noStroke() {$/;"	m	class:PGraphics
noStroke	core/PShape.java	/^  public void noStroke() {$/;"	m	class:PShape
noTexture	core/PApplet.java	/^  public void noTexture() {$/;"	m	class:PApplet
noTexture	core/PGraphics.java	/^  public void noTexture() {$/;"	m	class:PGraphics
noTexture	core/PShape.java	/^  public void noTexture() {$/;"	m	class:PShape
noTint	core/PApplet.java	/^  public void noTint() {$/;"	m	class:PApplet
noTint	core/PGraphics.java	/^  public void noTint() {$/;"	m	class:PGraphics
noTint	core/PShape.java	/^  public void noTint() {$/;"	m	class:PShape
node	data/XML.java	/^  protected Node node;$/;"	f	class:XML
noise	core/PApplet.java	/^  public float noise(float x) {$/;"	m	class:PApplet
noise	core/PApplet.java	/^  public float noise(float x, float y) {$/;"	m	class:PApplet
noise	core/PApplet.java	/^  public float noise(float x, float y, float z) {$/;"	m	class:PApplet
noiseDetail	core/PApplet.java	/^  public void noiseDetail(int lod) {$/;"	m	class:PApplet
noiseDetail	core/PApplet.java	/^  public void noiseDetail(int lod, float falloff) {$/;"	m	class:PApplet
noiseSeed	core/PApplet.java	/^  public void noiseSeed(long seed) {$/;"	m	class:PApplet
noise_fsc	core/PApplet.java	/^  private float noise_fsc(float i) {$/;"	m	class:PApplet	file:
nonOrthoProjection	opengl/PGraphicsOpenGL.java	/^  protected boolean nonOrthoProjection() {$/;"	m	class:PGraphicsOpenGL
nonZero	opengl/PGraphicsOpenGL.java	/^  protected static boolean nonZero(float a) {$/;"	m	class:PGraphicsOpenGL
norm	core/PApplet.java	/^  static public final float norm(float value, float start, float stop) {$/;"	m	class:PApplet
normIdx	core/PShapeOBJ.java	/^    ArrayList<Integer> normIdx;$/;"	f	class:PShapeOBJ.OBJFace
normal	core/PApplet.java	/^  public void normal(float nx, float ny, float nz) {$/;"	m	class:PApplet
normal	core/PGraphics.java	/^  public void normal(float nx, float ny, float nz) {$/;"	m	class:PGraphics
normal	core/PShape.java	/^  public void normal(float nx, float ny, float nz) {$/;"	m	class:PShape
normal	opengl/PShapeOpenGL.java	/^  public void normal(float nx, float ny, float nz) {$/;"	m	class:PShapeOpenGL
normalLoc	opengl/PShader.java	/^  protected int normalLoc;$/;"	f	class:PShader
normalMatLoc	opengl/PShader.java	/^  protected int normalMatLoc;$/;"	f	class:PShader
normalMode	core/PGraphics.java	/^  protected int normalMode;$/;"	f	class:PGraphics
normalMode	opengl/PShapeOpenGL.java	/^  protected int normalMode;$/;"	f	class:PShapeOpenGL
normalX	core/PGraphics.java	/^  public float normalX, normalY, normalZ;$/;"	f	class:PGraphics
normalX	opengl/PGraphicsOpenGL.java	/^    float normalX, normalY, normalZ;$/;"	f	class:PGraphicsOpenGL.InGeometry
normalX	opengl/PShapeOpenGL.java	/^  protected float normalX, normalY, normalZ;$/;"	f	class:PShapeOpenGL
normalY	core/PGraphics.java	/^  public float normalX, normalY, normalZ;$/;"	f	class:PGraphics
normalY	opengl/PGraphicsOpenGL.java	/^    float normalX, normalY, normalZ;$/;"	f	class:PGraphicsOpenGL.InGeometry
normalY	opengl/PShapeOpenGL.java	/^  protected float normalX, normalY, normalZ;$/;"	f	class:PShapeOpenGL
normalZ	core/PGraphics.java	/^  public float normalX, normalY, normalZ;$/;"	f	class:PGraphics
normalZ	opengl/PGraphicsOpenGL.java	/^    float normalX, normalY, normalZ;$/;"	f	class:PGraphicsOpenGL.InGeometry
normalZ	opengl/PShapeOpenGL.java	/^  protected float normalX, normalY, normalZ;$/;"	f	class:PShapeOpenGL
normalize	core/PVector.java	/^  public PVector normalize(PVector target) {$/;"	m	class:PVector
normalize	core/PVector.java	/^  public void normalize() {$/;"	m	class:PVector
normals	opengl/PGraphicsOpenGL.java	/^    float[] normals;$/;"	f	class:PGraphicsOpenGL.InGeometry
npotTexSupported	opengl/PGraphicsOpenGL.java	/^  static public boolean npotTexSupported;$/;"	f	class:PGraphicsOpenGL
ns	core/PShapeOBJ.java	/^    float ns;$/;"	f	class:PShapeOBJ.OBJMaterial
nsamples	opengl/FrameBuffer.java	/^  protected int nsamples;$/;"	f	class:FrameBuffer
numColorBuffers	opengl/FrameBuffer.java	/^  protected int numColorBuffers;$/;"	f	class:FrameBuffer
numCoords	opengl/LinePath.java	/^  protected int numCoords;$/;"	f	class:LinePath
numPenSegments	opengl/LineStroker.java	/^  private int numPenSegments;$/;"	f	class:LineStroker	file:
numSamples	opengl/PGL.java	/^  protected static int numSamples;$/;"	f	class:PGL
numTypes	opengl/LinePath.java	/^  protected int numTypes;$/;"	f	class:LinePath
numberToString	data/JSONObject.java	/^  private static String numberToString(Number number) {$/;"	m	class:JSONObject	file:
objects	core/PApplet.java	/^    Object[] objects;$/;"	f	class:PApplet.RegisteredMethods
odsAppendNotNull	data/Table.java	/^  private void odsAppendNotNull(XML kid, StringBuffer buffer) {$/;"	m	class:Table	file:
odsFindContentXML	data/Table.java	/^  private InputStream odsFindContentXML(InputStream input) {$/;"	m	class:Table	file:
odsParse	data/Table.java	/^  protected void odsParse(InputStream input, String worksheet) {$/;"	m	class:Table
odsParseSheet	data/Table.java	/^  private void odsParseSheet(XML sheet) {$/;"	m	class:Table	file:
offscreen	core/PGraphicsJava2D.java	/^  protected BufferedImage offscreen;$/;"	f	class:PGraphicsJava2D
offscreenFramebuffer	opengl/PGraphicsOpenGL.java	/^  protected FrameBuffer offscreenFramebuffer;$/;"	f	class:PGraphicsOpenGL
offscreenMultisample	opengl/PGraphicsOpenGL.java	/^  protected boolean offscreenMultisample;$/;"	f	class:PGraphicsOpenGL
offset	core/PApplet.java	/^    protected int offset;$/;"	f	class:PApplet.InternalEventQueue
offset	core/PShapeSVG.java	/^    float[] offset;$/;"	f	class:PShapeSVG.Gradient
offset	core/PShapeSVG.java	/^    float[] offset;$/;"	f	class:PShapeSVG.LinearGradientPaint
offset	core/PShapeSVG.java	/^    float[] offset;$/;"	f	class:PShapeSVG.RadialGradientPaint
offset	opengl/LineStroker.java	/^  private int[] offset = new int[2];$/;"	f	class:LineStroker	file:
offsetLoc	opengl/PShader.java	/^  protected int offsetLoc;$/;"	f	class:PShader
offsetX	opengl/FontTexture.java	/^  protected int offsetX;$/;"	f	class:FontTexture
offsetY	opengl/FontTexture.java	/^  protected int offsetY;$/;"	f	class:FontTexture
omx	opengl/LineStroker.java	/^  private int mx0, my0, omx, omy;$/;"	f	class:LineStroker	file:
omy	opengl/LineStroker.java	/^  private int mx0, my0, omx, omy;$/;"	f	class:LineStroker	file:
online	core/PApplet.java	/^  public boolean online = false;$/;"	f	class:PApplet
opacity	core/PShapeSVG.java	/^    float opacity;$/;"	f	class:PShapeSVG.LinearGradientPaint
opacity	core/PShapeSVG.java	/^    float opacity;$/;"	f	class:PShapeSVG.RadialGradientPaint
opacity	core/PShapeSVG.java	/^  float opacity;$/;"	f	class:PShapeSVG
open	core/PApplet.java	/^  static public Process open(String argv[]) {$/;"	m	class:PApplet
open	core/PApplet.java	/^  static public void open(String filename) {$/;"	m	class:PApplet
openContour	core/PShape.java	/^  protected boolean openContour = false;$/;"	f	class:PShape
openContour	opengl/PGraphicsOpenGL.java	/^  protected boolean openContour = false;$/;"	f	class:PGraphicsOpenGL
openLauncher	core/PApplet.java	/^  static String openLauncher;$/;"	f	class:PApplet
openShape	core/PShape.java	/^  protected boolean openShape = false;$/;"	f	class:PShape
openStream	core/PApplet.java	/^  public InputStream openStream(String filename) {$/;"	m	class:PApplet
opt	data/JSONArray.java	/^  private Object opt(int index) {$/;"	m	class:JSONArray	file:
opt	data/JSONObject.java	/^  private Object opt(String key) {$/;"	m	class:JSONObject	file:
orientation	core/PApplet.java	/^  public void orientation(int which) {$/;"	m	class:PApplet
ortho	core/PApplet.java	/^  public void ortho() {$/;"	m	class:PApplet
ortho	core/PApplet.java	/^  public void ortho(float left, float right,$/;"	m	class:PApplet
ortho	core/PGraphics.java	/^  public void ortho() {$/;"	m	class:PGraphics
ortho	core/PGraphics.java	/^  public void ortho(float left, float right,$/;"	m	class:PGraphics
ortho	opengl/PGraphics2D.java	/^  public void ortho() {$/;"	m	class:PGraphics2D
ortho	opengl/PGraphics2D.java	/^  public void ortho(float left, float right,$/;"	m	class:PGraphics2D
ortho	opengl/PGraphicsOpenGL.java	/^  public void ortho() {$/;"	m	class:PGraphicsOpenGL
ortho	opengl/PGraphicsOpenGL.java	/^  public void ortho(float left, float right,$/;"	m	class:PGraphicsOpenGL
orthoProjection	opengl/PGraphicsOpenGL.java	/^  protected boolean orthoProjection() {$/;"	m	class:PGraphicsOpenGL
output	opengl/LineStroker.java	/^  private LineStroker output;$/;"	f	class:LineStroker	file:
packedDepthStencil	opengl/FrameBuffer.java	/^  protected boolean packedDepthStencil;$/;"	f	class:FrameBuffer
packedDepthStencilSupported	opengl/PGraphicsOpenGL.java	/^  static public boolean packedDepthStencilSupported;$/;"	f	class:PGraphicsOpenGL
paint	core/PApplet.java	/^  public void paint(Graphics screen) {$/;"	m	class:PApplet
panose1	core/PShapeSVG.java	/^    int[] panose1;     \/\/ dflt "0 0 0 0 0 0 0 0 0 0"$/;"	f	class:PShapeSVG.FontFace
param	core/PApplet.java	/^  public String param(String name) {$/;"	m	class:PApplet
params	core/PShape.java	/^  protected float[] params;$/;"	f	class:PShape
parent	core/PImage.java	/^  public PApplet parent;$/;"	f	class:PImage
parent	core/PShape.java	/^  protected PShape parent;$/;"	f	class:PShape
parent	data/XML.java	/^  protected XML parent;$/;"	f	class:XML
parent	opengl/PShader.java	/^  protected PApplet parent;$/;"	f	class:PShader
parse	data/JSONArray.java	/^  static public JSONArray parse(String source) {$/;"	m	class:JSONArray
parse	data/JSONObject.java	/^  static public JSONObject parse(String source) {$/;"	m	class:JSONObject
parse	data/Table.java	/^  protected void parse(InputStream input, String options) throws IOException {$/;"	m	class:Table
parse	data/XML.java	/^  static public XML parse(String data) throws IOException, ParserConfigurationException, SAXException {$/;"	m	class:XML
parse	data/XML.java	/^  static public XML parse(String data, String options) throws IOException, ParserConfigurationException, SAXException {$/;"	m	class:XML
parseAwfulCSV	data/Table.java	/^  protected void parseAwfulCSV(BufferedReader reader,$/;"	m	class:Table
parseBasic	data/Table.java	/^  protected void parseBasic(BufferedReader reader,$/;"	m	class:Table
parseBoolean	core/PApplet.java	/^  static final public boolean parseBoolean(String what) {$/;"	m	class:PApplet
parseBoolean	core/PApplet.java	/^  static final public boolean parseBoolean(int what) {$/;"	m	class:PApplet
parseBoolean	core/PApplet.java	/^  static final public boolean[] parseBoolean(String what[]) {$/;"	m	class:PApplet
parseBoolean	core/PApplet.java	/^  static final public boolean[] parseBoolean(int what[]) {$/;"	m	class:PApplet
parseByte	core/PApplet.java	/^  static final public byte parseByte(boolean what) {$/;"	m	class:PApplet
parseByte	core/PApplet.java	/^  static final public byte parseByte(char what) {$/;"	m	class:PApplet
parseByte	core/PApplet.java	/^  static final public byte parseByte(float what) {$/;"	m	class:PApplet
parseByte	core/PApplet.java	/^  static final public byte parseByte(int what) {$/;"	m	class:PApplet
parseByte	core/PApplet.java	/^  static final public byte[] parseByte(boolean what[]) {$/;"	m	class:PApplet
parseByte	core/PApplet.java	/^  static final public byte[] parseByte(char what[]) {$/;"	m	class:PApplet
parseByte	core/PApplet.java	/^  static final public byte[] parseByte(float what[]) {$/;"	m	class:PApplet
parseByte	core/PApplet.java	/^  static final public byte[] parseByte(int what[]) {$/;"	m	class:PApplet
parseByte	core/PApplet.java	/^  static final public float[] parseByte(byte what[]) {$/;"	m	class:PApplet
parseChar	core/PApplet.java	/^  static final public char parseChar(byte what) {$/;"	m	class:PApplet
parseChar	core/PApplet.java	/^  static final public char parseChar(int what) {$/;"	m	class:PApplet
parseChar	core/PApplet.java	/^  static final public char[] parseChar(byte what[]) {$/;"	m	class:PApplet
parseChar	core/PApplet.java	/^  static final public char[] parseChar(int what[]) {$/;"	m	class:PApplet
parseChild	core/PShapeSVG.java	/^  protected PShape parseChild(XML elem) {$/;"	m	class:PShapeSVG
parseChildren	core/PShapeSVG.java	/^  protected void parseChildren(XML graphics) {$/;"	m	class:PShapeSVG
parseColors	core/PShapeSVG.java	/^  protected void parseColors(XML properties) {$/;"	m	class:PShapeSVG
parseEllipse	core/PShapeSVG.java	/^  protected void parseEllipse(boolean circle) {$/;"	m	class:PShapeSVG
parseFloat	core/PApplet.java	/^  static final public float parseFloat(String what) {$/;"	m	class:PApplet
parseFloat	core/PApplet.java	/^  static final public float parseFloat(String what, float otherwise) {$/;"	m	class:PApplet
parseFloat	core/PApplet.java	/^  static final public float parseFloat(int what) {  \/\/ also handles byte$/;"	m	class:PApplet
parseFloat	core/PApplet.java	/^  static final public float[] parseFloat(String what[]) {$/;"	m	class:PApplet
parseFloat	core/PApplet.java	/^  static final public float[] parseFloat(String what[], float missing) {$/;"	m	class:PApplet
parseFloat	core/PApplet.java	/^  static final public float[] parseFloat(int what[]) {$/;"	m	class:PApplet
parseInt	core/PApplet.java	/^  static final public int parseInt(String what) {$/;"	m	class:PApplet
parseInt	core/PApplet.java	/^  static final public int parseInt(String what, int otherwise) {$/;"	m	class:PApplet
parseInt	core/PApplet.java	/^  static final public int parseInt(boolean what) {$/;"	m	class:PApplet
parseInt	core/PApplet.java	/^  static final public int parseInt(byte what) {$/;"	m	class:PApplet
parseInt	core/PApplet.java	/^  static final public int parseInt(char what) {$/;"	m	class:PApplet
parseInt	core/PApplet.java	/^  static final public int parseInt(float what) {$/;"	m	class:PApplet
parseInt	core/PApplet.java	/^  static final public int[] parseInt(boolean what[]) {$/;"	m	class:PApplet
parseInt	core/PApplet.java	/^  static final public int[] parseInt(byte what[]) {  \/\/ note this unsigns$/;"	m	class:PApplet
parseInt	core/PApplet.java	/^  static final public int[] parseInt(char what[]) {$/;"	m	class:PApplet
parseInt	core/PApplet.java	/^  static public int[] parseInt(String what[]) {$/;"	m	class:PApplet
parseInt	core/PApplet.java	/^  static public int[] parseInt(String what[], int missing) {$/;"	m	class:PApplet
parseInt	core/PApplet.java	/^  static public int[] parseInt(float what[]) {$/;"	m	class:PApplet
parseInto	data/Table.java	/^  public void parseInto(Object enclosingObject, String fieldName) {$/;"	m	class:Table
parseJSONArray	core/PApplet.java	/^  public JSONArray parseJSONArray(String input) {$/;"	m	class:PApplet
parseJSONObject	core/PApplet.java	/^  public JSONObject parseJSONObject(String input) {$/;"	m	class:PApplet
parseLine	core/PShapeSVG.java	/^  protected void parseLine() {$/;"	m	class:PShapeSVG
parseMTL	core/PShapeOBJ.java	/^  static protected void parseMTL(PApplet parent, String path,$/;"	m	class:PShapeOBJ
parseOBJ	core/PShapeOBJ.java	/^  static protected void parseOBJ(PApplet parent, String path,$/;"	m	class:PShapeOBJ
parsePath	core/PShapeSVG.java	/^  protected void parsePath() {$/;"	m	class:PShapeSVG
parsePathCode	core/PShapeSVG.java	/^  private void parsePathCode(int what) {$/;"	m	class:PShapeSVG	file:
parsePathCurveto	core/PShapeSVG.java	/^  private void parsePathCurveto(float x1, float y1,$/;"	m	class:PShapeSVG	file:
parsePathLineto	core/PShapeSVG.java	/^  private void parsePathLineto(float px, float py) {$/;"	m	class:PShapeSVG	file:
parsePathMoveto	core/PShapeSVG.java	/^  private void parsePathMoveto(float px, float py) {$/;"	m	class:PShapeSVG	file:
parsePathQuadto	core/PShapeSVG.java	/^  private void parsePathQuadto(float cx, float cy,$/;"	m	class:PShapeSVG	file:
parsePathVertex	core/PShapeSVG.java	/^  private void parsePathVertex(float x, float y) {$/;"	m	class:PShapeSVG	file:
parsePoly	core/PShapeSVG.java	/^  protected void parsePoly(boolean close) {$/;"	m	class:PShapeSVG
parseRGB	core/PShapeSVG.java	/^  static protected int parseRGB(String what) {$/;"	m	class:PShapeSVG
parseRect	core/PShapeSVG.java	/^  protected void parseRect() {$/;"	m	class:PShapeSVG
parseSingleTransform	core/PShapeSVG.java	/^  static protected PMatrix2D parseSingleTransform(String matrixStr) {$/;"	m	class:PShapeSVG
parseStyleAttributes	core/PShapeSVG.java	/^  static protected HashMap<String, String> parseStyleAttributes(String style) {$/;"	m	class:PShapeSVG
parseTransform	core/PShapeSVG.java	/^  static protected PMatrix2D parseTransform(String matrixStr) {$/;"	m	class:PShapeSVG
parseUnitSize	core/PShapeSVG.java	/^  static protected float parseUnitSize(String text) {$/;"	m	class:PShapeSVG
parseXML	core/PApplet.java	/^  public XML parseXML(String xmlString) {$/;"	m	class:PApplet
parseXML	core/PApplet.java	/^  public XML parseXML(String xmlString, String options) {$/;"	m	class:PApplet
partition	data/Sort.java	/^  protected int partition(int left, int right) {$/;"	m	class:Sort
partition	opengl/PGraphicsOpenGL.java	/^  private int partition(int leftIndex, int rightIndex, int pivotIndex) {$/;"	m	class:PGraphicsOpenGL	file:
path	core/PGraphics.java	/^  protected String path;$/;"	f	class:PGraphics
path	opengl/LinePath.java	/^    LinePath path;$/;"	f	class:LinePath.PathIterator
pathColors	opengl/PGraphicsOpenGL.java	/^    int[] pathColors;$/;"	f	class:PGraphicsOpenGL.Tessellator
pathTo	opengl/LinePath.java	/^  private static void pathTo(PathIterator pi, LineStroker lsink) {$/;"	m	class:LinePath	file:
pathVertexCount	opengl/PGraphicsOpenGL.java	/^    int pathVertexCount;$/;"	f	class:PGraphicsOpenGL.Tessellator
pathVertices	opengl/PGraphicsOpenGL.java	/^    float[] pathVertices;$/;"	f	class:PGraphicsOpenGL.Tessellator
pathWeights	opengl/PGraphicsOpenGL.java	/^    float[] pathWeights;$/;"	f	class:PGraphicsOpenGL.Tessellator
pause	core/PApplet.java	/^  public void pause() { }$/;"	m	class:PApplet
pauseObject	core/PApplet.java	/^  Object pauseObject = new Object();$/;"	f	class:PApplet
paused	core/PApplet.java	/^  public volatile boolean paused;$/;"	f	class:PApplet
pcolor0	opengl/LineStroker.java	/^  private int scolor0, pcolor0, color0;$/;"	f	class:LineStroker	file:
peg	core/PImage.java	/^  private static int peg(int n) {$/;"	m	class:PImage	file:
penIncluded	opengl/LineStroker.java	/^  private boolean[] penIncluded;$/;"	f	class:LineStroker	file:
pen_dx	opengl/LineStroker.java	/^  private int[] pen_dx;$/;"	f	class:LineStroker	file:
pen_dy	opengl/LineStroker.java	/^  private int[] pen_dy;$/;"	f	class:LineStroker	file:
perlin	core/PApplet.java	/^  float[] perlin;$/;"	f	class:PApplet
perlinRandom	core/PApplet.java	/^  Random perlinRandom;$/;"	f	class:PApplet
perlin_PI	core/PApplet.java	/^  int perlin_TWOPI, perlin_PI;$/;"	f	class:PApplet
perlin_TWOPI	core/PApplet.java	/^  int perlin_TWOPI, perlin_PI;$/;"	f	class:PApplet
perlin_amp_falloff	core/PApplet.java	/^  float perlin_amp_falloff = 0.5f; \/\/ 50% reduction\/octave$/;"	f	class:PApplet
perlin_cosTable	core/PApplet.java	/^  float[] perlin_cosTable;$/;"	f	class:PApplet
perlin_octaves	core/PApplet.java	/^  int perlin_octaves = 4; \/\/ default to medium smooth$/;"	f	class:PApplet
perspective	core/PApplet.java	/^  public void perspective() {$/;"	m	class:PApplet
perspective	core/PApplet.java	/^  public void perspective(float fovy, float aspect, float zNear, float zFar) {$/;"	m	class:PApplet
perspective	core/PGraphics.java	/^  public void perspective() {$/;"	m	class:PGraphics
perspective	core/PGraphics.java	/^  public void perspective(float fovy, float aspect, float zNear, float zFar) {$/;"	m	class:PGraphics
perspective	opengl/PGraphics2D.java	/^  public void perspective() {$/;"	m	class:PGraphics2D
perspective	opengl/PGraphics2D.java	/^  public void perspective(float fov, float aspect, float zNear, float zFar) {$/;"	m	class:PGraphics2D
perspective	opengl/PGraphicsOpenGL.java	/^  public void perspective() {$/;"	m	class:PGraphicsOpenGL
perspective	opengl/PGraphicsOpenGL.java	/^  public void perspective(float fov, float aspect, float zNear, float zFar) {$/;"	m	class:PGraphicsOpenGL
perspectiveLoc	opengl/PShader.java	/^  protected int perspectiveLoc;$/;"	f	class:PShader
pg	opengl/PGL.java	/^  protected PGraphicsOpenGL pg;$/;"	f	class:PGL
pg	opengl/PGraphicsOpenGL.java	/^    PGraphicsOpenGL pg;$/;"	f	class:PGraphicsOpenGL.InGeometry
pg	opengl/PGraphicsOpenGL.java	/^    PGraphicsOpenGL pg;$/;"	f	class:PGraphicsOpenGL.TessGeometry
pg	opengl/PGraphicsOpenGL.java	/^    protected PGraphicsOpenGL pg;$/;"	f	class:PGraphicsOpenGL.Tessellator
pg	opengl/PShader.java	/^  protected PGraphicsOpenGL pg;$/;"	f	class:PShader
pg	opengl/PShapeOpenGL.java	/^  protected PGraphicsOpenGL pg;$/;"	f	class:PShapeOpenGL
pgCurrent	opengl/PGraphicsOpenGL.java	/^  protected static PGraphicsOpenGL pgCurrent = null;$/;"	f	class:PGraphicsOpenGL
pgPrimary	opengl/PGraphicsOpenGL.java	/^  protected static PGraphicsOpenGL pgPrimary = null;$/;"	f	class:PGraphicsOpenGL
pgl	opengl/FontTexture.java	/^  protected PGL pgl;$/;"	f	class:FontTexture
pgl	opengl/FrameBuffer.java	/^  protected PGL pgl;$/;"	f	class:FrameBuffer
pgl	opengl/PGraphicsOpenGL.java	/^  public static PGL pgl;$/;"	f	class:PGraphicsOpenGL
pgl	opengl/PShader.java	/^  protected PGL pgl;$/;"	f	class:PShader
pgl	opengl/PShapeOpenGL.java	/^  protected PGL pgl;$/;"	f	class:PShapeOpenGL
pgl	opengl/Texture.java	/^  protected PGL pgl;                \/\/ The interface between Processing and OpenGL.$/;"	f	class:Texture
pixBufUpdateCount	opengl/Texture.java	/^  protected int pixBufUpdateCount = 0;$/;"	f	class:Texture
pixOpChangedFB	opengl/PGraphicsOpenGL.java	/^  protected boolean pixOpChangedFB;$/;"	f	class:PGraphicsOpenGL
pixelBuffer	opengl/FrameBuffer.java	/^  protected IntBuffer pixelBuffer;$/;"	f	class:FrameBuffer
pixelBuffer	opengl/PGraphicsOpenGL.java	/^  protected IntBuffer pixelBuffer;$/;"	f	class:PGraphicsOpenGL
pixelBuffer	opengl/Texture.java	/^  protected IntBuffer pixelBuffer = null;$/;"	f	class:Texture
pixelCount	core/PGraphics.java	/^  public int pixelCount;$/;"	f	class:PGraphics
pixelStorei	opengl/PGL.java	/^  public abstract void pixelStorei(int pname, int param);$/;"	m	class:PGL
pixelStorei	opengl/PJOGL.java	/^  public void pixelStorei(int pname, int param) {$/;"	m	class:PJOGL
pixels	core/PApplet.java	/^  public int pixels[];$/;"	f	class:PApplet
pixels	core/PImage.java	/^  public int[] pixels;$/;"	f	class:PImage
pixels	opengl/FontTexture.java	/^    int[] pixels;$/;"	f	class:FontTexture.TextureInfo
pixelsOp	opengl/PGraphicsOpenGL.java	/^  protected int pixelsOp = OP_NONE;$/;"	f	class:PGraphicsOpenGL
platform	core/PApplet.java	/^  static public int platform;$/;"	f	class:PApplet
platformNames	core/PConstants.java	/^  static final String[] platformNames = {$/;"	f	interface:PConstants
pmouseX	core/PApplet.java	/^  public int pmouseX;$/;"	f	class:PApplet
pmouseY	core/PApplet.java	/^  public int pmouseY;$/;"	f	class:PApplet
point	core/PApplet.java	/^  public void point(float x, float y) {$/;"	m	class:PApplet
point	core/PApplet.java	/^  public void point(float x, float y, float z) {$/;"	m	class:PApplet
point	core/PGraphics.java	/^  public void point(float x, float y) {$/;"	m	class:PGraphics
point	core/PGraphics.java	/^  public void point(float x, float y, float z) {$/;"	m	class:PGraphics
point	core/PGraphicsJava2D.java	/^  public void point(float x, float y) {$/;"	m	class:PGraphicsJava2D
point	opengl/PGraphicsOpenGL.java	/^  public void point(float x, float y) {$/;"	m	class:PGraphicsOpenGL
point	opengl/PGraphicsOpenGL.java	/^  public void point(float x, float y, float z) {$/;"	m	class:PGraphicsOpenGL
pointBuffersContext	opengl/PGraphicsOpenGL.java	/^  protected int pointBuffersContext;$/;"	f	class:PGraphicsOpenGL
pointBuffersContextIsOutdated	opengl/PGraphicsOpenGL.java	/^  protected boolean pointBuffersContextIsOutdated() {$/;"	m	class:PGraphicsOpenGL
pointBuffersCreated	opengl/PGraphicsOpenGL.java	/^  protected boolean pointBuffersCreated = false;$/;"	f	class:PGraphicsOpenGL
pointColors	opengl/LinePath.java	/^  protected int[] pointColors;$/;"	f	class:LinePath
pointColors	opengl/PGraphicsOpenGL.java	/^    int[] pointColors;$/;"	f	class:PGraphicsOpenGL.TessGeometry
pointColorsBuffer	opengl/PGraphicsOpenGL.java	/^    IntBuffer pointColorsBuffer;$/;"	f	class:PGraphicsOpenGL.TessGeometry
pointIdx	opengl/LinePath.java	/^    int pointIdx;$/;"	f	class:LinePath.PathIterator
pointImpl	opengl/PGraphicsOpenGL.java	/^  protected void pointImpl(float x, float y, float z) {$/;"	m	class:PGraphicsOpenGL
pointIndCopyOffset	opengl/PShapeOpenGL.java	/^  protected int pointIndCopyOffset;$/;"	f	class:PShapeOpenGL
pointIndexCache	opengl/PGraphicsOpenGL.java	/^    IndexCache pointIndexCache = new IndexCache();$/;"	f	class:PGraphicsOpenGL.TessGeometry
pointIndexCheck	opengl/PGraphicsOpenGL.java	/^    void pointIndexCheck(int count) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
pointIndexCount	opengl/PGraphicsOpenGL.java	/^    int pointIndexCount;$/;"	f	class:PGraphicsOpenGL.TessGeometry
pointIndexOffset	opengl/PShapeOpenGL.java	/^  protected int pointIndexOffset;$/;"	f	class:PShapeOpenGL
pointIndices	opengl/PGraphicsOpenGL.java	/^    short[] pointIndices;$/;"	f	class:PGraphicsOpenGL.TessGeometry
pointIndicesBuffer	opengl/PGraphicsOpenGL.java	/^    ShortBuffer pointIndicesBuffer;$/;"	f	class:PGraphicsOpenGL.TessGeometry
pointLight	core/PApplet.java	/^  public void pointLight(float v1, float v2, float v3,$/;"	m	class:PApplet
pointLight	core/PGraphics.java	/^  public void pointLight(float v1, float v2, float v3,$/;"	m	class:PGraphics
pointLight	opengl/PGraphics2D.java	/^  public void pointLight(float red, float green, float blue,$/;"	m	class:PGraphics2D
pointLight	opengl/PGraphicsOpenGL.java	/^  public void pointLight(float r, float g, float b,$/;"	m	class:PGraphicsOpenGL
pointOffsets	opengl/PGraphicsOpenGL.java	/^    float[] pointOffsets;$/;"	f	class:PGraphicsOpenGL.TessGeometry
pointOffsetsBuffer	opengl/PGraphicsOpenGL.java	/^    FloatBuffer pointOffsetsBuffer;$/;"	f	class:PGraphicsOpenGL.TessGeometry
pointShader	opengl/PGraphicsOpenGL.java	/^  protected PShader pointShader;$/;"	f	class:PGraphicsOpenGL
pointShaderAttrRegexp	opengl/PShader.java	/^  static protected String pointShaderAttrRegexp =$/;"	f	class:PShader
pointShaderDefRegexp	opengl/PShader.java	/^  static protected String pointShaderDefRegexp =$/;"	f	class:PShader
pointTypes	opengl/LinePath.java	/^  protected byte[] pointTypes;$/;"	f	class:LinePath
pointVertCopyOffset	opengl/PShapeOpenGL.java	/^  protected int pointVertCopyOffset;$/;"	f	class:PShapeOpenGL
pointVertexAbs	opengl/PShapeOpenGL.java	/^  protected int pointVertexAbs;$/;"	f	class:PShapeOpenGL
pointVertexCheck	opengl/PGraphicsOpenGL.java	/^    void pointVertexCheck(int count) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
pointVertexCount	opengl/PGraphicsOpenGL.java	/^    int pointVertexCount;$/;"	f	class:PGraphicsOpenGL.TessGeometry
pointVertexOffset	opengl/PShapeOpenGL.java	/^  protected int pointVertexOffset;$/;"	f	class:PShapeOpenGL
pointVertexRel	opengl/PShapeOpenGL.java	/^  protected int pointVertexRel;$/;"	f	class:PShapeOpenGL
pointVertices	opengl/PGraphicsOpenGL.java	/^    float[] pointVertices;$/;"	f	class:PGraphicsOpenGL.TessGeometry
pointVerticesBuffer	opengl/PGraphicsOpenGL.java	/^    FloatBuffer pointVerticesBuffer;$/;"	f	class:PGraphicsOpenGL.TessGeometry
polyAmbient	opengl/PGraphicsOpenGL.java	/^    int[] polyAmbient;$/;"	f	class:PGraphicsOpenGL.TessGeometry
polyAmbientBuffer	opengl/PGraphicsOpenGL.java	/^    IntBuffer polyAmbientBuffer;$/;"	f	class:PGraphicsOpenGL.TessGeometry
polyBuffersContext	opengl/PGraphicsOpenGL.java	/^  protected int polyBuffersContext;$/;"	f	class:PGraphicsOpenGL
polyBuffersContextIsOutdated	opengl/PGraphicsOpenGL.java	/^  protected boolean polyBuffersContextIsOutdated() {$/;"	m	class:PGraphicsOpenGL
polyBuffersCreated	opengl/PGraphicsOpenGL.java	/^  protected boolean polyBuffersCreated = false;$/;"	f	class:PGraphicsOpenGL
polyColors	opengl/PGraphicsOpenGL.java	/^    int[] polyColors;$/;"	f	class:PGraphicsOpenGL.TessGeometry
polyColorsBuffer	opengl/PGraphicsOpenGL.java	/^    IntBuffer polyColorsBuffer;$/;"	f	class:PGraphicsOpenGL.TessGeometry
polyEmissive	opengl/PGraphicsOpenGL.java	/^    int[] polyEmissive;$/;"	f	class:PGraphicsOpenGL.TessGeometry
polyEmissiveBuffer	opengl/PGraphicsOpenGL.java	/^    IntBuffer polyEmissiveBuffer;$/;"	f	class:PGraphicsOpenGL.TessGeometry
polyIndCopyOffset	opengl/PShapeOpenGL.java	/^  protected int polyIndCopyOffset;$/;"	f	class:PShapeOpenGL
polyIndexCache	opengl/PGraphicsOpenGL.java	/^    IndexCache polyIndexCache = new IndexCache();$/;"	f	class:PGraphicsOpenGL.TessGeometry
polyIndexCheck	opengl/PGraphicsOpenGL.java	/^    void polyIndexCheck() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
polyIndexCheck	opengl/PGraphicsOpenGL.java	/^    void polyIndexCheck(int count) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
polyIndexCount	opengl/PGraphicsOpenGL.java	/^    int polyIndexCount;$/;"	f	class:PGraphicsOpenGL.TessGeometry
polyIndexOffset	opengl/PShapeOpenGL.java	/^  protected int polyIndexOffset;$/;"	f	class:PShapeOpenGL
polyIndices	opengl/PGraphicsOpenGL.java	/^    short[] polyIndices;$/;"	f	class:PGraphicsOpenGL.TessGeometry
polyIndicesBuffer	opengl/PGraphicsOpenGL.java	/^    ShortBuffer polyIndicesBuffer;$/;"	f	class:PGraphicsOpenGL.TessGeometry
polyNormals	opengl/PGraphicsOpenGL.java	/^    float[] polyNormals;$/;"	f	class:PGraphicsOpenGL.TessGeometry
polyNormalsBuffer	opengl/PGraphicsOpenGL.java	/^    FloatBuffer polyNormalsBuffer;$/;"	f	class:PGraphicsOpenGL.TessGeometry
polyShader	opengl/PGraphicsOpenGL.java	/^  protected PShader polyShader;$/;"	f	class:PGraphicsOpenGL
polyShaderDefRegexp	opengl/PShader.java	/^  static protected String polyShaderDefRegexp =$/;"	f	class:PShader
polyShininess	opengl/PGraphicsOpenGL.java	/^    float[] polyShininess;$/;"	f	class:PGraphicsOpenGL.TessGeometry
polyShininessBuffer	opengl/PGraphicsOpenGL.java	/^    FloatBuffer polyShininessBuffer;$/;"	f	class:PGraphicsOpenGL.TessGeometry
polySpecular	opengl/PGraphicsOpenGL.java	/^    int[] polySpecular;$/;"	f	class:PGraphicsOpenGL.TessGeometry
polySpecularBuffer	opengl/PGraphicsOpenGL.java	/^    IntBuffer polySpecularBuffer;$/;"	f	class:PGraphicsOpenGL.TessGeometry
polyTexCoords	opengl/PGraphicsOpenGL.java	/^    float[] polyTexCoords;$/;"	f	class:PGraphicsOpenGL.TessGeometry
polyTexCoordsBuffer	opengl/PGraphicsOpenGL.java	/^    FloatBuffer polyTexCoordsBuffer;$/;"	f	class:PGraphicsOpenGL.TessGeometry
polyVertCopyOffset	opengl/PShapeOpenGL.java	/^  protected int polyVertCopyOffset;$/;"	f	class:PShapeOpenGL
polyVertexAbs	opengl/PShapeOpenGL.java	/^  protected int polyVertexAbs;$/;"	f	class:PShapeOpenGL
polyVertexCheck	opengl/PGraphicsOpenGL.java	/^    void polyVertexCheck() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
polyVertexCheck	opengl/PGraphicsOpenGL.java	/^    void polyVertexCheck(int count) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
polyVertexCount	opengl/PGraphicsOpenGL.java	/^    int polyVertexCount;$/;"	f	class:PGraphicsOpenGL.TessGeometry
polyVertexOffset	opengl/PShapeOpenGL.java	/^  protected int polyVertexOffset;$/;"	f	class:PShapeOpenGL
polyVertexRel	opengl/PShapeOpenGL.java	/^  protected int polyVertexRel;$/;"	f	class:PShapeOpenGL
polyVertices	opengl/PGraphicsOpenGL.java	/^    float[] polyVertices;$/;"	f	class:PGraphicsOpenGL.TessGeometry
polyVerticesBuffer	opengl/PGraphicsOpenGL.java	/^    FloatBuffer polyVerticesBuffer;$/;"	f	class:PGraphicsOpenGL.TessGeometry
polygonOffset	opengl/PGL.java	/^  public abstract void polygonOffset(float factor, float units);$/;"	m	class:PGL
polygonOffset	opengl/PJOGL.java	/^  public void polygonOffset(float factor, float units) {$/;"	m	class:PJOGL
popFramebuffer	opengl/PGraphicsOpenGL.java	/^  protected static void popFramebuffer() {$/;"	m	class:PGraphicsOpenGL
popMatrix	core/PApplet.java	/^  public void popMatrix() {$/;"	m	class:PApplet
popMatrix	core/PGraphics.java	/^  public void popMatrix() {$/;"	m	class:PGraphics
popMatrix	core/PGraphicsJava2D.java	/^  public void popMatrix() {$/;"	m	class:PGraphicsJava2D
popMatrix	opengl/PGraphicsOpenGL.java	/^  public void popMatrix() {$/;"	m	class:PGraphicsOpenGL
popProjection	opengl/PGraphicsOpenGL.java	/^  public void popProjection() {$/;"	m	class:PGraphicsOpenGL
popStyle	core/PApplet.java	/^  public void popStyle() {$/;"	m	class:PApplet
popStyle	core/PGraphics.java	/^  public void popStyle() {$/;"	m	class:PGraphics
popStyle	opengl/PGraphicsOpenGL.java	/^  public void popStyle() {$/;"	m	class:PGraphicsOpenGL
popTransform	opengl/PShapeOpenGL.java	/^  protected PMatrix popTransform() {$/;"	m	class:PShapeOpenGL
populateMap	data/JSONObject.java	/^  private void populateMap(Object bean) {$/;"	m	class:JSONObject	file:
post	core/PShape.java	/^  protected void post(PGraphics g) {$/;"	m	class:PShape
post	opengl/PShapeOpenGL.java	/^  protected void post(PGraphics g) {$/;"	m	class:PShapeOpenGL
postEvent	core/PApplet.java	/^  public void postEvent(processing.event.Event pe) {$/;"	m	class:PApplet
pow	core/PApplet.java	/^  static public final float pow(float n, float e) {$/;"	m	class:PApplet
pre	core/PShape.java	/^  protected void pre(PGraphics g) {$/;"	m	class:PShape
pre	opengl/PShapeOpenGL.java	/^  protected void pre(PGraphics g) {$/;"	m	class:PShapeOpenGL
preApply	core/PMatrix.java	/^  public void preApply(PMatrix left);$/;"	m	interface:PMatrix
preApply	core/PMatrix.java	/^  public void preApply(PMatrix2D left);$/;"	m	interface:PMatrix
preApply	core/PMatrix.java	/^  public void preApply(PMatrix3D left);$/;"	m	interface:PMatrix
preApply	core/PMatrix.java	/^  public void preApply(float n00, float n01, float n02, $/;"	m	interface:PMatrix
preApply	core/PMatrix.java	/^  public void preApply(float n00, float n01, float n02, float n03,$/;"	m	interface:PMatrix
preApply	core/PMatrix2D.java	/^  public void preApply(PMatrix source) {$/;"	m	class:PMatrix2D
preApply	core/PMatrix2D.java	/^  public void preApply(PMatrix2D left) {$/;"	m	class:PMatrix2D
preApply	core/PMatrix2D.java	/^  public void preApply(PMatrix3D left) {$/;"	m	class:PMatrix2D
preApply	core/PMatrix2D.java	/^  public void preApply(float n00, float n01, float n02, float n03,$/;"	m	class:PMatrix2D
preApply	core/PMatrix2D.java	/^  public void preApply(float n00, float n01, float n02,$/;"	m	class:PMatrix2D
preApply	core/PMatrix3D.java	/^  public void preApply(PMatrix source) {$/;"	m	class:PMatrix3D
preApply	core/PMatrix3D.java	/^  public void preApply(PMatrix2D left) {$/;"	m	class:PMatrix3D
preApply	core/PMatrix3D.java	/^  public void preApply(PMatrix3D left) {$/;"	m	class:PMatrix3D
preApply	core/PMatrix3D.java	/^  public void preApply(float n00, float n01, float n02, float n03,$/;"	m	class:PMatrix3D
preApply	core/PMatrix3D.java	/^  public void preApply(float n00, float n01, float n02,$/;"	m	class:PMatrix3D
prev	opengl/LineStroker.java	/^  private int prev;$/;"	f	class:LineStroker	file:
prevCanDraw	opengl/PJOGL.java	/^  protected boolean prevCanDraw = false;$/;"	f	class:PJOGL
prevTexImage	opengl/PGraphicsOpenGL.java	/^    PImage prevTexImage;$/;"	f	class:PGraphicsOpenGL.Tessellator
previous	data/JSONTokener.java	/^  private char    previous;$/;"	f	class:JSONTokener	file:
primarySurface	core/PGraphics.java	/^  protected boolean primarySurface;$/;"	f	class:PGraphics
primitive	opengl/PGraphicsOpenGL.java	/^      int primitive;$/;"	f	class:PGraphicsOpenGL.Tessellator.TessellatorCallback
print	core/PApplet.java	/^  static public void print(Object... variables) {$/;"	m	class:PApplet
print	core/PApplet.java	/^  static public void print(String what) {$/;"	m	class:PApplet
print	core/PApplet.java	/^  static public void print(boolean what) {$/;"	m	class:PApplet
print	core/PApplet.java	/^  static public void print(byte what) {$/;"	m	class:PApplet
print	core/PApplet.java	/^  static public void print(char what) {$/;"	m	class:PApplet
print	core/PApplet.java	/^  static public void print(double what) {$/;"	m	class:PApplet
print	core/PApplet.java	/^  static public void print(float what) {$/;"	m	class:PApplet
print	core/PApplet.java	/^  static public void print(int what) {$/;"	m	class:PApplet
print	core/PApplet.java	/^  static public void print(long what) {$/;"	m	class:PApplet
print	core/PMatrix2D.java	/^  public void print() {$/;"	m	class:PMatrix2D
print	core/PMatrix3D.java	/^  public void print() {$/;"	m	class:PMatrix3D
print	core/PShapeSVG.java	/^  public void print() {$/;"	m	class:PShapeSVG
printArray	core/PApplet.java	/^  static public void printArray(Object what) {$/;"	m	class:PApplet
printCamera	core/PApplet.java	/^  public void printCamera() {$/;"	m	class:PApplet
printCamera	core/PGraphics.java	/^  public void printCamera() {$/;"	m	class:PGraphics
printCamera	opengl/PGraphicsOpenGL.java	/^  public void printCamera() {$/;"	m	class:PGraphicsOpenGL
printMatrix	core/PApplet.java	/^  public void printMatrix() {$/;"	m	class:PApplet
printMatrix	core/PGraphics.java	/^  public void printMatrix() {$/;"	m	class:PGraphics
printMatrix	core/PGraphicsJava2D.java	/^  public void printMatrix() {$/;"	m	class:PGraphicsJava2D
printMatrix	opengl/PGraphicsOpenGL.java	/^  public void printMatrix() {$/;"	m	class:PGraphicsOpenGL
printProjection	core/PApplet.java	/^  public void printProjection() {$/;"	m	class:PApplet
printProjection	core/PGraphics.java	/^  public void printProjection() {$/;"	m	class:PGraphics
printProjection	opengl/PGraphicsOpenGL.java	/^  public void printProjection() {$/;"	m	class:PGraphicsOpenGL
println	core/PApplet.java	/^  static public void println() {$/;"	m	class:PApplet
println	core/PApplet.java	/^  static public void println(Object what) {$/;"	m	class:PApplet
println	core/PApplet.java	/^  static public void println(Object... variables) {$/;"	m	class:PApplet
println	core/PApplet.java	/^  static public void println(String what) {$/;"	m	class:PApplet
println	core/PApplet.java	/^  static public void println(boolean what) {$/;"	m	class:PApplet
println	core/PApplet.java	/^  static public void println(byte what) {$/;"	m	class:PApplet
println	core/PApplet.java	/^  static public void println(char what) {$/;"	m	class:PApplet
println	core/PApplet.java	/^  static public void println(double what) {$/;"	m	class:PApplet
println	core/PApplet.java	/^  static public void println(float what) {$/;"	m	class:PApplet
println	core/PApplet.java	/^  static public void println(int what) {$/;"	m	class:PApplet
println	core/PApplet.java	/^  static public void println(long what) {$/;"	m	class:PApplet
processing.core	core/PApplet.java	/^package processing.core;$/;"	p
processing.core	core/PConstants.java	/^package processing.core;$/;"	p
processing.core	core/PFont.java	/^package processing.core;$/;"	p
processing.core	core/PGraphics.java	/^package processing.core;$/;"	p
processing.core	core/PGraphicsJava2D.java	/^package processing.core;$/;"	p
processing.core	core/PGraphicsRetina2D.java	/^package processing.core;$/;"	p
processing.core	core/PImage.java	/^package processing.core;$/;"	p
processing.core	core/PMatrix.java	/^package processing.core;$/;"	p
processing.core	core/PMatrix2D.java	/^package processing.core;$/;"	p
processing.core	core/PMatrix3D.java	/^package processing.core;$/;"	p
processing.core	core/PShape.java	/^package processing.core;$/;"	p
processing.core	core/PShapeOBJ.java	/^package processing.core;$/;"	p
processing.core	core/PShapeSVG.java	/^package processing.core;$/;"	p
processing.core	core/PStyle.java	/^package processing.core;$/;"	p
processing.core	core/PVector.java	/^package processing.core;$/;"	p
processing.data	data/FloatDict.java	/^package processing.data;$/;"	p
processing.data	data/FloatList.java	/^package processing.data;$/;"	p
processing.data	data/IntDict.java	/^package processing.data;$/;"	p
processing.data	data/IntList.java	/^package processing.data;$/;"	p
processing.data	data/JSONArray.java	/^package processing.data;$/;"	p
processing.data	data/JSONObject.java	/^package processing.data;$/;"	p
processing.data	data/JSONTokener.java	/^package processing.data;$/;"	p
processing.data	data/Sort.java	/^package processing.data;$/;"	p
processing.data	data/StringDict.java	/^package processing.data;$/;"	p
processing.data	data/StringList.java	/^package processing.data;$/;"	p
processing.data	data/Table.java	/^package processing.data;$/;"	p
processing.data	data/TableRow.java	/^package processing.data;$/;"	p
processing.data	data/XML.java	/^package processing.data;$/;"	p
processing.event	event/Event.java	/^package processing.event;$/;"	p
processing.event	event/KeyEvent.java	/^package processing.event;$/;"	p
processing.event	event/MouseEvent.java	/^package processing.event;$/;"	p
processing.event	event/TouchEvent.java	/^package processing.event;$/;"	p
processing.opengl	opengl/FontTexture.java	/^package processing.opengl;$/;"	p
processing.opengl	opengl/FrameBuffer.java	/^package processing.opengl;$/;"	p
processing.opengl	opengl/LinePath.java	/^package processing.opengl;$/;"	p
processing.opengl	opengl/LineStroker.java	/^package processing.opengl;$/;"	p
processing.opengl	opengl/PGL.java	/^package processing.opengl;$/;"	p
processing.opengl	opengl/PGraphics2D.java	/^package processing.opengl;$/;"	p
processing.opengl	opengl/PGraphics3D.java	/^package processing.opengl;$/;"	p
processing.opengl	opengl/PGraphicsOpenGL.java	/^package processing.opengl;$/;"	p
processing.opengl	opengl/PJOGL.java	/^package processing.opengl;$/;"	p
processing.opengl	opengl/PShader.java	/^package processing.opengl;$/;"	p
processing.opengl	opengl/PShapeOpenGL.java	/^package processing.opengl;$/;"	p
processing.opengl	opengl/Texture.java	/^package processing.opengl;$/;"	p
profile	opengl/PJOGL.java	/^  public static GLProfile profile;$/;"	f	class:PJOGL
projMatrix	opengl/PJOGL.java	/^  protected float[] projMatrix;$/;"	f	class:PJOGL
projection	opengl/PGraphicsOpenGL.java	/^  public PMatrix3D projection;$/;"	f	class:PGraphicsOpenGL
projectionMatLoc	opengl/PShader.java	/^  protected int projectionMatLoc;$/;"	f	class:PShader
projectionStack	opengl/PGraphicsOpenGL.java	/^  protected float[][] projectionStack = new float[MATRIX_STACK_DEPTH][16];$/;"	f	class:PGraphicsOpenGL
projectionStackDepth	opengl/PGraphicsOpenGL.java	/^  protected int projectionStackDepth;$/;"	f	class:PGraphicsOpenGL
projmodelview	opengl/PGraphicsOpenGL.java	/^  public PMatrix3D projmodelview;$/;"	f	class:PGraphicsOpenGL
psname	core/PFont.java	/^  protected String psname;$/;"	f	class:PFont
ptexture	opengl/PGraphicsOpenGL.java	/^  protected Texture ptexture;$/;"	f	class:PGraphicsOpenGL
pushFramebuffer	opengl/PGraphicsOpenGL.java	/^  protected static void pushFramebuffer() {$/;"	m	class:PGraphicsOpenGL
pushMatrix	core/PApplet.java	/^  public void pushMatrix() {$/;"	m	class:PApplet
pushMatrix	core/PGraphics.java	/^  public void pushMatrix() {$/;"	m	class:PGraphics
pushMatrix	core/PGraphicsJava2D.java	/^  public void pushMatrix() {$/;"	m	class:PGraphicsJava2D
pushMatrix	opengl/PGraphicsOpenGL.java	/^  public void pushMatrix() {$/;"	m	class:PGraphicsOpenGL
pushProjection	opengl/PGraphicsOpenGL.java	/^  public void pushProjection() {$/;"	m	class:PGraphicsOpenGL
pushStyle	core/PApplet.java	/^  public void pushStyle() {$/;"	m	class:PApplet
pushStyle	core/PGraphics.java	/^  public void pushStyle() {$/;"	m	class:PGraphics
pushTransform	opengl/PShapeOpenGL.java	/^  protected void pushTransform() {$/;"	m	class:PShapeOpenGL
put	data/JSONObject.java	/^  private JSONObject put(String key, Object value) {$/;"	m	class:JSONObject	file:
put	opengl/Texture.java	/^  public void put(Texture tex) {$/;"	m	class:Texture
put	opengl/Texture.java	/^  public void put(Texture tex, int x, int y, int w, int h) {$/;"	m	class:Texture
put	opengl/Texture.java	/^  public void put(int texTarget, int texName, int texWidth, int texHeight,$/;"	m	class:Texture
putByteArray	opengl/PGL.java	/^  protected static void putByteArray(ByteBuffer buf, byte[] arr) {$/;"	m	class:PGL
putFloatArray	opengl/PGL.java	/^  protected static void putFloatArray(FloatBuffer buf, float[] arr) {$/;"	m	class:PGL
putIntArray	opengl/PGL.java	/^  protected static void putIntArray(IntBuffer buf, int[] arr) {$/;"	m	class:PGL
putOnce	data/JSONObject.java	/^  private JSONObject putOnce(String key, Object value) {$/;"	m	class:JSONObject	file:
putShortArray	opengl/PGL.java	/^  protected static void putShortArray(ShortBuffer buf, short[] arr) {$/;"	m	class:PGL
px0	opengl/LineStroker.java	/^  private int px0, py0;$/;"	f	class:LineStroker	file:
py0	opengl/LineStroker.java	/^  private int px0, py0;$/;"	f	class:LineStroker	file:
quad	core/PApplet.java	/^  public void quad(float x1, float y1, float x2, float y2,$/;"	m	class:PApplet
quad	core/PGraphics.java	/^  public void quad(float x1, float y1, float x2, float y2,$/;"	m	class:PGraphics
quad	core/PGraphicsJava2D.java	/^  public void quad(float x1, float y1, float x2, float y2,$/;"	m	class:PGraphicsJava2D
quad	opengl/PGraphicsOpenGL.java	/^  public void quad(float x1, float y1, float x2, float y2,$/;"	m	class:PGraphicsOpenGL
quadShaderAttrRegexp	opengl/PShader.java	/^  static protected String quadShaderAttrRegexp =$/;"	f	class:PShader
quadraticVertex	core/PApplet.java	/^  public void quadraticVertex(float cx, float cy, float cz,$/;"	m	class:PApplet
quadraticVertex	core/PApplet.java	/^  public void quadraticVertex(float cx, float cy,$/;"	m	class:PApplet
quadraticVertex	core/PGraphics.java	/^  public void quadraticVertex(float cx, float cy, float cz,$/;"	m	class:PGraphics
quadraticVertex	core/PGraphics.java	/^  public void quadraticVertex(float cx, float cy,$/;"	m	class:PGraphics
quadraticVertex	core/PGraphicsJava2D.java	/^  public void quadraticVertex(float ctrlX, float ctrlY,$/;"	m	class:PGraphicsJava2D
quadraticVertex	core/PGraphicsJava2D.java	/^  public void quadraticVertex(float x2, float y2, float z2,$/;"	m	class:PGraphicsJava2D
quadraticVertex	core/PShape.java	/^  public void quadraticVertex(float cx, float cy, float cz,$/;"	m	class:PShape
quadraticVertex	core/PShape.java	/^  public void quadraticVertex(float cx, float cy,$/;"	m	class:PShape
quadraticVertex	opengl/PGraphics2D.java	/^  public void quadraticVertex(float x2, float y2, float z2,$/;"	m	class:PGraphics2D
quadraticVertex	opengl/PGraphicsOpenGL.java	/^  public void quadraticVertex(float cx, float cy, float cz,$/;"	m	class:PGraphicsOpenGL
quadraticVertex	opengl/PGraphicsOpenGL.java	/^  public void quadraticVertex(float cx, float cy,$/;"	m	class:PGraphicsOpenGL
quadraticVertex	opengl/PShapeOpenGL.java	/^  public void quadraticVertex(float cx, float cy, float cz,$/;"	m	class:PShapeOpenGL
quadraticVertex	opengl/PShapeOpenGL.java	/^  public void quadraticVertex(float cx, float cy,$/;"	m	class:PShapeOpenGL
quadraticVertexImpl	opengl/PGraphicsOpenGL.java	/^  protected void quadraticVertexImpl(float cx, float cy, float cz,$/;"	m	class:PGraphicsOpenGL
quadraticVertexImpl	opengl/PShapeOpenGL.java	/^  protected void quadraticVertexImpl(float cx, float cy, float cz,$/;"	m	class:PShapeOpenGL
quality	core/PGraphics.java	/^  public int quality;$/;"	f	class:PGraphics
qualityToSamples	opengl/PGL.java	/^  protected int qualityToSamples(int quality) {$/;"	m	class:PGL
queue	core/PApplet.java	/^    protected Event queue[] = new Event[10];$/;"	f	class:PApplet.InternalEventQueue
quickSortTris	opengl/PGraphicsOpenGL.java	/^  private void quickSortTris(int leftI, int rightI) {$/;"	m	class:PGraphicsOpenGL	file:
quote	data/JSONObject.java	/^  static protected String quote(String string) {$/;"	m	class:JSONObject
quote	data/JSONObject.java	/^  static protected Writer quote(String string, Writer w) throws IOException {$/;"	m	class:JSONObject
r	core/PImage.java	/^  private int r, g, b, a;$/;"	f	class:PImage	file:
r	core/PShapeSVG.java	/^    float cx, cy, r;$/;"	f	class:PShapeSVG.RadialGradient
radians	core/PApplet.java	/^  static public final float radians(float degrees) {$/;"	m	class:PApplet
radius	core/PShapeSVG.java	/^    float cx, cy, radius;$/;"	f	class:PShapeSVG.RadialGradientPaint
random	core/PApplet.java	/^  public final float random(float high) {$/;"	m	class:PApplet
random	core/PApplet.java	/^  public final float random(float low, float high) {$/;"	m	class:PApplet
random2D	core/PVector.java	/^  static public PVector random2D() {$/;"	m	class:PVector
random2D	core/PVector.java	/^  static public PVector random2D(PApplet parent) {$/;"	m	class:PVector
random2D	core/PVector.java	/^  static public PVector random2D(PVector target) {$/;"	m	class:PVector
random2D	core/PVector.java	/^  static public PVector random2D(PVector target, PApplet parent) {$/;"	m	class:PVector
random3D	core/PVector.java	/^  static public PVector random3D() {$/;"	m	class:PVector
random3D	core/PVector.java	/^  static public PVector random3D(PApplet parent) {$/;"	m	class:PVector
random3D	core/PVector.java	/^  static public PVector random3D(PVector target) {$/;"	m	class:PVector
random3D	core/PVector.java	/^  static public PVector random3D(PVector target, PApplet parent) {$/;"	m	class:PVector
randomGaussian	core/PApplet.java	/^  public final float randomGaussian() {$/;"	m	class:PApplet
randomSeed	core/PApplet.java	/^  public final void randomSeed(long seed) {$/;"	m	class:PApplet
raw	core/PGraphics.java	/^  protected PGraphics raw;$/;"	f	class:PGraphics
rawIndices	opengl/PGraphicsOpenGL.java	/^    int[] rawIndices;$/;"	f	class:PGraphicsOpenGL.Tessellator
rawLines	opengl/PGraphicsOpenGL.java	/^  void rawLines() {$/;"	m	class:PGraphicsOpenGL
rawLines	opengl/PShapeOpenGL.java	/^  protected void rawLines(PGraphicsOpenGL g) {$/;"	m	class:PShapeOpenGL
rawPoints	opengl/PGraphicsOpenGL.java	/^  void rawPoints() {$/;"	m	class:PGraphicsOpenGL
rawPoints	opengl/PShapeOpenGL.java	/^  protected void rawPoints(PGraphicsOpenGL g) {$/;"	m	class:PShapeOpenGL
rawPolys	opengl/PGraphicsOpenGL.java	/^  void rawPolys() {$/;"	m	class:PGraphicsOpenGL
rawPolys	opengl/PShapeOpenGL.java	/^  protected void rawPolys(PGraphicsOpenGL g, PImage textureImage) {$/;"	m	class:PShapeOpenGL
rawSize	opengl/PGraphicsOpenGL.java	/^    int rawSize;$/;"	f	class:PGraphicsOpenGL.Tessellator
read	data/Table.java	/^    void read(DataInputStream input) throws IOException {$/;"	m	class:Table.HashMapBlows
readBitmap	core/PFont.java	/^    protected void readBitmap(DataInputStream is) throws IOException {$/;"	m	class:PFont.Glyph
readBuffer	opengl/PGL.java	/^  public abstract void readBuffer(int buf);$/;"	m	class:PGL
readBuffer	opengl/PJOGL.java	/^  public void readBuffer(int buf) {$/;"	m	class:PJOGL
readFramebuffer	opengl/PGraphicsOpenGL.java	/^  static protected FrameBuffer readFramebuffer;$/;"	f	class:PGraphicsOpenGL
readHeader	core/PFont.java	/^    protected void readHeader(DataInputStream is) throws IOException {$/;"	m	class:PFont.Glyph
readPixels	opengl/FrameBuffer.java	/^  public void readPixels() {$/;"	m	class:FrameBuffer
readPixels	opengl/PGL.java	/^  public void readPixels(int x, int y, int width, int height, int format, int type, Buffer buffer){$/;"	m	class:PGL
readPixels	opengl/PGraphicsOpenGL.java	/^  protected void readPixels() {$/;"	m	class:PGraphicsOpenGL
readPixelsImpl	opengl/PGL.java	/^  protected abstract void readPixelsImpl(int x, int y, int width, int height, int format, int type, Buffer buffer);$/;"	m	class:PGL
readPixelsImpl	opengl/PJOGL.java	/^  protected void readPixelsImpl(int x, int y, int width, int height, int format, int type, Buffer buffer) {$/;"	m	class:PJOGL
reader	data/JSONTokener.java	/^  private Reader  reader;$/;"	f	class:JSONTokener	file:
reapplySettings	core/PGraphics.java	/^  protected boolean reapplySettings;$/;"	f	class:PGraphics
reapplySettings	core/PGraphics.java	/^  protected void reapplySettings() {$/;"	m	class:PGraphics
recorder	core/PApplet.java	/^  public PGraphics recorder;$/;"	f	class:PApplet
rect	core/PApplet.java	/^  public void rect(float a, float b, float c, float d) {$/;"	m	class:PApplet
rect	core/PApplet.java	/^  public void rect(float a, float b, float c, float d, float r) {$/;"	m	class:PApplet
rect	core/PApplet.java	/^  public void rect(float a, float b, float c, float d,$/;"	m	class:PApplet
rect	core/PGraphics.java	/^  public void rect(float a, float b, float c, float d) {$/;"	m	class:PGraphics
rect	core/PGraphics.java	/^  public void rect(float a, float b, float c, float d, float r) {$/;"	m	class:PGraphics
rect	core/PGraphics.java	/^  public void rect(float a, float b, float c, float d,$/;"	m	class:PGraphics
rect	core/PGraphicsJava2D.java	/^  Rectangle2D.Float rect = new Rectangle2D.Float();$/;"	f	class:PGraphicsJava2D
rectImpl	core/PGraphics.java	/^  protected void rectImpl(float x1, float y1, float x2, float y2) {$/;"	m	class:PGraphics
rectImpl	core/PGraphics.java	/^  protected void rectImpl(float x1, float y1, float x2, float y2,$/;"	m	class:PGraphics
rectImpl	core/PGraphicsJava2D.java	/^  protected void rectImpl(float x1, float y1, float x2, float y2) {$/;"	m	class:PGraphicsJava2D
rectImpl	opengl/PGraphicsOpenGL.java	/^  protected void rectImpl(float x1, float y1, float x2, float y2,$/;"	m	class:PGraphicsOpenGL
rectMode	core/PApplet.java	/^  public void rectMode(int mode) {$/;"	m	class:PApplet
rectMode	core/PGraphics.java	/^  public int rectMode;$/;"	f	class:PGraphics
rectMode	core/PGraphics.java	/^  public void rectMode(int mode) {$/;"	m	class:PGraphics
rectMode	core/PShape.java	/^  protected int rectMode;$/;"	f	class:PShape
rectMode	core/PStyle.java	/^  public int rectMode;$/;"	f	class:PStyle
red	core/PApplet.java	/^  public final float red(int rgb) {$/;"	m	class:PApplet
red	core/PGraphics.java	/^  public final float red(int rgb) {$/;"	m	class:PGraphics
redraw	core/PApplet.java	/^  protected boolean redraw;$/;"	f	class:PApplet
redraw	core/PApplet.java	/^  synchronized public void redraw() {$/;"	m	class:PApplet
redraw	core/PGraphicsJava2D.java	/^  private void redraw() {$/;"	m	class:PGraphicsJava2D	file:
registerDispose	core/PApplet.java	/^  public void registerDispose(Object o) {$/;"	m	class:PApplet
registerDraw	core/PApplet.java	/^  public void registerDraw(Object o) {$/;"	m	class:PApplet
registerKeyEvent	core/PApplet.java	/^  public void registerKeyEvent(Object o) {$/;"	m	class:PApplet
registerListeners	opengl/PGL.java	/^  protected abstract void registerListeners();$/;"	m	class:PGL
registerListeners	opengl/PJOGL.java	/^  protected void registerListeners() {$/;"	m	class:PJOGL
registerMap	core/PApplet.java	/^  HashMap<String, RegisteredMethods> registerMap =$/;"	f	class:PApplet
registerMethod	core/PApplet.java	/^  public void registerMethod(String methodName, Object target) {$/;"	m	class:PApplet
registerMouseEvent	core/PApplet.java	/^  public void registerMouseEvent(Object o) {$/;"	m	class:PApplet
registerNoArgs	core/PApplet.java	/^  private void registerNoArgs(String name, Object o) {$/;"	m	class:PApplet	file:
registerPost	core/PApplet.java	/^  public void registerPost(Object o) {$/;"	m	class:PApplet
registerPre	core/PApplet.java	/^  public void registerPre(Object o) {$/;"	m	class:PApplet
registerSize	core/PApplet.java	/^  public void registerSize(Object o) {$/;"	m	class:PApplet
registerWithArgs	core/PApplet.java	/^  private void registerWithArgs(String name, Object o, Class<?> cargs[]) {$/;"	m	class:PApplet	file:
reinitSurface	opengl/PGL.java	/^  protected abstract void reinitSurface();$/;"	m	class:PGL
reinitSurface	opengl/PJOGL.java	/^  protected void reinitSurface() {$/;"	m	class:PJOGL
releasePixelBuffer	opengl/Texture.java	/^  protected void releasePixelBuffer() {$/;"	m	class:Texture
releaseRGBAPixels	opengl/Texture.java	/^  protected void releaseRGBAPixels() {$/;"	m	class:Texture
releaseShaderCompiler	opengl/PGL.java	/^  public abstract void releaseShaderCompiler();$/;"	m	class:PGL
releaseShaderCompiler	opengl/PJOGL.java	/^  public void releaseShaderCompiler() {$/;"	m	class:PJOGL
remove	core/PApplet.java	/^    public void remove(Object object) {$/;"	m	class:PApplet.RegisteredMethods
remove	core/PApplet.java	/^    synchronized Event remove() {$/;"	m	class:PApplet.InternalEventQueue
remove	data/FloatDict.java	/^  public int remove(String key) {$/;"	m	class:FloatDict
remove	data/FloatList.java	/^  public float remove(int index) {$/;"	m	class:FloatList
remove	data/IntDict.java	/^  public int remove(String key) {$/;"	m	class:IntDict
remove	data/IntList.java	/^  public int remove(int index) {$/;"	m	class:IntList
remove	data/JSONArray.java	/^  public Object remove(int index) {$/;"	m	class:JSONArray
remove	data/JSONObject.java	/^  public Object remove(String key) {$/;"	m	class:JSONObject
remove	data/StringDict.java	/^  public int remove(String key) {$/;"	m	class:StringDict
remove	data/StringList.java	/^  public String remove(int index) {$/;"	m	class:StringList
remove	data/Table.java	/^    public void remove() {$/;"	m	class:Table.RowIndexIterator
remove	data/Table.java	/^    public void remove() {$/;"	m	class:Table.RowIterator
removeCache	core/PApplet.java	/^  public void removeCache(PImage image) {$/;"	m	class:PApplet
removeCache	core/PGraphics.java	/^  public void removeCache(PImage image) {$/;"	m	class:PGraphics
removeChild	core/PShape.java	/^  public void removeChild(int idx) {$/;"	m	class:PShape
removeChild	data/XML.java	/^  public void removeChild(XML kid) {$/;"	m	class:XML
removeChild	opengl/PShapeOpenGL.java	/^  public void removeChild(int idx) {$/;"	m	class:PShapeOpenGL
removeColumn	data/Table.java	/^  public void removeColumn(String columnName) {$/;"	m	class:Table
removeColumn	data/Table.java	/^  public void removeColumn(int column) {$/;"	m	class:Table
removeFontTexture	opengl/PGraphicsOpenGL.java	/^  protected void removeFontTexture(PFont font) {$/;"	m	class:PGraphicsOpenGL
removeFrameBufferObject	opengl/PGraphicsOpenGL.java	/^  protected static void removeFrameBufferObject(int id, int context) {$/;"	m	class:PGraphicsOpenGL
removeGLSLFragShaderObject	opengl/PGraphicsOpenGL.java	/^  protected static void removeGLSLFragShaderObject(int id, int context) {$/;"	m	class:PGraphicsOpenGL
removeGLSLProgramObject	opengl/PGraphicsOpenGL.java	/^  protected static void removeGLSLProgramObject(int id, int context) {$/;"	m	class:PGraphicsOpenGL
removeGLSLVertShaderObject	opengl/PGraphicsOpenGL.java	/^  protected static void removeGLSLVertShaderObject(int id, int context) {$/;"	m	class:PGraphicsOpenGL
removeIndex	data/FloatDict.java	/^  public String removeIndex(int index) {$/;"	m	class:FloatDict
removeIndex	data/IntDict.java	/^  public String removeIndex(int index) {$/;"	m	class:IntDict
removeIndex	data/StringDict.java	/^  public String removeIndex(int index) {$/;"	m	class:StringDict
removeListeners	core/PApplet.java	/^  public void removeListeners(Component comp) {$/;"	m	class:PApplet
removeRenderBufferObject	opengl/PGraphicsOpenGL.java	/^  protected static void removeRenderBufferObject(int id, int context) {$/;"	m	class:PGraphicsOpenGL
removeRow	data/Table.java	/^  public void removeRow(int row) {$/;"	m	class:Table
removeTexture	opengl/PShapeOpenGL.java	/^  protected void removeTexture(PImage tex) {$/;"	m	class:PShapeOpenGL
removeTextureObject	opengl/PGraphicsOpenGL.java	/^  protected static void removeTextureObject(int id, int context) {$/;"	m	class:PGraphicsOpenGL
removeTitleRow	data/Table.java	/^  public String[] removeTitleRow() {$/;"	m	class:Table
removeTokens	data/Table.java	/^  public void removeTokens(String tokens) {$/;"	m	class:Table
removeTokens	data/Table.java	/^  public void removeTokens(String tokens, String columnName) {$/;"	m	class:Table
removeTokens	data/Table.java	/^  public void removeTokens(String tokens, int column) {$/;"	m	class:Table
removeValue	data/FloatList.java	/^  public int removeValue(int value) {$/;"	m	class:FloatList
removeValue	data/IntList.java	/^  public int removeValue(int value) {$/;"	m	class:IntList
removeValue	data/StringList.java	/^  public int removeValue(String value) {$/;"	m	class:StringList
removeValues	data/FloatList.java	/^  public int removeValues(int value) {$/;"	m	class:FloatList
removeValues	data/IntList.java	/^  public int removeValues(int value) {$/;"	m	class:IntList
removeValues	data/StringList.java	/^  public int removeValues(String value) {$/;"	m	class:StringList
removeVertexBufferObject	opengl/PGraphicsOpenGL.java	/^  protected static void removeVertexBufferObject(int id, int context) {$/;"	m	class:PGraphicsOpenGL
render	core/PApplet.java	/^  protected synchronized void render() {$/;"	m	class:PApplet
render	opengl/PShapeOpenGL.java	/^  protected void render(PGraphicsOpenGL g, PImage texture) {$/;"	m	class:PShapeOpenGL
renderLines	opengl/PShapeOpenGL.java	/^  protected void renderLines(PGraphicsOpenGL g) {$/;"	m	class:PShapeOpenGL
renderMode	opengl/PGraphicsOpenGL.java	/^    int renderMode;$/;"	f	class:PGraphicsOpenGL.InGeometry
renderMode	opengl/PGraphicsOpenGL.java	/^    int renderMode;$/;"	f	class:PGraphicsOpenGL.TessGeometry
renderPoints	opengl/PShapeOpenGL.java	/^  protected void renderPoints(PGraphicsOpenGL g) {$/;"	m	class:PShapeOpenGL
renderPolys	opengl/PShapeOpenGL.java	/^  protected void renderPolys(PGraphicsOpenGL g, PImage textureImage) {$/;"	m	class:PShapeOpenGL
renderbufferStorage	opengl/PGL.java	/^  public abstract void renderbufferStorage(int target, int internalFormat, int width, int height);$/;"	m	class:PGL
renderbufferStorage	opengl/PJOGL.java	/^  public void renderbufferStorage(int target, int internalFormat, int width, int height) {$/;"	m	class:PJOGL
renderbufferStorageMultisample	opengl/PGL.java	/^  public abstract void renderbufferStorageMultisample(int target, int samples, int format, int width, int height);$/;"	m	class:PGL
renderbufferStorageMultisample	opengl/PJOGL.java	/^  public void renderbufferStorageMultisample(int target, int samples, int format, int width, int height) {$/;"	m	class:PJOGL
replace	data/Table.java	/^  public void replace(String orig, String replacement) {$/;"	m	class:Table
replace	data/Table.java	/^  public void replace(String orig, String replacement, String colName) {$/;"	m	class:Table
replace	data/Table.java	/^  public void replace(String orig, String replacement, int col) {$/;"	m	class:Table
replaceAll	data/Table.java	/^  public void replaceAll(String orig, String replacement) {$/;"	m	class:Table
replaceAll	data/Table.java	/^  public void replaceAll(String regex, String replacement, String columnName) {$/;"	m	class:Table
replaceAll	data/Table.java	/^  public void replaceAll(String regex, String replacement, int column) {$/;"	m	class:Table
replaceValue	data/FloatList.java	/^  public boolean replaceValue(float value, float newValue) {$/;"	m	class:FloatList
replaceValue	data/StringList.java	/^  public int replaceValue(String value, String newValue) {$/;"	m	class:StringList
replaceValues	data/FloatList.java	/^  public boolean replaceValues(float value, float newValue) {$/;"	m	class:FloatList
replaceValues	data/StringList.java	/^  public int replaceValues(String value, String newValue) {$/;"	m	class:StringList
report	opengl/PGraphicsOpenGL.java	/^  public void report(String where) {$/;"	m	class:PGraphicsOpenGL
reportDeprecation	core/PApplet.java	/^  protected void reportDeprecation(Class<?> c, boolean mouse) {$/;"	m	class:PApplet
reqNumSamples	opengl/PGL.java	/^  protected static int reqNumSamples;$/;"	f	class:PGL
requestDraw	core/PGraphics.java	/^  public void requestDraw() {  \/\/ ignore$/;"	m	class:PGraphics
requestDraw	core/PGraphicsJava2D.java	/^  public void requestDraw() {$/;"	m	class:PGraphicsJava2D
requestDraw	opengl/PGL.java	/^  protected abstract void requestDraw();$/;"	m	class:PGL
requestDraw	opengl/PGraphicsOpenGL.java	/^  public void requestDraw() {$/;"	m	class:PGraphicsOpenGL
requestDraw	opengl/PJOGL.java	/^  protected void requestDraw() {$/;"	m	class:PJOGL
requestFBOLayer	opengl/PGL.java	/^  protected void requestFBOLayer() {$/;"	m	class:PGL
requestFocus	core/PGraphics.java	/^  public void requestFocus() {  \/\/ ignore$/;"	m	class:PGraphics
requestFocus	opengl/PGL.java	/^  protected abstract void requestFocus();$/;"	m	class:PGL
requestFocus	opengl/PGraphicsOpenGL.java	/^  public void requestFocus() {  \/\/ ignore$/;"	m	class:PGraphicsOpenGL
requestFocus	opengl/PJOGL.java	/^  protected void requestFocus() { }$/;"	m	class:PJOGL
requestImage	core/PApplet.java	/^  public PImage requestImage(String filename) {$/;"	m	class:PApplet
requestImage	core/PApplet.java	/^  public PImage requestImage(String filename, String extension) {$/;"	m	class:PApplet
requestImageCount	core/PApplet.java	/^  volatile int requestImageCount;$/;"	f	class:PApplet
requestImageMax	core/PApplet.java	/^  public int requestImageMax = 4;$/;"	f	class:PApplet
reset	core/PMatrix.java	/^  public void reset();$/;"	m	interface:PMatrix
reset	core/PMatrix2D.java	/^  public void reset() {$/;"	m	class:PMatrix2D
reset	core/PMatrix3D.java	/^  public void reset() {$/;"	m	class:PMatrix3D
reset	data/Table.java	/^    public void reset() {$/;"	m	class:Table.RowIndexIterator
reset	data/Table.java	/^    public void reset() {$/;"	m	class:Table.RowIterator
reset	opengl/LinePath.java	/^  public final void reset() {$/;"	m	class:LinePath
resetCurveVertexCount	opengl/PGraphicsOpenGL.java	/^    void resetCurveVertexCount() {$/;"	m	class:PGraphicsOpenGL.Tessellator
resetMatrix	core/PApplet.java	/^  public void resetMatrix() {$/;"	m	class:PApplet
resetMatrix	core/PGraphics.java	/^  public void resetMatrix() {$/;"	m	class:PGraphics
resetMatrix	core/PGraphicsJava2D.java	/^  public void resetMatrix() {$/;"	m	class:PGraphicsJava2D
resetMatrix	core/PShape.java	/^  public void resetMatrix() {$/;"	m	class:PShape
resetMatrix	opengl/PGraphicsOpenGL.java	/^  public void resetMatrix() {$/;"	m	class:PGraphicsOpenGL
resetMatrix	opengl/PShapeOpenGL.java	/^  public void resetMatrix() {$/;"	m	class:PShapeOpenGL
resetProjection	opengl/PGraphicsOpenGL.java	/^  public void resetProjection() {$/;"	m	class:PGraphicsOpenGL
resetShader	core/PApplet.java	/^  public void resetShader() {$/;"	m	class:PApplet
resetShader	core/PApplet.java	/^  public void resetShader(int kind) {$/;"	m	class:PApplet
resetShader	core/PGraphics.java	/^  public void resetShader() {$/;"	m	class:PGraphics
resetShader	core/PGraphics.java	/^  public void resetShader(int kind) {$/;"	m	class:PGraphics
resetShader	opengl/PGraphicsOpenGL.java	/^  public void resetShader() {$/;"	m	class:PGraphicsOpenGL
resetShader	opengl/PGraphicsOpenGL.java	/^  public void resetShader(int kind) {$/;"	m	class:PGraphicsOpenGL
reshape	opengl/PJOGL.java	/^    public void reshape(GLAutoDrawable glDrawable, int x, int y, int w, int h) {$/;"	m	class:PJOGL.PGLListener
resize	core/PImage.java	/^  public void resize(int w, int h) {  \/\/ ignore$/;"	m	class:PImage
resize	data/FloatList.java	/^  public void resize(int length) {$/;"	m	class:FloatList
resize	data/IntList.java	/^  public void resize(int length) {$/;"	m	class:IntList
resize	data/StringList.java	/^  public void resize(int length) {$/;"	m	class:StringList
resize	opengl/PGraphicsOpenGL.java	/^  public void resize(int wide, int high) {$/;"	m	class:PGraphicsOpenGL
resize	opengl/Texture.java	/^  public void resize(int wide, int high) {$/;"	m	class:Texture
resizeRenderer	core/PApplet.java	/^  protected void resizeRenderer(int newWidth, int newHeight) {$/;"	m	class:PApplet
restartPGL	opengl/PGraphicsOpenGL.java	/^  protected void restartPGL() {$/;"	m	class:PGraphicsOpenGL
restoreBezierVertexSettings	opengl/PShapeOpenGL.java	/^  protected void restoreBezierVertexSettings() {$/;"	m	class:PShapeOpenGL
restoreCurveVertexSettings	opengl/PShapeOpenGL.java	/^  protected void restoreCurveVertexSettings() {$/;"	m	class:PShapeOpenGL
restoreGL	opengl/PGraphicsOpenGL.java	/^  protected void restoreGL() {$/;"	m	class:PGraphicsOpenGL
restoreSurface	opengl/PGraphicsOpenGL.java	/^  protected boolean restoreSurface = false;$/;"	f	class:PGraphicsOpenGL
restoreSurfaceFromPixels	opengl/PGraphicsOpenGL.java	/^  protected void restoreSurfaceFromPixels() {$/;"	m	class:PGraphicsOpenGL
resume	core/PApplet.java	/^  public void resume() { }$/;"	m	class:PApplet
retina	core/PApplet.java	/^  boolean retina;$/;"	f	class:PApplet
retina	core/PGraphicsRetina2D.java	/^  PImage retina;$/;"	f	class:PGraphicsRetina2D
reverse	core/PApplet.java	/^  static public Object reverse(Object list) {$/;"	m	class:PApplet
reverse	core/PApplet.java	/^  static public String[] reverse(String list[]) {$/;"	m	class:PApplet
reverse	core/PApplet.java	/^  static public boolean[] reverse(boolean list[]) {$/;"	m	class:PApplet
reverse	core/PApplet.java	/^  static public byte[] reverse(byte list[]) {$/;"	m	class:PApplet
reverse	core/PApplet.java	/^  static public char[] reverse(char list[]) {$/;"	m	class:PApplet
reverse	core/PApplet.java	/^  static public float[] reverse(float list[]) {$/;"	m	class:PApplet
reverse	core/PApplet.java	/^  static public int[] reverse(int list[]) {$/;"	m	class:PApplet
reverse	data/FloatList.java	/^  public void reverse() {$/;"	m	class:FloatList
reverse	data/IntList.java	/^  public void reverse() {$/;"	m	class:IntList
reverse	data/StringList.java	/^  public void reverse() {$/;"	m	class:StringList
reverse	opengl/LineStroker.java	/^  private int[] reverse = new int[100];$/;"	f	class:LineStroker	file:
rgbBuf	opengl/Texture.java	/^    IntBuffer rgbBuf;$/;"	f	class:Texture.BufferData
rgbaPixUpdateCount	opengl/Texture.java	/^  protected int rgbaPixUpdateCount = 0;$/;"	f	class:Texture
rgbaPixels	opengl/Texture.java	/^  protected int[] rgbaPixels = null;$/;"	f	class:Texture
rgbaValue	core/PShapeOBJ.java	/^  protected static int rgbaValue(PVector color) {$/;"	m	class:PShapeOBJ
rgbaValue	core/PShapeOBJ.java	/^  protected static int rgbaValue(PVector color, float alpha) {$/;"	m	class:PShapeOBJ
rgetset	core/PGraphicsRetina2D.java	/^  static int rgetset[] = new int[4];$/;"	f	class:PGraphicsRetina2D
rindex	opengl/LineStroker.java	/^  private int rindex;$/;"	f	class:LineStroker	file:
root	opengl/PShapeOpenGL.java	/^  protected PShapeOpenGL root;$/;"	f	class:PShapeOpenGL
rotate	core/PApplet.java	/^  public void rotate(float angle) {$/;"	m	class:PApplet
rotate	core/PApplet.java	/^  public void rotate(float angle, float x, float y, float z) {$/;"	m	class:PApplet
rotate	core/PGraphics.java	/^  public void rotate(float angle) {$/;"	m	class:PGraphics
rotate	core/PGraphics.java	/^  public void rotate(float angle, float x, float y, float z) {$/;"	m	class:PGraphics
rotate	core/PGraphicsJava2D.java	/^  public void rotate(float angle) {$/;"	m	class:PGraphicsJava2D
rotate	core/PGraphicsJava2D.java	/^  public void rotate(float angle, float vx, float vy, float vz) {$/;"	m	class:PGraphicsJava2D
rotate	core/PMatrix.java	/^  public void rotate(float angle);$/;"	m	interface:PMatrix
rotate	core/PMatrix.java	/^  public void rotate(float angle, float v0, float v1, float v2);$/;"	m	interface:PMatrix
rotate	core/PMatrix2D.java	/^  public void rotate(float angle) {$/;"	m	class:PMatrix2D
rotate	core/PMatrix2D.java	/^  public void rotate(float angle, float v0, float v1, float v2) {$/;"	m	class:PMatrix2D
rotate	core/PMatrix3D.java	/^  public void rotate(float angle) {$/;"	m	class:PMatrix3D
rotate	core/PMatrix3D.java	/^  public void rotate(float angle, float v0, float v1, float v2) {$/;"	m	class:PMatrix3D
rotate	core/PShape.java	/^  public void rotate(float angle) {$/;"	m	class:PShape
rotate	core/PShape.java	/^  public void rotate(float angle, float v0, float v1, float v2) {$/;"	m	class:PShape
rotate	core/PVector.java	/^  public void rotate(float theta) {$/;"	m	class:PVector
rotate	opengl/PGraphics2D.java	/^  public void rotate(float angle, float vx, float vy, float vz) {$/;"	m	class:PGraphics2D
rotate	opengl/PGraphicsOpenGL.java	/^  public void rotate(float angle) {$/;"	m	class:PGraphicsOpenGL
rotate	opengl/PGraphicsOpenGL.java	/^  public void rotate(float angle, float v0, float v1, float v2) {$/;"	m	class:PGraphicsOpenGL
rotate	opengl/PShapeOpenGL.java	/^  public void rotate(float angle) {$/;"	m	class:PShapeOpenGL
rotate	opengl/PShapeOpenGL.java	/^  public void rotate(float angle, float v0, float v1, float v2) {$/;"	m	class:PShapeOpenGL
rotateImpl	opengl/PGraphicsOpenGL.java	/^  protected void rotateImpl(float angle, float v0, float v1, float v2) {$/;"	m	class:PGraphicsOpenGL
rotateX	core/PApplet.java	/^  public void rotateX(float angle) {$/;"	m	class:PApplet
rotateX	core/PGraphics.java	/^  public void rotateX(float angle) {$/;"	m	class:PGraphics
rotateX	core/PGraphicsJava2D.java	/^  public void rotateX(float angle) {$/;"	m	class:PGraphicsJava2D
rotateX	core/PMatrix.java	/^  public void rotateX(float angle);$/;"	m	interface:PMatrix
rotateX	core/PMatrix2D.java	/^  public void rotateX(float angle) {$/;"	m	class:PMatrix2D
rotateX	core/PMatrix3D.java	/^  public void rotateX(float angle) {$/;"	m	class:PMatrix3D
rotateX	core/PShape.java	/^  public void rotateX(float angle) {$/;"	m	class:PShape
rotateX	opengl/PGraphics2D.java	/^  public void rotateX(float angle) {$/;"	m	class:PGraphics2D
rotateX	opengl/PGraphicsOpenGL.java	/^  public void rotateX(float angle) {$/;"	m	class:PGraphicsOpenGL
rotateX	opengl/PShapeOpenGL.java	/^  public void rotateX(float angle) {$/;"	m	class:PShapeOpenGL
rotateY	core/PApplet.java	/^  public void rotateY(float angle) {$/;"	m	class:PApplet
rotateY	core/PGraphics.java	/^  public void rotateY(float angle) {$/;"	m	class:PGraphics
rotateY	core/PGraphicsJava2D.java	/^  public void rotateY(float angle) {$/;"	m	class:PGraphicsJava2D
rotateY	core/PMatrix.java	/^  public void rotateY(float angle);$/;"	m	interface:PMatrix
rotateY	core/PMatrix2D.java	/^  public void rotateY(float angle) {$/;"	m	class:PMatrix2D
rotateY	core/PMatrix3D.java	/^  public void rotateY(float angle) {$/;"	m	class:PMatrix3D
rotateY	core/PShape.java	/^  public void rotateY(float angle) {$/;"	m	class:PShape
rotateY	opengl/PGraphics2D.java	/^  public void rotateY(float angle) {$/;"	m	class:PGraphics2D
rotateY	opengl/PGraphicsOpenGL.java	/^  public void rotateY(float angle) {$/;"	m	class:PGraphicsOpenGL
rotateY	opengl/PShapeOpenGL.java	/^  public void rotateY(float angle) {$/;"	m	class:PShapeOpenGL
rotateZ	core/PApplet.java	/^  public void rotateZ(float angle) {$/;"	m	class:PApplet
rotateZ	core/PGraphics.java	/^  public void rotateZ(float angle) {$/;"	m	class:PGraphics
rotateZ	core/PGraphicsJava2D.java	/^  public void rotateZ(float angle) {$/;"	m	class:PGraphicsJava2D
rotateZ	core/PMatrix.java	/^  public void rotateZ(float angle);$/;"	m	interface:PMatrix
rotateZ	core/PMatrix2D.java	/^  public void rotateZ(float angle) {$/;"	m	class:PMatrix2D
rotateZ	core/PMatrix3D.java	/^  public void rotateZ(float angle) {$/;"	m	class:PMatrix3D
rotateZ	core/PShape.java	/^  public void rotateZ(float angle) {$/;"	m	class:PShape
rotateZ	opengl/PGraphics2D.java	/^  public void rotateZ(float angle) {$/;"	m	class:PGraphics2D
rotateZ	opengl/PGraphicsOpenGL.java	/^  public void rotateZ(float angle) {$/;"	m	class:PGraphicsOpenGL
rotateZ	opengl/PShapeOpenGL.java	/^  public void rotateZ(float angle) {$/;"	m	class:PShapeOpenGL
round	core/PApplet.java	/^  static public final int round(float n) {$/;"	m	class:PApplet
row	data/Table.java	/^    int row;$/;"	f	class:Table.RowIterator
row	data/Table.java	/^    int row;$/;"	f	class:Table.RowPointer
rowCount	data/Table.java	/^  protected int rowCount;$/;"	f	class:Table
rowIterator	data/Table.java	/^  protected RowIterator rowIterator;$/;"	f	class:Table
rows	data/Table.java	/^  public Iterable<TableRow> rows() {$/;"	m	class:Table
rows	data/Table.java	/^  public Iterable<TableRow> rows(final int[] indices) {$/;"	m	class:Table
rp	data/Table.java	/^    RowPointer rp;$/;"	f	class:Table.RowIndexIterator
rp	data/Table.java	/^    RowPointer rp;$/;"	f	class:Table.RowIterator
run	core/PApplet.java	/^    public void run() {$/;"	m	class:PApplet.AsyncImageLoader
run	core/PApplet.java	/^  public void run() {  \/\/ not good to make this synchronized, locks things up$/;"	m	class:PApplet
run	data/Sort.java	/^  public void run() {$/;"	m	class:Sort
runSketch	core/PApplet.java	/^  protected void runSketch() {$/;"	m	class:PApplet
runSketch	core/PApplet.java	/^  protected void runSketch(final String[] args) {$/;"	m	class:PApplet
runSketch	core/PApplet.java	/^  static public void runSketch(final String args[], final PApplet constructedApplet) {$/;"	m	class:PApplet
sX	core/PImage.java	/^  private int fracU, ifU, fracV, ifV, u1, u2, v1, v2, sX, sY, iw, iw1, ih1;$/;"	f	class:PImage	file:
sY	core/PImage.java	/^  private int fracU, ifU, fracV, ifV, u1, u2, v1, v2, sX, sY, iw, iw1, ih1;$/;"	f	class:PImage	file:
same	opengl/PGraphicsOpenGL.java	/^  protected static boolean same(float a, float b) {$/;"	m	class:PGraphicsOpenGL
sampleCoverage	opengl/PGL.java	/^  public abstract void sampleCoverage(float value, boolean invert);$/;"	m	class:PGL
sampleCoverage	opengl/PJOGL.java	/^  public void sampleCoverage(float value, boolean invert) {$/;"	m	class:PJOGL
sampling	opengl/Texture.java	/^    public int sampling;$/;"	f	class:Texture.Parameters
saturation	core/PApplet.java	/^  public final float saturation(int rgb) {$/;"	m	class:PApplet
saturation	core/PGraphics.java	/^  public final float saturation(int rgb) {$/;"	m	class:PGraphics
save	core/PApplet.java	/^  public void save(String filename) {$/;"	m	class:PApplet
save	core/PFont.java	/^  public void save(OutputStream output) throws IOException {$/;"	m	class:PFont
save	core/PGraphicsRetina2D.java	/^  public boolean save(String filename) {$/;"	m	class:PGraphicsRetina2D
save	core/PImage.java	/^  public boolean save(String filename) {  \/\/ ignore$/;"	m	class:PImage
save	data/JSONArray.java	/^  protected boolean save(OutputStream output) {$/;"	m	class:JSONArray
save	data/JSONArray.java	/^  public boolean save(File file, String options) {$/;"	m	class:JSONArray
save	data/JSONArray.java	/^  public boolean save(PrintWriter output) {$/;"	m	class:JSONArray
save	data/JSONObject.java	/^  public boolean save(File file, String options) {$/;"	m	class:JSONObject
save	data/Table.java	/^  public boolean save(File file, String options) throws IOException {$/;"	m	class:Table
save	data/Table.java	/^  public boolean save(OutputStream output, String options) {$/;"	m	class:Table
save	data/XML.java	/^  public boolean save(File file, String options) {$/;"	m	class:XML
saveBezierVertexSettings	opengl/PShapeOpenGL.java	/^  protected void saveBezierVertexSettings() {$/;"	m	class:PShapeOpenGL
saveBinary	data/Table.java	/^  protected void saveBinary(OutputStream os) throws IOException {$/;"	m	class:Table
saveBytes	core/PApplet.java	/^  public void saveBytes(String filename, byte[] data) {$/;"	m	class:PApplet
saveBytes	core/PApplet.java	/^  static public void saveBytes(File file, byte[] data) {$/;"	m	class:PApplet
saveBytes	core/PApplet.java	/^  static public void saveBytes(OutputStream output, byte[] data) {$/;"	m	class:PApplet
saveCurveVertexSettings	opengl/PShapeOpenGL.java	/^  protected void saveCurveVertexSettings() {$/;"	m	class:PShapeOpenGL
saveExtensions	data/Table.java	/^  static final String[] saveExtensions = { "csv", "tsv", "html", "bin" };$/;"	f	class:Table
saveFile	core/PApplet.java	/^  public File saveFile(String where) {$/;"	m	class:PApplet
saveFrame	core/PApplet.java	/^  public void saveFrame() {$/;"	m	class:PApplet
saveFrame	core/PApplet.java	/^  public void saveFrame(String filename) {$/;"	m	class:PApplet
saveImageFormats	core/PImage.java	/^  protected String[] saveImageFormats;$/;"	f	class:PImage
saveImageIO	core/PImage.java	/^  protected boolean saveImageIO(String path) throws IOException {$/;"	m	class:PImage
saveJSONArray	core/PApplet.java	/^  public boolean saveJSONArray(JSONArray json, String filename) {$/;"	m	class:PApplet
saveJSONArray	core/PApplet.java	/^  public boolean saveJSONArray(JSONArray json, String filename, String options) {$/;"	m	class:PApplet
saveJSONObject	core/PApplet.java	/^  public boolean saveJSONObject(JSONObject json, String filename) {$/;"	m	class:PApplet
saveJSONObject	core/PApplet.java	/^  public boolean saveJSONObject(JSONObject json, String filename, String options) {$/;"	m	class:PApplet
savePath	core/PApplet.java	/^  public String savePath(String where) {$/;"	m	class:PApplet
saveStream	core/PApplet.java	/^  public boolean saveStream(File target, String source) {$/;"	m	class:PApplet
saveStream	core/PApplet.java	/^  public boolean saveStream(String target, InputStream source) {$/;"	m	class:PApplet
saveStream	core/PApplet.java	/^  public boolean saveStream(String target, String source) {$/;"	m	class:PApplet
saveStream	core/PApplet.java	/^  static public boolean saveStream(File target, InputStream source) {$/;"	m	class:PApplet
saveStream	core/PApplet.java	/^  static public void saveStream(OutputStream target,$/;"	m	class:PApplet
saveStrings	core/PApplet.java	/^  public void saveStrings(String filename, String data[]) {$/;"	m	class:PApplet
saveStrings	core/PApplet.java	/^  static public void saveStrings(File file, String data[]) {$/;"	m	class:PApplet
saveStrings	core/PApplet.java	/^  static public void saveStrings(OutputStream output, String[] data) {$/;"	m	class:PApplet
saveSurfaceToPixels	opengl/PGraphicsOpenGL.java	/^  protected void saveSurfaceToPixels() {$/;"	m	class:PGraphicsOpenGL
saveTGA	core/PImage.java	/^  protected boolean saveTGA(OutputStream output) {$/;"	m	class:PImage
saveTIFF	core/PImage.java	/^  protected boolean saveTIFF(OutputStream output) {$/;"	m	class:PImage
saveTable	core/PApplet.java	/^  public boolean saveTable(Table table, String filename) {$/;"	m	class:PApplet
saveTable	core/PApplet.java	/^  public boolean saveTable(Table table, String filename, String options) {$/;"	m	class:PApplet
saveXML	core/PApplet.java	/^  public boolean saveXML(XML xml, String filename) {$/;"	m	class:PApplet
saveXML	core/PApplet.java	/^  public boolean saveXML(XML xml, String filename, String options) {$/;"	m	class:PApplet
savedAmbientColor	opengl/PShapeOpenGL.java	/^  protected int savedAmbientColor;$/;"	f	class:PShapeOpenGL
savedBezierDetail	opengl/PShapeOpenGL.java	/^  protected int savedBezierDetail;$/;"	f	class:PShapeOpenGL
savedCurveDetail	opengl/PShapeOpenGL.java	/^  protected int savedCurveDetail;$/;"	f	class:PShapeOpenGL
savedCurveTightness	opengl/PShapeOpenGL.java	/^  protected float savedCurveTightness;$/;"	f	class:PShapeOpenGL
savedEmissiveColor	opengl/PShapeOpenGL.java	/^  protected int savedEmissiveColor;$/;"	f	class:PShapeOpenGL
savedFill	opengl/PShapeOpenGL.java	/^  protected boolean savedFill;$/;"	f	class:PShapeOpenGL
savedFillColor	opengl/PShapeOpenGL.java	/^  protected int savedFillColor;$/;"	f	class:PShapeOpenGL
savedShininess	opengl/PShapeOpenGL.java	/^  protected float savedShininess;$/;"	f	class:PShapeOpenGL
savedSpecularColor	opengl/PShapeOpenGL.java	/^  protected int savedSpecularColor;$/;"	f	class:PShapeOpenGL
savedStroke	opengl/PShapeOpenGL.java	/^  protected boolean savedStroke;$/;"	f	class:PShapeOpenGL
savedStrokeCap	opengl/PShapeOpenGL.java	/^  protected int savedStrokeCap;$/;"	f	class:PShapeOpenGL
savedStrokeColor	opengl/PShapeOpenGL.java	/^  protected int savedStrokeColor;$/;"	f	class:PShapeOpenGL
savedStrokeJoin	opengl/PShapeOpenGL.java	/^  protected int savedStrokeJoin;$/;"	f	class:PShapeOpenGL
savedStrokeWeight	opengl/PShapeOpenGL.java	/^  protected float savedStrokeWeight;$/;"	f	class:PShapeOpenGL
savedTextureMode	opengl/PShapeOpenGL.java	/^  protected int savedTextureMode;$/;"	f	class:PShapeOpenGL
savedTint	opengl/PShapeOpenGL.java	/^  protected boolean savedTint;$/;"	f	class:PShapeOpenGL
savedTintColor	opengl/PShapeOpenGL.java	/^  protected int savedTintColor;$/;"	f	class:PShapeOpenGL
scale	core/PApplet.java	/^  public void scale(float s) {$/;"	m	class:PApplet
scale	core/PApplet.java	/^  public void scale(float x, float y) {$/;"	m	class:PApplet
scale	core/PApplet.java	/^  public void scale(float x, float y, float z) {$/;"	m	class:PApplet
scale	core/PGraphics.java	/^  public void scale(float s) {$/;"	m	class:PGraphics
scale	core/PGraphics.java	/^  public void scale(float x, float y) {$/;"	m	class:PGraphics
scale	core/PGraphics.java	/^  public void scale(float x, float y, float z) {$/;"	m	class:PGraphics
scale	core/PGraphicsJava2D.java	/^  public void scale(float s) {$/;"	m	class:PGraphicsJava2D
scale	core/PGraphicsJava2D.java	/^  public void scale(float sx, float sy) {$/;"	m	class:PGraphicsJava2D
scale	core/PGraphicsJava2D.java	/^  public void scale(float sx, float sy, float sz) {$/;"	m	class:PGraphicsJava2D
scale	core/PMatrix.java	/^  public void scale(float s);$/;"	m	interface:PMatrix
scale	core/PMatrix.java	/^  public void scale(float sx, float sy);$/;"	m	interface:PMatrix
scale	core/PMatrix.java	/^  public void scale(float x, float y, float z);$/;"	m	interface:PMatrix
scale	core/PMatrix2D.java	/^  public void scale(float s) {$/;"	m	class:PMatrix2D
scale	core/PMatrix2D.java	/^  public void scale(float sx, float sy) {$/;"	m	class:PMatrix2D
scale	core/PMatrix2D.java	/^  public void scale(float x, float y, float z) {$/;"	m	class:PMatrix2D
scale	core/PMatrix3D.java	/^  public void scale(float s) {$/;"	m	class:PMatrix3D
scale	core/PMatrix3D.java	/^  public void scale(float sx, float sy) {$/;"	m	class:PMatrix3D
scale	core/PMatrix3D.java	/^  public void scale(float x, float y, float z) {$/;"	m	class:PMatrix3D
scale	core/PShape.java	/^  public void scale(float s) {$/;"	m	class:PShape
scale	core/PShape.java	/^  public void scale(float x, float y) {$/;"	m	class:PShape
scale	core/PShape.java	/^  public void scale(float x, float y, float z) {$/;"	m	class:PShape
scale	opengl/PGraphics2D.java	/^  public void scale(float sx, float sy, float sz) {$/;"	m	class:PGraphics2D
scale	opengl/PGraphicsOpenGL.java	/^  public void scale(float s) {$/;"	m	class:PGraphicsOpenGL
scale	opengl/PGraphicsOpenGL.java	/^  public void scale(float sx, float sy) {$/;"	m	class:PGraphicsOpenGL
scale	opengl/PGraphicsOpenGL.java	/^  public void scale(float sx, float sy, float sz) {$/;"	m	class:PGraphicsOpenGL
scale	opengl/PShapeOpenGL.java	/^  public void scale(float s) {$/;"	m	class:PShapeOpenGL
scale	opengl/PShapeOpenGL.java	/^  public void scale(float x, float y) {$/;"	m	class:PShapeOpenGL
scale	opengl/PShapeOpenGL.java	/^  public void scale(float x, float y, float z) {$/;"	m	class:PShapeOpenGL
scaleImpl	opengl/PGraphicsOpenGL.java	/^  protected void scaleImpl(float sx, float sy, float sz) {$/;"	m	class:PGraphicsOpenGL
scaleLoc	opengl/PShader.java	/^  protected int scaleLoc;$/;"	f	class:PShader
scaleTextureUV	opengl/PShapeOpenGL.java	/^  protected void scaleTextureUV(float uFactor, float vFactor) {$/;"	m	class:PShapeOpenGL
scaledLineWidth2	opengl/LineStroker.java	/^  private long scaledLineWidth2;$/;"	f	class:LineStroker	file:
scissor	opengl/PGL.java	/^  public abstract void scissor(int x, int y, int w, int h);$/;"	m	class:PGL
scissor	opengl/PJOGL.java	/^  public void scissor(int x, int y, int w, int h) {$/;"	m	class:PJOGL
scolor0	opengl/LineStroker.java	/^  private int scolor0, pcolor0, color0;$/;"	f	class:LineStroker	file:
screenFb	opengl/FrameBuffer.java	/^  protected boolean screenFb;$/;"	f	class:FrameBuffer
screenX	core/PApplet.java	/^  public float screenX(float x, float y) {$/;"	m	class:PApplet
screenX	core/PApplet.java	/^  public float screenX(float x, float y, float z) {$/;"	m	class:PApplet
screenX	core/PGraphics.java	/^  public float screenX(float x, float y) {$/;"	m	class:PGraphics
screenX	core/PGraphics.java	/^  public float screenX(float x, float y, float z) {$/;"	m	class:PGraphics
screenX	core/PGraphicsJava2D.java	/^  public float screenX(float x, float y) {$/;"	m	class:PGraphicsJava2D
screenX	core/PGraphicsJava2D.java	/^  public float screenX(float x, float y, float z) {$/;"	m	class:PGraphicsJava2D
screenX	opengl/PGraphics2D.java	/^  public float screenX(float x, float y, float z) {$/;"	m	class:PGraphics2D
screenX	opengl/PGraphicsOpenGL.java	/^  public float screenX(float x, float y) {$/;"	m	class:PGraphicsOpenGL
screenX	opengl/PGraphicsOpenGL.java	/^  public float screenX(float x, float y, float z) {$/;"	m	class:PGraphicsOpenGL
screenXImpl	opengl/PGraphicsOpenGL.java	/^  protected float screenXImpl(float x, float y, float z) {$/;"	m	class:PGraphicsOpenGL
screenXImpl	opengl/PGraphicsOpenGL.java	/^  protected float screenXImpl(float x, float y, float z, float w) {$/;"	m	class:PGraphicsOpenGL
screenY	core/PApplet.java	/^  public float screenY(float x, float y) {$/;"	m	class:PApplet
screenY	core/PApplet.java	/^  public float screenY(float x, float y, float z) {$/;"	m	class:PApplet
screenY	core/PGraphics.java	/^  public float screenY(float x, float y) {$/;"	m	class:PGraphics
screenY	core/PGraphics.java	/^  public float screenY(float x, float y, float z) {$/;"	m	class:PGraphics
screenY	core/PGraphicsJava2D.java	/^  public float screenY(float x, float y) {$/;"	m	class:PGraphicsJava2D
screenY	core/PGraphicsJava2D.java	/^  public float screenY(float x, float y, float z) {$/;"	m	class:PGraphicsJava2D
screenY	opengl/PGraphics2D.java	/^  public float screenY(float x, float y, float z) {$/;"	m	class:PGraphics2D
screenY	opengl/PGraphicsOpenGL.java	/^  public float screenY(float x, float y) {$/;"	m	class:PGraphicsOpenGL
screenY	opengl/PGraphicsOpenGL.java	/^  public float screenY(float x, float y, float z) {$/;"	m	class:PGraphicsOpenGL
screenYImpl	opengl/PGraphicsOpenGL.java	/^  protected float screenYImpl(float x, float y, float z) {$/;"	m	class:PGraphicsOpenGL
screenYImpl	opengl/PGraphicsOpenGL.java	/^  protected float screenYImpl(float x, float y, float z, float w) {$/;"	m	class:PGraphicsOpenGL
screenZ	core/PApplet.java	/^  public float screenZ(float x, float y, float z) {$/;"	m	class:PApplet
screenZ	core/PGraphics.java	/^  public float screenZ(float x, float y, float z) {$/;"	m	class:PGraphics
screenZ	core/PGraphicsJava2D.java	/^  public float screenZ(float x, float y, float z) {$/;"	m	class:PGraphicsJava2D
screenZ	opengl/PGraphics2D.java	/^  public float screenZ(float x, float y, float z) {$/;"	m	class:PGraphics2D
screenZ	opengl/PGraphicsOpenGL.java	/^  public float screenZ(float x, float y, float z) {$/;"	m	class:PGraphicsOpenGL
screenZImpl	opengl/PGraphicsOpenGL.java	/^  protected float screenZImpl(float x, float y, float z) {$/;"	m	class:PGraphicsOpenGL
screenZImpl	opengl/PGraphicsOpenGL.java	/^  protected float screenZImpl(float x, float y, float z, float w) {$/;"	m	class:PGraphicsOpenGL
second	core/PApplet.java	/^  static public int second() {$/;"	m	class:PApplet
segmentIsAxisAligned	opengl/PGraphicsOpenGL.java	/^    boolean segmentIsAxisAligned(float[] vertices, int i0, int i1) {$/;"	m	class:PGraphicsOpenGL.Tessellator
segmentIsAxisAligned	opengl/PGraphicsOpenGL.java	/^    boolean segmentIsAxisAligned(int i0, int i1) {$/;"	m	class:PGraphicsOpenGL.Tessellator
selectCallback	core/PApplet.java	/^  static private void selectCallback(File selectedFile,$/;"	m	class:PApplet	file:
selectFolder	core/PApplet.java	/^  public void selectFolder(String prompt, String callback) {$/;"	m	class:PApplet
selectFolder	core/PApplet.java	/^  public void selectFolder(String prompt, String callback, File file) {$/;"	m	class:PApplet
selectFolder	core/PApplet.java	/^  public void selectFolder(String prompt, String callback,$/;"	m	class:PApplet
selectFolder	core/PApplet.java	/^  static public void selectFolder(final String prompt,$/;"	m	class:PApplet
selectFrame	core/PApplet.java	/^  private Frame selectFrame() {$/;"	m	class:PApplet	file:
selectFrame	core/PApplet.java	/^  private Frame selectFrame;$/;"	f	class:PApplet	file:
selectImpl	core/PApplet.java	/^  static protected void selectImpl(final String prompt,$/;"	m	class:PApplet
selectInput	core/PApplet.java	/^  public void selectInput(String prompt, String callback) {$/;"	m	class:PApplet
selectInput	core/PApplet.java	/^  public void selectInput(String prompt, String callback, File file) {$/;"	m	class:PApplet
selectInput	core/PApplet.java	/^  public void selectInput(String prompt, String callback,$/;"	m	class:PApplet
selectInput	core/PApplet.java	/^  static public void selectInput(String prompt, String callbackMethod,$/;"	m	class:PApplet
selectOutput	core/PApplet.java	/^  public void selectOutput(String prompt, String callback) {$/;"	m	class:PApplet
selectOutput	core/PApplet.java	/^  public void selectOutput(String prompt, String callback, File file) {$/;"	m	class:PApplet
selectOutput	core/PApplet.java	/^  public void selectOutput(String prompt, String callback,$/;"	m	class:PApplet
selectOutput	core/PApplet.java	/^  static public void selectOutput(String prompt, String callbackMethod,$/;"	m	class:PApplet
serialVersionUID	core/PVector.java	/^  private static final long serialVersionUID = -6717872085945400694L;$/;"	f	class:PVector	file:
set	core/PApplet.java	/^  public void set(int x, int y, PImage img) {$/;"	m	class:PApplet
set	core/PApplet.java	/^  public void set(int x, int y, int c) {$/;"	m	class:PApplet
set	core/PGraphicsJava2D.java	/^  public void set(int x, int y, int argb) {$/;"	m	class:PGraphicsJava2D
set	core/PGraphicsRetina2D.java	/^  public void set(int x, int y, PImage img) {$/;"	m	class:PGraphicsRetina2D
set	core/PGraphicsRetina2D.java	/^  public void set(int x, int y, int argb) {$/;"	m	class:PGraphicsRetina2D
set	core/PImage.java	/^  public void set(int x, int y, PImage img) {$/;"	m	class:PImage
set	core/PImage.java	/^  public void set(int x, int y, int c) {$/;"	m	class:PImage
set	core/PMatrix.java	/^  public void set(PMatrix src);$/;"	m	interface:PMatrix
set	core/PMatrix.java	/^  public void set(float m00, float m01, float m02, $/;"	m	interface:PMatrix
set	core/PMatrix.java	/^  public void set(float m00, float m01, float m02, float m03,$/;"	m	interface:PMatrix
set	core/PMatrix.java	/^  public void set(float[] source);$/;"	m	interface:PMatrix
set	core/PMatrix2D.java	/^  public void set(PMatrix matrix) {$/;"	m	class:PMatrix2D
set	core/PMatrix2D.java	/^  public void set(PMatrix3D src) {$/;"	m	class:PMatrix2D
set	core/PMatrix2D.java	/^  public void set(float m00, float m01, float m02, float m03,$/;"	m	class:PMatrix2D
set	core/PMatrix2D.java	/^  public void set(float m00, float m01, float m02,$/;"	m	class:PMatrix2D
set	core/PMatrix2D.java	/^  public void set(float[] source) {$/;"	m	class:PMatrix2D
set	core/PMatrix3D.java	/^  public void set(PMatrix matrix) {$/;"	m	class:PMatrix3D
set	core/PMatrix3D.java	/^  public void set(float m00, float m01, float m02, float m03,$/;"	m	class:PMatrix3D
set	core/PMatrix3D.java	/^  public void set(float m00, float m01, float m02,$/;"	m	class:PMatrix3D
set	core/PMatrix3D.java	/^  public void set(float[] source) {$/;"	m	class:PMatrix3D
set	core/PVector.java	/^  public void set(PVector v) {$/;"	m	class:PVector
set	core/PVector.java	/^  public void set(float x, float y) {$/;"	m	class:PVector
set	core/PVector.java	/^  public void set(float x, float y, float z) {$/;"	m	class:PVector
set	core/PVector.java	/^  public void set(float[] source) {$/;"	m	class:PVector
set	data/FloatDict.java	/^  public void set(String key, float amount) {$/;"	m	class:FloatDict
set	data/FloatList.java	/^  public void set(int index, float what) {$/;"	m	class:FloatList
set	data/IntDict.java	/^  public void set(String key, int amount) {$/;"	m	class:IntDict
set	data/IntList.java	/^  public void set(int index, int what) {$/;"	m	class:IntList
set	data/JSONArray.java	/^  private JSONArray set(int index, Object value) {$/;"	m	class:JSONArray	file:
set	data/StringDict.java	/^  public void set(String key, String amount) {$/;"	m	class:StringDict
set	data/StringList.java	/^  public void set(int index, String what) {$/;"	m	class:StringList
set	opengl/PGraphicsOpenGL.java	/^  public void set(int x, int y, int argb) {$/;"	m	class:PGraphicsOpenGL
set	opengl/PShader.java	/^  public void set(String name, PImage tex) {$/;"	m	class:PShader
set	opengl/PShader.java	/^  public void set(String name, PMatrix2D mat) {$/;"	m	class:PShader
set	opengl/PShader.java	/^  public void set(String name, PMatrix3D mat) {$/;"	m	class:PShader
set	opengl/PShader.java	/^  public void set(String name, PMatrix3D mat, boolean use3x3) {$/;"	m	class:PShader
set	opengl/PShader.java	/^  public void set(String name, PVector vec) {$/;"	m	class:PShader
set	opengl/PShader.java	/^  public void set(String name, boolean x) {$/;"	m	class:PShader
set	opengl/PShader.java	/^  public void set(String name, boolean x, boolean y) {$/;"	m	class:PShader
set	opengl/PShader.java	/^  public void set(String name, boolean x, boolean y, boolean z) {$/;"	m	class:PShader
set	opengl/PShader.java	/^  public void set(String name, boolean x, boolean y, boolean z, boolean w) {$/;"	m	class:PShader
set	opengl/PShader.java	/^  public void set(String name, boolean[] boolvec, int ncoords) {$/;"	m	class:PShader
set	opengl/PShader.java	/^  public void set(String name, boolean[] vec) {$/;"	m	class:PShader
set	opengl/PShader.java	/^  public void set(String name, float x) {$/;"	m	class:PShader
set	opengl/PShader.java	/^  public void set(String name, float x, float y) {$/;"	m	class:PShader
set	opengl/PShader.java	/^  public void set(String name, float x, float y, float z) {$/;"	m	class:PShader
set	opengl/PShader.java	/^  public void set(String name, float x, float y, float z, float w) {$/;"	m	class:PShader
set	opengl/PShader.java	/^  public void set(String name, float[] vec) {$/;"	m	class:PShader
set	opengl/PShader.java	/^  public void set(String name, float[] vec, int ncoords) {$/;"	m	class:PShader
set	opengl/PShader.java	/^  public void set(String name, int x) {$/;"	m	class:PShader
set	opengl/PShader.java	/^  public void set(String name, int x, int y) {$/;"	m	class:PShader
set	opengl/PShader.java	/^  public void set(String name, int x, int y, int z) {$/;"	m	class:PShader
set	opengl/PShader.java	/^  public void set(String name, int x, int y, int z, int w) {$/;"	m	class:PShader
set	opengl/PShader.java	/^  public void set(String name, int[] vec) {$/;"	m	class:PShader
set	opengl/PShader.java	/^  public void set(String name, int[] vec, int ncoords) {$/;"	m	class:PShader
set	opengl/Texture.java	/^    public void set(Parameters src) {$/;"	m	class:Texture.Parameters
set	opengl/Texture.java	/^    public void set(int format) {$/;"	m	class:Texture.Parameters
set	opengl/Texture.java	/^    public void set(int format, int sampling) {$/;"	m	class:Texture.Parameters
set	opengl/Texture.java	/^    public void set(int format, int sampling, boolean mipmaps) {$/;"	m	class:Texture.Parameters
set	opengl/Texture.java	/^  public void set(Texture tex) {$/;"	m	class:Texture
set	opengl/Texture.java	/^  public void set(Texture tex, int x, int y, int w, int h) {$/;"	m	class:Texture
set	opengl/Texture.java	/^  public void set(int texTarget, int texName, int texWidth, int texHeight,$/;"	m	class:Texture
set	opengl/Texture.java	/^  public void set(int[] pixels) {$/;"	m	class:Texture
set	opengl/Texture.java	/^  public void set(int[] pixels, int format) {$/;"	m	class:Texture
set	opengl/Texture.java	/^  public void set(int[] pixels, int x, int y, int w, int h) {$/;"	m	class:Texture
set	opengl/Texture.java	/^  public void set(int[] pixels, int x, int y, int w, int h, int format) {$/;"	m	class:Texture
set3D	opengl/PGraphicsOpenGL.java	/^    void set3D(boolean value) {$/;"	m	class:PGraphicsOpenGL.Tessellator
setAccurate2DStrokes	opengl/PGraphicsOpenGL.java	/^    void setAccurate2DStrokes(boolean accurate) {$/;"	m	class:PGraphicsOpenGL.Tessellator
setAmbient	core/PGraphics.java	/^  public boolean setAmbient;$/;"	f	class:PGraphics
setAmbient	core/PShape.java	/^  protected boolean setAmbient;$/;"	f	class:PShape
setAmbient	core/PShape.java	/^  public void setAmbient(int ambient) {$/;"	m	class:PShape
setAmbient	core/PShape.java	/^  public void setAmbient(int index, int ambient) {$/;"	m	class:PShape
setAmbient	opengl/PShapeOpenGL.java	/^  public void setAmbient(int ambient) {$/;"	m	class:PShapeOpenGL
setAmbient	opengl/PShapeOpenGL.java	/^  public void setAmbient(int index, int ambient) {$/;"	m	class:PShapeOpenGL
setAmbientAttribute	opengl/PShader.java	/^  protected void setAmbientAttribute(int vboId, int size, int type,$/;"	m	class:PShader
setAmbientImpl	opengl/PShapeOpenGL.java	/^  protected void setAmbientImpl(int ambient) {$/;"	m	class:PShapeOpenGL
setAttributeVBO	opengl/PShader.java	/^  protected void setAttributeVBO(int loc, int vboId, int size, int type,$/;"	m	class:PShader
setBoolean	data/JSONArray.java	/^  public JSONArray setBoolean(int index, boolean value) {$/;"	m	class:JSONArray
setBoolean	data/JSONObject.java	/^  public JSONObject setBoolean(String key, boolean value) {$/;"	m	class:JSONObject
setBufferSource	opengl/Texture.java	/^  public void setBufferSource(Object source) {$/;"	m	class:Texture
setCache	core/PApplet.java	/^  public void setCache(PImage image, Object storage) {$/;"	m	class:PApplet
setCache	core/PGraphics.java	/^  public void setCache(PImage image, Object storage) {$/;"	m	class:PGraphics
setColor	core/PShapeSVG.java	/^  void setColor(String colorText, boolean isFill) {$/;"	m	class:PShapeSVG
setColorAttribute	opengl/PShader.java	/^  protected void setColorAttribute(int vboId, int size, int type,$/;"	m	class:PShader
setColorBuffer	opengl/FrameBuffer.java	/^  public void setColorBuffer(Texture tex) {$/;"	m	class:FrameBuffer
setColorBuffers	opengl/FrameBuffer.java	/^  public void setColorBuffers(Texture[] textures) {$/;"	m	class:FrameBuffer
setColorBuffers	opengl/FrameBuffer.java	/^  public void setColorBuffers(Texture[] textures, int n) {$/;"	m	class:FrameBuffer
setColumnCount	data/Table.java	/^  public void setColumnCount(int newCount) {$/;"	m	class:Table
setColumnTitle	data/Table.java	/^  public void setColumnTitle(int column, String title) {$/;"	m	class:Table
setColumnTitles	data/Table.java	/^  public void setColumnTitles(String[] titles) {$/;"	m	class:Table
setColumnType	data/Table.java	/^  public void setColumnType(String columnName, String columnType) {$/;"	m	class:Table
setColumnType	data/Table.java	/^  public void setColumnType(String columnName, int newType) {$/;"	m	class:Table
setColumnType	data/Table.java	/^  public void setColumnType(int column, String columnType) {$/;"	m	class:Table
setColumnType	data/Table.java	/^  public void setColumnType(int column, int newType) {$/;"	m	class:Table
setColumnTypes	data/Table.java	/^  public void setColumnTypes(final Table dictionary) {$/;"	m	class:Table
setColumnTypes	data/Table.java	/^  public void setColumnTypes(int[] types) {$/;"	m	class:Table
setCommonUniforms	opengl/PShader.java	/^  protected void setCommonUniforms() {$/;"	m	class:PShader
setContent	data/XML.java	/^  public void setContent(String text) {$/;"	m	class:XML
setDouble	data/JSONArray.java	/^  public JSONArray setDouble(int index, double value) {$/;"	m	class:JSONArray
setDouble	data/JSONObject.java	/^  public JSONObject setDouble(String key, double value) {$/;"	m	class:JSONObject
setDouble	data/Table.java	/^    public void setDouble(String columnName, double value) {$/;"	m	class:Table.RowPointer
setDouble	data/Table.java	/^    public void setDouble(int column, double value) {$/;"	m	class:Table.RowPointer
setDouble	data/Table.java	/^  public void setDouble(int row, String columnName, double value) {$/;"	m	class:Table
setDouble	data/Table.java	/^  public void setDouble(int row, int column, double value) {$/;"	m	class:Table
setDouble	data/TableRow.java	/^  public void setDouble(String columnName, double value);$/;"	m	interface:TableRow
setDouble	data/TableRow.java	/^  public void setDouble(int column, double value);$/;"	m	interface:TableRow
setDouble	data/XML.java	/^  public void setDouble(String name, double value) {$/;"	m	class:XML
setDoubleContent	data/XML.java	/^  public void setDoubleContent(double value) {$/;"	m	class:XML
setDrawDefaults	opengl/PGraphicsOpenGL.java	/^  protected void setDrawDefaults() {$/;"	m	class:PGraphicsOpenGL
setEmissive	core/PShape.java	/^  public void setEmissive(int emissive) {$/;"	m	class:PShape
setEmissive	core/PShape.java	/^  public void setEmissive(int index, int emissive) {$/;"	m	class:PShape
setEmissive	opengl/PShapeOpenGL.java	/^  public void setEmissive(int emissive) {$/;"	m	class:PShapeOpenGL
setEmissive	opengl/PShapeOpenGL.java	/^  public void setEmissive(int index, int emissive) {$/;"	m	class:PShapeOpenGL
setEmissiveAttribute	opengl/PShader.java	/^  protected void setEmissiveAttribute(int vboId, int size, int type,$/;"	m	class:PShader
setEmissiveImpl	opengl/PShapeOpenGL.java	/^  protected void setEmissiveImpl(int emissive) {$/;"	m	class:PShapeOpenGL
setFBO	opengl/FrameBuffer.java	/^  public void setFBO(int id) {$/;"	m	class:FrameBuffer
setFill	core/PShape.java	/^  public void setFill(boolean fill) {$/;"	m	class:PShape
setFill	core/PShape.java	/^  public void setFill(int fill) {$/;"	m	class:PShape
setFill	core/PShape.java	/^  public void setFill(int index, int fill) {$/;"	m	class:PShape
setFill	opengl/PGraphicsOpenGL.java	/^    void setFill(boolean fill) {$/;"	m	class:PGraphicsOpenGL.Tessellator
setFill	opengl/PShapeOpenGL.java	/^  public void setFill(boolean fill) {$/;"	m	class:PShapeOpenGL
setFill	opengl/PShapeOpenGL.java	/^  public void setFill(int fill) {$/;"	m	class:PShapeOpenGL
setFill	opengl/PShapeOpenGL.java	/^  public void setFill(int index, int fill) {$/;"	m	class:PShapeOpenGL
setFillImpl	opengl/PShapeOpenGL.java	/^  protected void setFillImpl(int fill) {$/;"	m	class:PShapeOpenGL
setFillOpacity	core/PShapeSVG.java	/^  void setFillOpacity(String opacityText) {$/;"	m	class:PShapeSVG
setFirstStrokeVertex	opengl/PShapeOpenGL.java	/^  protected void setFirstStrokeVertex(int n, int vert) {$/;"	m	class:PShapeOpenGL
setFirstTexIndex	opengl/PGraphicsOpenGL.java	/^    void setFirstTexIndex(int firstIndex, int firstCache) {$/;"	m	class:PGraphicsOpenGL.Tessellator
setFloat	data/JSONArray.java	/^  public JSONArray setFloat(int index, float value) {$/;"	m	class:JSONArray
setFloat	data/JSONObject.java	/^  public JSONObject setFloat(String key, float value) {$/;"	m	class:JSONObject
setFloat	data/Table.java	/^    public void setFloat(String columnName, float value) {$/;"	m	class:Table.RowPointer
setFloat	data/Table.java	/^    public void setFloat(int column, float value) {$/;"	m	class:Table.RowPointer
setFloat	data/Table.java	/^  public void setFloat(int row, String columnName, float value) {$/;"	m	class:Table
setFloat	data/Table.java	/^  public void setFloat(int row, int column, float value) {$/;"	m	class:Table
setFloat	data/TableRow.java	/^  public void setFloat(String columnName, float value);$/;"	m	interface:TableRow
setFloat	data/TableRow.java	/^  public void setFloat(int column, float value);$/;"	m	interface:TableRow
setFloat	data/XML.java	/^  public void setFloat(String name, float value) {$/;"	m	class:XML
setFloatContent	data/XML.java	/^  public void setFloatContent(float value) {$/;"	m	class:XML
setFlushMode	opengl/PGraphicsOpenGL.java	/^  protected void setFlushMode(int mode) {$/;"	m	class:PGraphicsOpenGL
setFontTexture	opengl/PGraphicsOpenGL.java	/^  protected void setFontTexture(PFont font, FontTexture fontTexture) {$/;"	m	class:PGraphicsOpenGL
setFps	opengl/PGL.java	/^  protected abstract void setFps(float fps);$/;"	m	class:PGL
setFps	opengl/PGL.java	/^  protected boolean setFps = false;$/;"	f	class:PGL
setFps	opengl/PJOGL.java	/^  protected void setFps(float fps) {$/;"	m	class:PJOGL
setFragmentShader	opengl/PShader.java	/^  public void setFragmentShader(String fragFilename) {$/;"	m	class:PShader
setFragmentShader	opengl/PShader.java	/^  public void setFragmentShader(String[] fragSource) {$/;"	m	class:PShader
setFragmentShader	opengl/PShader.java	/^  public void setFragmentShader(URL fragURL) {$/;"	m	class:PShader
setFrameRate	core/PGraphics.java	/^  public void setFrameRate(float frameRate) {  \/\/ ignore$/;"	m	class:PGraphics
setFrameRate	opengl/PGraphicsOpenGL.java	/^  public void setFrameRate(float frameRate) {$/;"	m	class:PGraphicsOpenGL
setFramebuffer	opengl/PGraphicsOpenGL.java	/^  protected static void setFramebuffer(FrameBuffer fbo) {$/;"	m	class:PGraphicsOpenGL
setIconImage	core/PApplet.java	/^  protected void setIconImage(Frame frame) {$/;"	m	class:PApplet
setImpl	core/PGraphicsJava2D.java	/^  protected void setImpl(PImage sourceImage,$/;"	m	class:PGraphicsJava2D
setImpl	core/PImage.java	/^  protected void setImpl(PImage sourceImage,$/;"	m	class:PImage
setImpl	opengl/PGraphicsOpenGL.java	/^  protected void setImpl(PImage sourceImage,$/;"	m	class:PGraphicsOpenGL
setInGeometry	opengl/PGraphicsOpenGL.java	/^    void setInGeometry(InGeometry in) {$/;"	m	class:PGraphicsOpenGL.Tessellator
setInt	data/JSONArray.java	/^  public JSONArray setInt(int index, int value) {$/;"	m	class:JSONArray
setInt	data/JSONObject.java	/^  public JSONObject setInt(String key, int value) {$/;"	m	class:JSONObject
setInt	data/Table.java	/^    public void setInt(String columnName, int value) {$/;"	m	class:Table.RowPointer
setInt	data/Table.java	/^    public void setInt(int column, int value) {$/;"	m	class:Table.RowPointer
setInt	data/Table.java	/^  public void setInt(int row, String columnName, int value) {$/;"	m	class:Table
setInt	data/Table.java	/^  public void setInt(int row, int column, int value) {$/;"	m	class:Table
setInt	data/TableRow.java	/^  public void setInt(String columnName, int value);$/;"	m	interface:TableRow
setInt	data/TableRow.java	/^  public void setInt(int column, int value);$/;"	m	interface:TableRow
setInt	data/XML.java	/^  public void setInt(String name, int value) {$/;"	m	class:XML
setIntContent	data/XML.java	/^  public void setIntContent(int value) {$/;"	m	class:XML
setJSONArray	data/JSONArray.java	/^  public JSONArray setJSONArray(int index, JSONArray value) {$/;"	m	class:JSONArray
setJSONArray	data/JSONObject.java	/^  public JSONObject setJSONArray(String key, JSONArray value) {$/;"	m	class:JSONObject
setJSONObject	data/JSONArray.java	/^  public JSONArray setJSONObject(int index, JSONObject value) {$/;"	m	class:JSONArray
setJSONObject	data/JSONObject.java	/^  public JSONObject setJSONObject(String key, JSONObject value) {$/;"	m	class:JSONObject
setKind	core/PShape.java	/^  public void setKind(int kind) {$/;"	m	class:PShape
setLastIndex	opengl/PGraphicsOpenGL.java	/^    void setLastIndex(int lasti, int lastb) {$/;"	m	class:PGraphicsOpenGL.TexCache
setLastStrokeVertex	opengl/PShapeOpenGL.java	/^  protected void setLastStrokeVertex(int vert) {$/;"	m	class:PShapeOpenGL
setLastTexIndex	opengl/PGraphicsOpenGL.java	/^    void setLastTexIndex(int lastIndex, int lastCache) {$/;"	m	class:PGraphicsOpenGL.Tessellator
setLineAttribute	opengl/PShader.java	/^  protected void setLineAttribute(int vboId, int size, int type,$/;"	m	class:PShader
setLineVertex	opengl/PGraphicsOpenGL.java	/^    void setLineVertex(int tessIdx, float[] vertices, int inIdx0, int inIdx1,$/;"	m	class:PGraphicsOpenGL.TessGeometry
setLineVertex	opengl/PGraphicsOpenGL.java	/^    void setLineVertex(int tessIdx, float[] vertices, int inIdx0, int rgba) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
setLoaded	core/PImage.java	/^  public void setLoaded() {  \/\/ ignore$/;"	m	class:PImage
setLoaded	core/PImage.java	/^  public void setLoaded(boolean l) {  \/\/ ignore$/;"	m	class:PImage
setLong	data/JSONArray.java	/^  public JSONArray setLong(int index, long value) {$/;"	m	class:JSONArray
setLong	data/JSONObject.java	/^  public JSONObject setLong(String key, long value) {$/;"	m	class:JSONObject
setLong	data/Table.java	/^    public void setLong(String columnName, long value) {$/;"	m	class:Table.RowPointer
setLong	data/Table.java	/^    public void setLong(int column, long value) {$/;"	m	class:Table.RowPointer
setLong	data/Table.java	/^  public void setLong(int row, String columnName, long value) {$/;"	m	class:Table
setLong	data/Table.java	/^  public void setLong(int row, int column, long value) {$/;"	m	class:Table
setLong	data/TableRow.java	/^  public void setLong(String columnName, long value);$/;"	m	interface:TableRow
setLong	data/TableRow.java	/^  public void setLong(int column, long value);$/;"	m	interface:TableRow
setLong	data/XML.java	/^  public void setLong(String name, long value) {$/;"	m	class:XML
setLongContent	data/XML.java	/^  public void setLongContent(long value) {$/;"	m	class:XML
setMag	core/PVector.java	/^  public PVector setMag(PVector target, float len) {$/;"	m	class:PVector
setMag	core/PVector.java	/^  public void setMag(float len) {$/;"	m	class:PVector
setMaterial	opengl/PGraphicsOpenGL.java	/^    void setMaterial(int fillColor, int strokeColor, float strokeWeight,$/;"	m	class:PGraphicsOpenGL.InGeometry
setMatrix	core/PApplet.java	/^  public void setMatrix(PMatrix source) {$/;"	m	class:PApplet
setMatrix	core/PApplet.java	/^  public void setMatrix(PMatrix2D source) {$/;"	m	class:PApplet
setMatrix	core/PApplet.java	/^  public void setMatrix(PMatrix3D source) {$/;"	m	class:PApplet
setMatrix	core/PGraphics.java	/^  public void setMatrix(PMatrix source) {$/;"	m	class:PGraphics
setMatrix	core/PGraphics.java	/^  public void setMatrix(PMatrix2D source) {$/;"	m	class:PGraphics
setMatrix	core/PGraphics.java	/^  public void setMatrix(PMatrix3D source) {$/;"	m	class:PGraphics
setMatrix	core/PGraphicsJava2D.java	/^  public void setMatrix(PMatrix2D source) {$/;"	m	class:PGraphicsJava2D
setMatrix	core/PGraphicsJava2D.java	/^  public void setMatrix(PMatrix3D source) {$/;"	m	class:PGraphicsJava2D
setMatrix	opengl/PGraphics2D.java	/^  public void setMatrix(PMatrix3D source) {$/;"	m	class:PGraphics2D
setMatrix	opengl/PGraphicsOpenGL.java	/^  public void setMatrix(PMatrix2D source) {$/;"	m	class:PGraphicsOpenGL
setMatrix	opengl/PGraphicsOpenGL.java	/^  public void setMatrix(PMatrix3D source) {$/;"	m	class:PGraphicsOpenGL
setMissingDouble	data/Table.java	/^  public void setMissingDouble(double value) {$/;"	m	class:Table
setMissingFloat	data/Table.java	/^  public void setMissingFloat(float value) {$/;"	m	class:Table
setMissingInt	data/Table.java	/^  public void setMissingInt(int value) {$/;"	m	class:Table
setMissingLong	data/Table.java	/^  public void setMissingLong(long value) {$/;"	m	class:Table
setMissingString	data/Table.java	/^  public void setMissingString(String value) {$/;"	m	class:Table
setModified	core/PImage.java	/^  public void setModified() {  \/\/ ignore$/;"	m	class:PImage
setModified	core/PImage.java	/^  public void setModified(boolean m) {  \/\/ ignore$/;"	m	class:PImage
setModified	opengl/Texture.java	/^  public void setModified() {$/;"	m	class:Texture
setModified	opengl/Texture.java	/^  public void setModified(boolean m) {$/;"	m	class:Texture
setModifiedLineAttributes	opengl/PShapeOpenGL.java	/^  protected void setModifiedLineAttributes(int first, int last) {$/;"	m	class:PShapeOpenGL
setModifiedLineColors	opengl/PShapeOpenGL.java	/^  protected void setModifiedLineColors(int first, int last) {$/;"	m	class:PShapeOpenGL
setModifiedLineVertices	opengl/PShapeOpenGL.java	/^  protected void setModifiedLineVertices(int first, int last) {$/;"	m	class:PShapeOpenGL
setModifiedPointAttributes	opengl/PShapeOpenGL.java	/^  protected void setModifiedPointAttributes(int first, int last) {$/;"	m	class:PShapeOpenGL
setModifiedPointColors	opengl/PShapeOpenGL.java	/^  protected void setModifiedPointColors(int first, int last) {$/;"	m	class:PShapeOpenGL
setModifiedPointVertices	opengl/PShapeOpenGL.java	/^  protected void setModifiedPointVertices(int first, int last) {$/;"	m	class:PShapeOpenGL
setModifiedPolyAmbient	opengl/PShapeOpenGL.java	/^  protected void setModifiedPolyAmbient(int first, int last) {$/;"	m	class:PShapeOpenGL
setModifiedPolyColors	opengl/PShapeOpenGL.java	/^  protected void setModifiedPolyColors(int first, int last) {$/;"	m	class:PShapeOpenGL
setModifiedPolyEmissive	opengl/PShapeOpenGL.java	/^  protected void setModifiedPolyEmissive(int first, int last) {$/;"	m	class:PShapeOpenGL
setModifiedPolyNormals	opengl/PShapeOpenGL.java	/^  protected void setModifiedPolyNormals(int first, int last) {$/;"	m	class:PShapeOpenGL
setModifiedPolyShininess	opengl/PShapeOpenGL.java	/^  protected void setModifiedPolyShininess(int first, int last) {$/;"	m	class:PShapeOpenGL
setModifiedPolySpecular	opengl/PShapeOpenGL.java	/^  protected void setModifiedPolySpecular(int first, int last) {$/;"	m	class:PShapeOpenGL
setModifiedPolyTexCoords	opengl/PShapeOpenGL.java	/^  protected void setModifiedPolyTexCoords(int first, int last) {$/;"	m	class:PShapeOpenGL
setModifiedPolyVertices	opengl/PShapeOpenGL.java	/^  protected void setModifiedPolyVertices(int first, int last) {$/;"	m	class:PShapeOpenGL
setName	core/PShape.java	/^  public void setName(String name) {$/;"	m	class:PShape
setName	data/XML.java	/^  public void setName(String newName) {$/;"	m	class:XML
setNative	core/PFont.java	/^  public void setNative(Object font) {$/;"	m	class:PFont
setNative	opengl/Texture.java	/^  public void setNative(IntBuffer pixBuf, int x, int y, int w, int h) {$/;"	m	class:Texture
setNative	opengl/Texture.java	/^  public void setNative(int[] pixels) {$/;"	m	class:Texture
setNative	opengl/Texture.java	/^  public void setNative(int[] pixels, int x, int y, int w, int h) {$/;"	m	class:Texture
setNormal	core/PShape.java	/^  public void setNormal(int index, float nx, float ny, float nz) {$/;"	m	class:PShape
setNormal	opengl/PGraphicsOpenGL.java	/^    void setNormal(float normalX, float normalY, float normalZ) {$/;"	m	class:PGraphicsOpenGL.InGeometry
setNormal	opengl/PShapeOpenGL.java	/^  public void setNormal(int index, float nx, float ny, float nz) {$/;"	m	class:PShapeOpenGL
setNormalAttribute	opengl/PShader.java	/^  protected void setNormalAttribute(int vboId, int size, int type,$/;"	m	class:PShader
setOpacity	core/PShapeSVG.java	/^  void setOpacity(String opacityText) {$/;"	m	class:PShapeSVG
setOutput	opengl/LineStroker.java	/^  public void setOutput(LineStroker output) {$/;"	m	class:LineStroker
setParameters	opengl/LineStroker.java	/^  public void setParameters(int lineWidth, int capStyle, int joinStyle,$/;"	m	class:LineStroker
setParameters	opengl/Texture.java	/^  protected void setParameters(Parameters params) {$/;"	m	class:Texture
setParams	core/PShape.java	/^  protected void setParams(float[] source) {$/;"	m	class:PShape
setParams	opengl/PShapeOpenGL.java	/^  public void setParams(float[] source) {$/;"	m	class:PShapeOpenGL
setParent	core/PGraphics.java	/^  public void setParent(PApplet parent) {  \/\/ ignore$/;"	m	class:PGraphics
setParent	core/PGraphicsRetina2D.java	/^  public void setParent(PApplet parent) {$/;"	m	class:PGraphicsRetina2D
setPath	core/PGraphics.java	/^  public void setPath(String path) {  \/\/ ignore$/;"	m	class:PGraphics
setPath	core/PShape.java	/^  protected void setPath(int vcount, float[][] verts, int ccount, int[] codes) {$/;"	m	class:PShape
setPath	core/PShape.java	/^  public void setPath(int vcount, float[][] verts) {$/;"	m	class:PShape
setPath	opengl/PShapeOpenGL.java	/^  public void setPath(int vcount, float[][] verts, int ccount, int[] codes) {$/;"	m	class:PShapeOpenGL
setPointAttribute	opengl/PShader.java	/^  protected void setPointAttribute(int vboId, int size, int type,$/;"	m	class:PShader
setPointVertex	opengl/PGraphicsOpenGL.java	/^    void setPointVertex(int tessIdx, InGeometry in, int inIdx) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
setPolyVertex	opengl/PGraphicsOpenGL.java	/^    void setPolyVertex(int tessIdx, float x, float y, float z, int rgba,$/;"	m	class:PGraphicsOpenGL.TessGeometry
setPolyVertex	opengl/PGraphicsOpenGL.java	/^    void setPolyVertex(int tessIdx, float x, float y, float z,$/;"	m	class:PGraphicsOpenGL.TessGeometry
setPrimary	core/PGraphics.java	/^  public void setPrimary(boolean primary) {  \/\/ ignore$/;"	m	class:PGraphics
setPrimary	opengl/PGraphicsOpenGL.java	/^  public void setPrimary(boolean primary) {$/;"	m	class:PGraphicsOpenGL
setProjection	opengl/PGraphicsOpenGL.java	/^  public void setProjection(PMatrix3D mat) {$/;"	m	class:PGraphicsOpenGL
setRawSize	opengl/PGraphicsOpenGL.java	/^    void setRawSize(int size) {$/;"	m	class:PGraphicsOpenGL.Tessellator
setRenderer	opengl/PGraphicsOpenGL.java	/^    protected void setRenderer(PGraphicsOpenGL pg) {$/;"	m	class:PGraphicsOpenGL.Tessellator
setRenderer	opengl/PShader.java	/^  protected void setRenderer(PGraphicsOpenGL pg) {$/;"	m	class:PShader
setRow	data/Table.java	/^    public void setRow(int row) {$/;"	m	class:Table.RowPointer
setRow	data/Table.java	/^  public void setRow(int row, Object[] pieces) {$/;"	m	class:Table
setRowCol	data/Table.java	/^  protected void setRowCol(int row, int col, Object piece) {$/;"	m	class:Table
setRowCount	data/Table.java	/^  public void setRowCount(int newCount) {$/;"	m	class:Table
setShininess	core/PShape.java	/^  public void setShininess(float shine) {$/;"	m	class:PShape
setShininess	core/PShape.java	/^  public void setShininess(int index, float shine) {$/;"	m	class:PShape
setShininess	opengl/PShapeOpenGL.java	/^  public void setShininess(float shininess) {$/;"	m	class:PShapeOpenGL
setShininess	opengl/PShapeOpenGL.java	/^  public void setShininess(int index, float shine) {$/;"	m	class:PShapeOpenGL
setShininessAttribute	opengl/PShader.java	/^  protected void setShininessAttribute(int vboId, int size, int type,$/;"	m	class:PShader
setShininessImpl	opengl/PShapeOpenGL.java	/^  protected void setShininessImpl(float shininess) {$/;"	m	class:PShapeOpenGL
setSize	core/PGraphics.java	/^  public void setSize(int w, int h) {  \/\/ ignore$/;"	m	class:PGraphics
setSize	core/PGraphicsJava2D.java	/^  public void setSize(int iwidth, int iheight) {  \/\/ ignore$/;"	m	class:PGraphicsJava2D
setSize	opengl/PGraphicsOpenGL.java	/^  public void setSize(int iwidth, int iheight) {$/;"	m	class:PGraphicsOpenGL
setSize	opengl/Texture.java	/^  protected void setSize(int w, int h) {$/;"	m	class:Texture
setSpecular	core/PShape.java	/^  public void setSpecular(int index, int specular) {$/;"	m	class:PShape
setSpecular	core/PShape.java	/^  public void setSpecular(int specular) {$/;"	m	class:PShape
setSpecular	opengl/PShapeOpenGL.java	/^  public void setSpecular(int index, int specular) {$/;"	m	class:PShapeOpenGL
setSpecular	opengl/PShapeOpenGL.java	/^  public void setSpecular(int specular) {$/;"	m	class:PShapeOpenGL
setSpecularAttribute	opengl/PShader.java	/^  protected void setSpecularAttribute(int vboId, int size, int type,$/;"	m	class:PShader
setSpecularImpl	opengl/PShapeOpenGL.java	/^  protected void setSpecularImpl(int specular) {$/;"	m	class:PShapeOpenGL
setString	data/JSONArray.java	/^  public JSONArray setString(int index, String value) {$/;"	m	class:JSONArray
setString	data/JSONObject.java	/^  public JSONObject setString(String key, String value) {$/;"	m	class:JSONObject
setString	data/Table.java	/^    public void setString(String columnName, String value) {$/;"	m	class:Table.RowPointer
setString	data/Table.java	/^    public void setString(int column, String value) {$/;"	m	class:Table.RowPointer
setString	data/Table.java	/^  public void setString(int row, String columnName, String value) {$/;"	m	class:Table
setString	data/Table.java	/^  public void setString(int row, int column, String value) {$/;"	m	class:Table
setString	data/TableRow.java	/^  public void setString(String columnName, String value);$/;"	m	interface:TableRow
setString	data/TableRow.java	/^  public void setString(int column, String value);$/;"	m	interface:TableRow
setString	data/XML.java	/^  public void setString(String name, String value) {$/;"	m	class:XML
setStroke	core/PShape.java	/^  public void setStroke(boolean stroke) {$/;"	m	class:PShape
setStroke	core/PShape.java	/^  public void setStroke(int index, int stroke) {$/;"	m	class:PShape
setStroke	core/PShape.java	/^  public void setStroke(int stroke) {$/;"	m	class:PShape
setStroke	opengl/PGraphicsOpenGL.java	/^    void setStroke(boolean stroke) {$/;"	m	class:PGraphicsOpenGL.Tessellator
setStroke	opengl/PShapeOpenGL.java	/^  public void setStroke(boolean stroke) {$/;"	m	class:PShapeOpenGL
setStroke	opengl/PShapeOpenGL.java	/^  public void setStroke(int index, int stroke) {$/;"	m	class:PShapeOpenGL
setStroke	opengl/PShapeOpenGL.java	/^  public void setStroke(int stroke) {$/;"	m	class:PShapeOpenGL
setStrokeCap	core/PShape.java	/^  public void setStrokeCap(int cap) {$/;"	m	class:PShape
setStrokeCap	core/PShapeSVG.java	/^  void setStrokeCap(String linecap) {$/;"	m	class:PShapeSVG
setStrokeCap	opengl/PGraphicsOpenGL.java	/^    void setStrokeCap(int strokeCap) {$/;"	m	class:PGraphicsOpenGL.Tessellator
setStrokeCap	opengl/PShapeOpenGL.java	/^  public void setStrokeCap(int cap) {$/;"	m	class:PShapeOpenGL
setStrokeColor	opengl/PGraphicsOpenGL.java	/^    void setStrokeColor(int color) {$/;"	m	class:PGraphicsOpenGL.Tessellator
setStrokeImpl	opengl/PShapeOpenGL.java	/^  protected void setStrokeImpl(int stroke) {$/;"	m	class:PShapeOpenGL
setStrokeJoin	core/PShape.java	/^  public void setStrokeJoin(int join) {$/;"	m	class:PShape
setStrokeJoin	core/PShapeSVG.java	/^  void setStrokeJoin(String linejoin) {$/;"	m	class:PShapeSVG
setStrokeJoin	opengl/PGraphicsOpenGL.java	/^    void setStrokeJoin(int strokeJoin) {$/;"	m	class:PGraphicsOpenGL.Tessellator
setStrokeJoin	opengl/PShapeOpenGL.java	/^  public void setStrokeJoin(int join) {$/;"	m	class:PShapeOpenGL
setStrokeOpacity	core/PShapeSVG.java	/^  void setStrokeOpacity(String opacityText) {$/;"	m	class:PShapeSVG
setStrokeWeight	core/PShape.java	/^  public void setStrokeWeight(float weight) {$/;"	m	class:PShape
setStrokeWeight	core/PShape.java	/^  public void setStrokeWeight(int index, float weight) {$/;"	m	class:PShape
setStrokeWeight	core/PShapeSVG.java	/^  void setStrokeWeight(String lineweight) {$/;"	m	class:PShapeSVG
setStrokeWeight	opengl/PGraphicsOpenGL.java	/^    void setStrokeWeight(float weight) {$/;"	m	class:PGraphicsOpenGL.Tessellator
setStrokeWeight	opengl/PShapeOpenGL.java	/^  public void setStrokeWeight(float weight) {$/;"	m	class:PShapeOpenGL
setStrokeWeight	opengl/PShapeOpenGL.java	/^  public void setStrokeWeight(int index, float weight) {$/;"	m	class:PShapeOpenGL
setStrokeWeightImpl	opengl/PShapeOpenGL.java	/^  protected void setStrokeWeightImpl(float weight) {$/;"	m	class:PShapeOpenGL
setSubsetting	core/PFont.java	/^  public void setSubsetting() {$/;"	m	class:PFont
setTableType	data/Table.java	/^  public void setTableType(String type) {$/;"	m	class:Table
setTessGeometry	opengl/PGraphicsOpenGL.java	/^    void setTessGeometry(TessGeometry tess) {$/;"	m	class:PGraphicsOpenGL.Tessellator
setTexCache	opengl/PGraphicsOpenGL.java	/^    void setTexCache(TexCache texCache, PImage prevTexImage,$/;"	m	class:PGraphicsOpenGL.Tessellator
setTexcoordAttribute	opengl/PShader.java	/^  protected void setTexcoordAttribute(int vboId, int size, int type,$/;"	m	class:PShader
setTexture	core/PShape.java	/^  public void setTexture(PImage tex) {$/;"	m	class:PShape
setTexture	opengl/FontTexture.java	/^  public void setTexture(int idx) {$/;"	m	class:FontTexture
setTexture	opengl/PShader.java	/^  protected void setTexture(Texture tex) {$/;"	m	class:PShader
setTexture	opengl/PShapeOpenGL.java	/^  public void setTexture(PImage tex) {$/;"	m	class:PShapeOpenGL
setTextureImpl	opengl/PShapeOpenGL.java	/^  protected void setTextureImpl(PImage tex) {$/;"	m	class:PShapeOpenGL
setTextureMode	core/PShape.java	/^  public void setTextureMode(int mode) {$/;"	m	class:PShape
setTextureMode	opengl/PShapeOpenGL.java	/^  public void setTextureMode(int mode) {$/;"	m	class:PShapeOpenGL
setTextureModeImpl	opengl/PShapeOpenGL.java	/^  protected void setTextureModeImpl(int mode) {$/;"	m	class:PShapeOpenGL
setTextureUV	core/PShape.java	/^  public void setTextureUV(int index, float u, float v) {$/;"	m	class:PShape
setTextureUV	opengl/PShapeOpenGL.java	/^  public void setTextureUV(int index, float u, float v) {$/;"	m	class:PShapeOpenGL
setTint	core/PShape.java	/^  public void setTint(boolean tint) {$/;"	m	class:PShape
setTint	core/PShape.java	/^  public void setTint(int fill) {$/;"	m	class:PShape
setTint	core/PShape.java	/^  public void setTint(int index, int tint) {$/;"	m	class:PShape
setTint	opengl/PShapeOpenGL.java	/^  public void setTint(boolean tint) {$/;"	m	class:PShapeOpenGL
setTint	opengl/PShapeOpenGL.java	/^  public void setTint(int index, int tint) {$/;"	m	class:PShapeOpenGL
setTint	opengl/PShapeOpenGL.java	/^  public void setTint(int tint) {$/;"	m	class:PShapeOpenGL
setTintImpl	opengl/PShapeOpenGL.java	/^  protected void setTintImpl(int tint) {$/;"	m	class:PShapeOpenGL
setTransform	opengl/PGraphicsOpenGL.java	/^    void setTransform(PMatrix transform) {$/;"	m	class:PGraphicsOpenGL.Tessellator
setType	opengl/PShader.java	/^  protected void setType(int type) {$/;"	m	class:PShader
setUniformImpl	opengl/PShader.java	/^  protected void setUniformImpl(String name, int type, Object value) {$/;"	m	class:PShader
setUniformMatrix	opengl/PShader.java	/^  protected void setUniformMatrix(int loc, float[] mat) {$/;"	m	class:PShader
setUniformTex	opengl/PShader.java	/^  protected void setUniformTex(int loc, Texture tex) {$/;"	m	class:PShader
setUniformValue	opengl/PShader.java	/^  protected void setUniformValue(int loc, float x) {$/;"	m	class:PShader
setUniformValue	opengl/PShader.java	/^  protected void setUniformValue(int loc, float x, float y) {$/;"	m	class:PShader
setUniformValue	opengl/PShader.java	/^  protected void setUniformValue(int loc, float x, float y, float z) {$/;"	m	class:PShader
setUniformValue	opengl/PShader.java	/^  protected void setUniformValue(int loc, float x, float y, float z, float w) {$/;"	m	class:PShader
setUniformValue	opengl/PShader.java	/^  protected void setUniformValue(int loc, int x) {$/;"	m	class:PShader
setUniformValue	opengl/PShader.java	/^  protected void setUniformValue(int loc, int x, int y) {$/;"	m	class:PShader
setUniformValue	opengl/PShader.java	/^  protected void setUniformValue(int loc, int x, int y, int z) {$/;"	m	class:PShader
setUniformValue	opengl/PShader.java	/^  protected void setUniformValue(int loc, int x, int y, int z, int w) {$/;"	m	class:PShader
setUniformVector	opengl/PShader.java	/^  protected void setUniformVector(int loc, float[] vec, int ncoords,$/;"	m	class:PShader
setUniformVector	opengl/PShader.java	/^  protected void setUniformVector(int loc, int[] vec, int ncoords,$/;"	m	class:PShader
setVertex	core/PShape.java	/^  public void setVertex(int index, PVector vec) {$/;"	m	class:PShape
setVertex	core/PShape.java	/^  public void setVertex(int index, float x, float y) {$/;"	m	class:PShape
setVertex	core/PShape.java	/^  public void setVertex(int index, float x, float y, float z) {$/;"	m	class:PShape
setVertex	opengl/PShapeOpenGL.java	/^  public void setVertex(int index, PVector vec) {$/;"	m	class:PShapeOpenGL
setVertex	opengl/PShapeOpenGL.java	/^  public void setVertex(int index, float x, float y) {$/;"	m	class:PShapeOpenGL
setVertex	opengl/PShapeOpenGL.java	/^  public void setVertex(int index, float x, float y, float z) {$/;"	m	class:PShapeOpenGL
setVertexAttribute	opengl/PShader.java	/^  protected void setVertexAttribute(int vboId, int size, int type,$/;"	m	class:PShader
setVertexShader	opengl/PShader.java	/^  public void setVertexShader(String vertFilename) {$/;"	m	class:PShader
setVertexShader	opengl/PShader.java	/^  public void setVertexShader(String[] vertSource) {$/;"	m	class:PShader
setVertexShader	opengl/PShader.java	/^  public void setVertexShader(URL vertURL) {$/;"	m	class:PShader
setViewport	opengl/PGraphicsOpenGL.java	/^  protected void setViewport() {$/;"	m	class:PGraphicsOpenGL
setVisible	core/PShape.java	/^  public void setVisible(boolean visible) {$/;"	m	class:PShape
setWidth	core/PFont.java	/^    public int setWidth;$/;"	f	class:PFont.Glyph
setWindingRule	opengl/LinePath.java	/^  public final void setWindingRule(int rule) {$/;"	m	class:LinePath
setWindingRule	opengl/PGL.java	/^    public void setWindingRule(int rule);$/;"	m	interface:PGL.Tessellator
setWindingRule	opengl/PJOGL.java	/^    public void setWindingRule(int rule) {$/;"	m	class:PJOGL.Tessellator
setgetPixels	opengl/PGraphicsOpenGL.java	/^  protected boolean setgetPixels;$/;"	f	class:PGraphicsOpenGL
settingsInited	core/PGraphics.java	/^  protected boolean settingsInited;$/;"	f	class:PGraphics
setup	core/PApplet.java	/^  public void setup() {$/;"	m	class:PApplet
setup	opengl/PShader.java	/^  protected void setup() {$/;"	m	class:PShader
setupExternalMessages	core/PApplet.java	/^  public void setupExternalMessages() {$/;"	m	class:PApplet
setupFrameResizeListener	core/PApplet.java	/^  public void setupFrameResizeListener() {$/;"	m	class:PApplet
shader	core/PApplet.java	/^  public void shader(PShader shader) {$/;"	m	class:PApplet
shader	core/PApplet.java	/^  public void shader(PShader shader, int kind) {$/;"	m	class:PApplet
shader	core/PGraphics.java	/^  public void shader(PShader shader) {$/;"	m	class:PGraphics
shader	core/PGraphics.java	/^  public void shader(PShader shader, int kind) {$/;"	m	class:PGraphics
shader	opengl/PGraphicsOpenGL.java	/^  public void shader(PShader shader) {$/;"	m	class:PGraphicsOpenGL
shader	opengl/PGraphicsOpenGL.java	/^  public void shader(PShader shader, int kind) {$/;"	m	class:PGraphicsOpenGL
shaderBinary	opengl/PGL.java	/^  public abstract void shaderBinary(int count, IntBuffer shaders, int binaryFormat, Buffer binary, int length);$/;"	m	class:PGL
shaderBinary	opengl/PJOGL.java	/^  public void shaderBinary(int count, IntBuffer shaders, int binaryFormat, Buffer binary, int length) {$/;"	m	class:PJOGL
shaderSource	opengl/PGL.java	/^  public abstract void shaderSource(int shader, String source);$/;"	m	class:PGL
shaderSource	opengl/PJOGL.java	/^  public void shaderSource(int shader, String source) {$/;"	m	class:PJOGL
shape	core/PApplet.java	/^  public void shape(PShape shape) {$/;"	m	class:PApplet
shape	core/PApplet.java	/^  public void shape(PShape shape, float a, float b, float c, float d) {$/;"	m	class:PApplet
shape	core/PApplet.java	/^  public void shape(PShape shape, float x, float y) {$/;"	m	class:PApplet
shape	core/PGraphics.java	/^  protected int shape;$/;"	f	class:PGraphics
shape	core/PGraphics.java	/^  protected void shape(PShape shape, float x, float y, float z) {$/;"	m	class:PGraphics
shape	core/PGraphics.java	/^  protected void shape(PShape shape, float x, float y, float z, float c, float d, float e) {$/;"	m	class:PGraphics
shape	core/PGraphics.java	/^  public void shape(PShape shape) {$/;"	m	class:PGraphics
shape	core/PGraphics.java	/^  public void shape(PShape shape, float a, float b, float c, float d) {$/;"	m	class:PGraphics
shape	core/PGraphics.java	/^  public void shape(PShape shape, float x, float y) {$/;"	m	class:PGraphics
shape	opengl/PGraphics2D.java	/^  public void shape(PShape shape) {$/;"	m	class:PGraphics2D
shape	opengl/PGraphics2D.java	/^  public void shape(PShape shape, float a, float b, float c, float d) {$/;"	m	class:PGraphics2D
shape	opengl/PGraphics2D.java	/^  public void shape(PShape shape, float x, float y) {$/;"	m	class:PGraphics2D
shape	opengl/PGraphics2D.java	/^  public void shape(PShape shape, float x, float y, float z) {$/;"	m	class:PGraphics2D
shape	opengl/PGraphics2D.java	/^  public void shape(PShape shape, float x, float y, float z,$/;"	m	class:PGraphics2D
shape	opengl/PGraphicsOpenGL.java	/^  protected void shape(PShape shape, float x, float y, float z) {$/;"	m	class:PGraphicsOpenGL
shape	opengl/PGraphicsOpenGL.java	/^  protected void shape(PShape shape, float x, float y, float z,$/;"	m	class:PGraphicsOpenGL
shapeCreated	opengl/PShapeOpenGL.java	/^  protected boolean shapeCreated = false;$/;"	f	class:PShapeOpenGL
shapeMode	core/PApplet.java	/^  public void shapeMode(int mode) {$/;"	m	class:PApplet
shapeMode	core/PGraphics.java	/^  public int shapeMode;$/;"	f	class:PGraphics
shapeMode	core/PGraphics.java	/^  public void shapeMode(int mode) {$/;"	m	class:PGraphics
shapeMode	core/PStyle.java	/^  public int shapeMode;$/;"	f	class:PStyle
shearX	core/PApplet.java	/^  public void shearX(float angle) {$/;"	m	class:PApplet
shearX	core/PGraphics.java	/^  public void shearX(float angle) {$/;"	m	class:PGraphics
shearX	core/PGraphicsJava2D.java	/^  public void shearX(float angle) {$/;"	m	class:PGraphicsJava2D
shearX	core/PMatrix.java	/^  public void shearX(float angle);$/;"	m	interface:PMatrix
shearX	core/PMatrix2D.java	/^  public void shearX(float angle) {$/;"	m	class:PMatrix2D
shearX	core/PMatrix3D.java	/^  public void shearX(float angle) {$/;"	m	class:PMatrix3D
shearX	opengl/PGraphicsOpenGL.java	/^  public void shearX(float angle) {$/;"	m	class:PGraphicsOpenGL
shearY	core/PApplet.java	/^  public void shearY(float angle) {$/;"	m	class:PApplet
shearY	core/PGraphics.java	/^  public void shearY(float angle) {$/;"	m	class:PGraphics
shearY	core/PGraphicsJava2D.java	/^  public void shearY(float angle) {$/;"	m	class:PGraphicsJava2D
shearY	core/PMatrix.java	/^  public void shearY(float angle);$/;"	m	interface:PMatrix
shearY	core/PMatrix2D.java	/^  public void shearY(float angle) {$/;"	m	class:PMatrix2D
shearY	core/PMatrix3D.java	/^  public void shearY(float angle) {$/;"	m	class:PMatrix3D
shearY	opengl/PGraphicsOpenGL.java	/^  public void shearY(float angle) {$/;"	m	class:PGraphicsOpenGL
shininess	core/PApplet.java	/^  public void shininess(float shine) {$/;"	m	class:PApplet
shininess	core/PGraphics.java	/^  public float shininess;$/;"	f	class:PGraphics
shininess	core/PGraphics.java	/^  public void shininess(float shine) {$/;"	m	class:PGraphics
shininess	core/PShape.java	/^  protected float shininess;$/;"	f	class:PShape
shininess	core/PShape.java	/^  public void shininess(float shine) {$/;"	m	class:PShape
shininess	core/PStyle.java	/^  public float shininess;$/;"	f	class:PStyle
shininess	opengl/PGraphicsOpenGL.java	/^    float[] shininess;$/;"	f	class:PGraphicsOpenGL.InGeometry
shininessFactor	opengl/PGraphicsOpenGL.java	/^    float shininessFactor;$/;"	f	class:PGraphicsOpenGL.InGeometry
shininessLoc	opengl/PShader.java	/^  protected int shininessLoc;$/;"	f	class:PShader
shorten	core/PApplet.java	/^  static public Object shorten(Object list) {$/;"	m	class:PApplet
shorten	core/PApplet.java	/^  static public String[] shorten(String list[]) {$/;"	m	class:PApplet
shorten	core/PApplet.java	/^  static public boolean[] shorten(boolean list[]) {$/;"	m	class:PApplet
shorten	core/PApplet.java	/^  static public byte[] shorten(byte list[]) {$/;"	m	class:PApplet
shorten	core/PApplet.java	/^  static public char[] shorten(char list[]) {$/;"	m	class:PApplet
shorten	core/PApplet.java	/^  static public float[] shorten(float list[]) {$/;"	m	class:PApplet
shorten	core/PApplet.java	/^  static public int[] shorten(int list[]) {$/;"	m	class:PApplet
showDepthWarning	core/PApplet.java	/^  static public void showDepthWarning(String method) {$/;"	m	class:PApplet
showDepthWarning	core/PGraphics.java	/^  static public void showDepthWarning(String method) {$/;"	m	class:PGraphics
showDepthWarningXYZ	core/PApplet.java	/^  static public void showDepthWarningXYZ(String method) {$/;"	m	class:PApplet
showDepthWarningXYZ	core/PGraphics.java	/^  static public void showDepthWarningXYZ(String method) {$/;"	m	class:PGraphics
showException	core/PGraphics.java	/^  static public void showException(String msg) {  \/\/ ignore$/;"	m	class:PGraphics
showMethodWarning	core/PApplet.java	/^  static public void showMethodWarning(String method) {$/;"	m	class:PApplet
showMethodWarning	core/PGraphics.java	/^  static public void showMethodWarning(String method) {$/;"	m	class:PGraphics
showMissingWarning	core/PApplet.java	/^  static public void showMissingWarning(String method) {$/;"	m	class:PApplet
showMissingWarning	core/PGraphics.java	/^  static public void showMissingWarning(String method) {$/;"	m	class:PGraphics
showVariationWarning	core/PApplet.java	/^  static public void showVariationWarning(String str) {$/;"	m	class:PApplet
showVariationWarning	core/PGraphics.java	/^  static public void showVariationWarning(String str) {$/;"	m	class:PGraphics
showWarning	core/PGraphics.java	/^  static public void showWarning(String msg) {  \/\/ ignore$/;"	m	class:PGraphics
showWarning	core/PGraphics.java	/^  static public void showWarning(String msg, Object... args) {  \/\/ ignore$/;"	m	class:PGraphics
shrinkImage	core/PImage.java	/^  static private BufferedImage shrinkImage(BufferedImage img,$/;"	m	class:PImage	file:
shuffle	data/FloatList.java	/^  public void shuffle() {$/;"	m	class:FloatList
shuffle	data/FloatList.java	/^  public void shuffle(PApplet sketch) {$/;"	m	class:FloatList
shuffle	data/IntList.java	/^  public void shuffle() {$/;"	m	class:IntList
shuffle	data/IntList.java	/^  public void shuffle(PApplet sketch) {$/;"	m	class:IntList
shuffle	data/StringList.java	/^  public void shuffle() {$/;"	m	class:StringList
shuffle	data/StringList.java	/^  public void shuffle(PApplet sketch) {$/;"	m	class:StringList
side	opengl/LineStroker.java	/^  private boolean side(int x, int y, int x0, int y0, int x1, int y1) {$/;"	m	class:LineStroker	file:
sin	core/PApplet.java	/^  static public final float sin(float angle) {$/;"	m	class:PApplet
sin	core/PMatrix2D.java	/^  static private final float sin(float angle) {$/;"	m	class:PMatrix2D	file:
sin	core/PMatrix3D.java	/^  static private final float sin(float angle) {$/;"	m	class:PMatrix3D	file:
sinLUT	core/PGraphics.java	/^  static final protected float sinLUT[];$/;"	f	class:PGraphics
sinkFBO	opengl/PJOGL.java	/^  protected static FBObject sinkFBO;$/;"	f	class:PJOGL
size	core/PApplet.java	/^  public void size(final int w, final int h,$/;"	m	class:PApplet
size	core/PApplet.java	/^  public void size(int w, int h) {$/;"	m	class:PApplet
size	core/PApplet.java	/^  public void size(int w, int h, String renderer) {$/;"	m	class:PApplet
size	core/PFont.java	/^  protected int size;$/;"	f	class:PFont
size	data/FloatDict.java	/^  public int size() {$/;"	m	class:FloatDict
size	data/FloatList.java	/^  public int size() {$/;"	m	class:FloatList
size	data/IntDict.java	/^  public int size() {$/;"	m	class:IntDict
size	data/IntList.java	/^  public int size() {$/;"	m	class:IntList
size	data/JSONArray.java	/^  public int size() {$/;"	m	class:JSONArray
size	data/JSONObject.java	/^  public int size() {$/;"	m	class:JSONObject
size	data/Sort.java	/^  abstract public int size();$/;"	m	class:Sort
size	data/StringDict.java	/^  public int size() {$/;"	m	class:StringDict
size	data/StringList.java	/^  public int size() {$/;"	m	class:StringList
size	data/Table.java	/^    int size() {$/;"	m	class:Table.HashMapBlows
size	opengl/PGraphicsOpenGL.java	/^    int size;$/;"	f	class:PGraphicsOpenGL.IndexCache
size	opengl/PGraphicsOpenGL.java	/^    int size;$/;"	f	class:PGraphicsOpenGL.TexCache
sized	opengl/PGraphicsOpenGL.java	/^  protected boolean sized;$/;"	f	class:PGraphicsOpenGL
sketchFile	core/PApplet.java	/^  public File sketchFile(String where) {$/;"	m	class:PApplet
sketchFullScreen	core/PApplet.java	/^  public boolean sketchFullScreen() {$/;"	m	class:PApplet
sketchHeight	core/PApplet.java	/^  public int sketchHeight() {$/;"	m	class:PApplet
sketchPath	core/PApplet.java	/^  public String sketchPath(String where) {$/;"	m	class:PApplet
sketchPath	core/PApplet.java	/^  public String sketchPath; \/\/folder;$/;"	f	class:PApplet
sketchQuality	core/PApplet.java	/^  public int sketchQuality() {$/;"	m	class:PApplet
sketchRenderer	core/PApplet.java	/^  public String sketchRenderer() {$/;"	m	class:PApplet
sketchWidth	core/PApplet.java	/^  public int sketchWidth() {$/;"	m	class:PApplet
skipTo	data/JSONTokener.java	/^  public char skipTo(char to) {$/;"	m	class:JSONTokener
smooth	core/PApplet.java	/^  public void smooth() {$/;"	m	class:PApplet
smooth	core/PApplet.java	/^  public void smooth(int level) {$/;"	m	class:PApplet
smooth	core/PFont.java	/^  protected boolean smooth;$/;"	f	class:PFont
smooth	core/PGraphics.java	/^  public boolean smooth;$/;"	f	class:PGraphics
smooth	core/PGraphics.java	/^  public void smooth() {$/;"	m	class:PGraphics
smooth	core/PGraphics.java	/^  public void smooth(int level) {$/;"	m	class:PGraphics
smooth	core/PGraphicsJava2D.java	/^  public void smooth() {$/;"	m	class:PGraphicsJava2D
smooth	core/PGraphicsJava2D.java	/^  public void smooth(int antialias) {$/;"	m	class:PGraphicsJava2D
smooth	opengl/PGraphicsOpenGL.java	/^  public void smooth() {$/;"	m	class:PGraphicsOpenGL
smooth	opengl/PGraphicsOpenGL.java	/^  public void smooth(int level) {$/;"	m	class:PGraphicsOpenGL
smoothCallCount	opengl/PGraphicsOpenGL.java	/^  protected int smoothCallCount = 0;$/;"	f	class:PGraphicsOpenGL
smoothDisabled	opengl/PGraphicsOpenGL.java	/^  protected boolean smoothDisabled = false;$/;"	f	class:PGraphicsOpenGL
solid	core/PShape.java	/^  protected void solid(boolean solid) {$/;"	m	class:PShape
solid	opengl/PShapeOpenGL.java	/^  protected boolean solid;$/;"	f	class:PShapeOpenGL
solid	opengl/PShapeOpenGL.java	/^  public void solid(boolean solid) {$/;"	m	class:PShapeOpenGL
sort	core/PApplet.java	/^  static public String[] sort(String list[]) {$/;"	m	class:PApplet
sort	core/PApplet.java	/^  static public String[] sort(String[] list, int count) {$/;"	m	class:PApplet
sort	core/PApplet.java	/^  static public byte[] sort(byte list[]) {$/;"	m	class:PApplet
sort	core/PApplet.java	/^  static public byte[] sort(byte[] list, int count) {$/;"	m	class:PApplet
sort	core/PApplet.java	/^  static public char[] sort(char list[]) {$/;"	m	class:PApplet
sort	core/PApplet.java	/^  static public char[] sort(char[] list, int count) {$/;"	m	class:PApplet
sort	core/PApplet.java	/^  static public float[] sort(float list[]) {$/;"	m	class:PApplet
sort	core/PApplet.java	/^  static public float[] sort(float[] list, int count) {$/;"	m	class:PApplet
sort	core/PApplet.java	/^  static public int[] sort(int list[]) {$/;"	m	class:PApplet
sort	core/PApplet.java	/^  static public int[] sort(int[] list, int count) {$/;"	m	class:PApplet
sort	data/FloatList.java	/^  public void sort() {$/;"	m	class:FloatList
sort	data/IntList.java	/^  public void sort() {$/;"	m	class:IntList
sort	data/Sort.java	/^  protected void sort(int i, int j) {$/;"	m	class:Sort
sort	data/StringList.java	/^  public void sort() {$/;"	m	class:StringList
sort	data/Table.java	/^  protected void sort(final int column, final boolean reverse) {$/;"	m	class:Table
sort	data/Table.java	/^  public void sort(String columnName) {$/;"	m	class:Table
sort	data/Table.java	/^  public void sort(int column) {$/;"	m	class:Table
sortImpl	data/FloatDict.java	/^  protected void sortImpl(final boolean useKeys, final boolean reverse) {$/;"	m	class:FloatDict
sortImpl	data/IntDict.java	/^  protected void sortImpl(final boolean useKeys, final boolean reverse) {$/;"	m	class:IntDict
sortImpl	data/StringDict.java	/^  protected void sortImpl(final boolean useKeys, final boolean reverse) {$/;"	m	class:StringDict
sortImpl	data/StringList.java	/^  private void sortImpl(final boolean reverse) {$/;"	m	class:StringList	file:
sortKeys	data/FloatDict.java	/^  public void sortKeys() {$/;"	m	class:FloatDict
sortKeys	data/IntDict.java	/^  public void sortKeys() {$/;"	m	class:IntDict
sortKeys	data/StringDict.java	/^  public void sortKeys() {$/;"	m	class:StringDict
sortKeysReverse	data/FloatDict.java	/^  public void sortKeysReverse() {$/;"	m	class:FloatDict
sortKeysReverse	data/IntDict.java	/^  public void sortKeysReverse() {$/;"	m	class:IntDict
sortKeysReverse	data/StringDict.java	/^  public void sortKeysReverse() {$/;"	m	class:StringDict
sortReverse	data/FloatList.java	/^  public void sortReverse() {$/;"	m	class:FloatList
sortReverse	data/IntList.java	/^  public void sortReverse() {$/;"	m	class:IntList
sortReverse	data/StringList.java	/^  public void sortReverse() {$/;"	m	class:StringList
sortReverse	data/Table.java	/^  public void sortReverse(String columnName) {$/;"	m	class:Table
sortReverse	data/Table.java	/^  public void sortReverse(int column) {$/;"	m	class:Table
sortTriangles	opengl/PGraphicsOpenGL.java	/^  void sortTriangles() {$/;"	m	class:PGraphicsOpenGL
sortValues	data/FloatDict.java	/^  public void sortValues() {$/;"	m	class:FloatDict
sortValues	data/IntDict.java	/^  public void sortValues() {$/;"	m	class:IntDict
sortValues	data/StringDict.java	/^  public void sortValues() {$/;"	m	class:StringDict
sortValuesReverse	data/FloatDict.java	/^  public void sortValuesReverse() {$/;"	m	class:FloatDict
sortValuesReverse	data/IntDict.java	/^  public void sortValuesReverse() {$/;"	m	class:IntDict
sortValuesReverse	data/StringDict.java	/^  public void sortValuesReverse() {$/;"	m	class:StringDict
sortedPolyTriangles	opengl/PGraphicsOpenGL.java	/^  Triangle[] sortedPolyTriangles = null;$/;"	f	class:PGraphicsOpenGL
sortedTriangleCount	opengl/PGraphicsOpenGL.java	/^  int sortedTriangleCount = 0;$/;"	f	class:PGraphicsOpenGL
specular	core/PApplet.java	/^  public void specular(float gray) {$/;"	m	class:PApplet
specular	core/PApplet.java	/^  public void specular(float v1, float v2, float v3) {$/;"	m	class:PApplet
specular	core/PApplet.java	/^  public void specular(int rgb) {$/;"	m	class:PApplet
specular	core/PGraphics.java	/^  public void specular(float gray) {$/;"	m	class:PGraphics
specular	core/PGraphics.java	/^  public void specular(float v1, float v2, float v3) {$/;"	m	class:PGraphics
specular	core/PGraphics.java	/^  public void specular(int rgb) {$/;"	m	class:PGraphics
specular	core/PShape.java	/^  public void specular(float gray) {$/;"	m	class:PShape
specular	core/PShape.java	/^  public void specular(float x, float y, float z) {$/;"	m	class:PShape
specular	core/PShape.java	/^  public void specular(int rgb) {$/;"	m	class:PShape
specular	opengl/PGraphicsOpenGL.java	/^    int[] specular;$/;"	f	class:PGraphicsOpenGL.InGeometry
specularB	core/PGraphics.java	/^  public float specularR, specularG, specularB;$/;"	f	class:PGraphics
specularB	core/PStyle.java	/^  public float specularR, specularG, specularB;$/;"	f	class:PStyle
specularColor	core/PGraphics.java	/^  public int specularColor;$/;"	f	class:PGraphics
specularColor	core/PShape.java	/^  protected int specularColor;$/;"	f	class:PShape
specularColor	opengl/PGraphicsOpenGL.java	/^    int specularColor;$/;"	f	class:PGraphicsOpenGL.InGeometry
specularFromCalc	core/PGraphics.java	/^  protected void specularFromCalc() {$/;"	m	class:PGraphics
specularG	core/PGraphics.java	/^  public float specularR, specularG, specularB;$/;"	f	class:PGraphics
specularG	core/PStyle.java	/^  public float specularR, specularG, specularB;$/;"	f	class:PStyle
specularLoc	opengl/PShader.java	/^  protected int specularLoc;$/;"	f	class:PShader
specularR	core/PGraphics.java	/^  public float specularR, specularG, specularB;$/;"	f	class:PGraphics
specularR	core/PStyle.java	/^  public float specularR, specularG, specularB;$/;"	f	class:PStyle
sphere	core/PApplet.java	/^  public void sphere(float r) {$/;"	m	class:PApplet
sphere	core/PGraphics.java	/^  public void sphere(float r) {$/;"	m	class:PGraphics
sphere	core/PGraphicsJava2D.java	/^  public void sphere(float r) {$/;"	m	class:PGraphicsJava2D
sphere	opengl/PGraphics2D.java	/^  public void sphere(float r) {$/;"	m	class:PGraphics2D
sphere	opengl/PGraphicsOpenGL.java	/^  public void sphere(float r) {$/;"	m	class:PGraphicsOpenGL
sphereDetail	core/PApplet.java	/^  public void sphereDetail(int res) {$/;"	m	class:PApplet
sphereDetail	core/PApplet.java	/^  public void sphereDetail(int ures, int vres) {$/;"	m	class:PApplet
sphereDetail	core/PGraphics.java	/^  public void sphereDetail(int res) {$/;"	m	class:PGraphics
sphereDetail	core/PGraphics.java	/^  public void sphereDetail(int ures, int vres) {$/;"	m	class:PGraphics
sphereDetailU	core/PGraphics.java	/^  public int sphereDetailU = 0;$/;"	f	class:PGraphics
sphereDetailU	core/PShape.java	/^  protected int sphereDetailU, sphereDetailV;$/;"	f	class:PShape
sphereDetailV	core/PGraphics.java	/^  public int sphereDetailV = 0;$/;"	f	class:PGraphics
sphereDetailV	core/PShape.java	/^  protected int sphereDetailU, sphereDetailV;$/;"	f	class:PShape
sphereX	core/PGraphics.java	/^  protected float sphereX[], sphereY[], sphereZ[];$/;"	f	class:PGraphics
sphereY	core/PGraphics.java	/^  protected float sphereX[], sphereY[], sphereZ[];$/;"	f	class:PGraphics
sphereZ	core/PGraphics.java	/^  protected float sphereX[], sphereY[], sphereZ[];$/;"	f	class:PGraphics
splice	core/PApplet.java	/^  static final public Object splice(Object list, Object value, int index) {$/;"	m	class:PApplet
splice	core/PApplet.java	/^  static final public String[] splice(String list[],$/;"	m	class:PApplet
splice	core/PApplet.java	/^  static final public boolean[] splice(boolean list[],$/;"	m	class:PApplet
splice	core/PApplet.java	/^  static final public byte[] splice(byte list[],$/;"	m	class:PApplet
splice	core/PApplet.java	/^  static final public char[] splice(char list[],$/;"	m	class:PApplet
splice	core/PApplet.java	/^  static final public float[] splice(float list[],$/;"	m	class:PApplet
splice	core/PApplet.java	/^  static final public int[] splice(int list[],$/;"	m	class:PApplet
splineForward	core/PGraphics.java	/^  protected void splineForward(int segments, PMatrix3D matrix) {$/;"	m	class:PGraphics
split	core/PApplet.java	/^  static public String[] split(String value, String delim) {$/;"	m	class:PApplet
split	core/PApplet.java	/^  static public String[] split(String value, char delim) {$/;"	m	class:PApplet
splitLineCSV	data/Table.java	/^  static protected String[] splitLineCSV(String line) {$/;"	m	class:Table
splitRawIndices	opengl/PGraphicsOpenGL.java	/^    void splitRawIndices(boolean clamp) {$/;"	m	class:PGraphicsOpenGL.Tessellator
splitTokens	core/PApplet.java	/^  static public String[] splitTokens(String value) {$/;"	m	class:PApplet
splitTokens	core/PApplet.java	/^  static public String[] splitTokens(String value, String delim) {$/;"	m	class:PApplet
spotLight	core/PApplet.java	/^  public void spotLight(float v1, float v2, float v3,$/;"	m	class:PApplet
spotLight	core/PGraphics.java	/^  public void spotLight(float v1, float v2, float v3,$/;"	m	class:PGraphics
spotLight	opengl/PGraphics2D.java	/^  public void spotLight(float red, float green, float blue,$/;"	m	class:PGraphics2D
spotLight	opengl/PGraphicsOpenGL.java	/^  public void spotLight(float r, float g, float b,$/;"	m	class:PGraphicsOpenGL
sq	core/PApplet.java	/^  static public final float sq(float n) {$/;"	m	class:PApplet
sqrt	core/PApplet.java	/^  static public final float sqrt(float n) {$/;"	m	class:PApplet
srcBuffer	core/PImage.java	/^  private int[] srcBuffer;$/;"	f	class:PImage	file:
srcXOffset	core/PImage.java	/^  private int srcXOffset, srcYOffset;$/;"	f	class:PImage	file:
srcYOffset	core/PImage.java	/^  private int srcXOffset, srcYOffset;$/;"	f	class:PImage	file:
start	core/PApplet.java	/^  public void start() {$/;"	m	class:PApplet
startStrokedTex	opengl/PShapeOpenGL.java	/^  protected boolean startStrokedTex(int n) {$/;"	m	class:PShapeOpenGL
started	opengl/LineStroker.java	/^  private boolean started;$/;"	f	class:LineStroker	file:
status	core/PApplet.java	/^  public void status(String value) {$/;"	m	class:PApplet
stencilBits	opengl/FrameBuffer.java	/^  protected int stencilBits;$/;"	f	class:FrameBuffer
stencilBits	opengl/PGraphicsOpenGL.java	/^  static public int stencilBits;$/;"	f	class:PGraphicsOpenGL
stencilBuffer	opengl/PGL.java	/^  protected ByteBuffer stencilBuffer;$/;"	f	class:PGL
stencilFunc	opengl/PGL.java	/^  public abstract void stencilFunc(int func, int ref, int mask);$/;"	m	class:PGL
stencilFunc	opengl/PJOGL.java	/^  public void stencilFunc(int func, int ref, int mask) {$/;"	m	class:PJOGL
stencilFuncSeparate	opengl/PGL.java	/^  public abstract void stencilFuncSeparate(int face, int func, int ref, int mask);$/;"	m	class:PGL
stencilFuncSeparate	opengl/PJOGL.java	/^  public void stencilFuncSeparate(int face, int func, int ref, int mask) {$/;"	m	class:PJOGL
stencilMask	opengl/PGL.java	/^  public abstract void stencilMask(int mask);$/;"	m	class:PGL
stencilMask	opengl/PJOGL.java	/^  public void stencilMask(int mask) {$/;"	m	class:PJOGL
stencilMaskSeparate	opengl/PGL.java	/^  public abstract void stencilMaskSeparate(int face, int mask);$/;"	m	class:PGL
stencilMaskSeparate	opengl/PJOGL.java	/^  public void stencilMaskSeparate(int face, int mask) {$/;"	m	class:PJOGL
stencilOp	opengl/PGL.java	/^  public abstract void stencilOp(int sfail, int dpfail, int dppass);$/;"	m	class:PGL
stencilOp	opengl/PJOGL.java	/^  public void stencilOp(int sfail, int dpfail, int dppass) {$/;"	m	class:PJOGL
stencilOpSeparate	opengl/PGL.java	/^  public abstract void stencilOpSeparate(int face, int sfail, int dpfail, int dppass);$/;"	m	class:PGL
stencilOpSeparate	opengl/PJOGL.java	/^  public void stencilOpSeparate(int face, int sfail, int dpfail, int dppass) {$/;"	m	class:PJOGL
stop	core/PApplet.java	/^  public void stop() {$/;"	m	class:PApplet
str	core/PApplet.java	/^  static final public String str(boolean x) {$/;"	m	class:PApplet
str	core/PApplet.java	/^  static final public String str(byte x) {$/;"	m	class:PApplet
str	core/PApplet.java	/^  static final public String str(char x) {$/;"	m	class:PApplet
str	core/PApplet.java	/^  static final public String str(float x) {$/;"	m	class:PApplet
str	core/PApplet.java	/^  static final public String str(int x) {$/;"	m	class:PApplet
str	core/PApplet.java	/^  static final public String[] str(boolean x[]) {$/;"	m	class:PApplet
str	core/PApplet.java	/^  static final public String[] str(byte x[]) {$/;"	m	class:PApplet
str	core/PApplet.java	/^  static final public String[] str(char x[]) {$/;"	m	class:PApplet
str	core/PApplet.java	/^  static final public String[] str(float x[]) {$/;"	m	class:PApplet
str	core/PApplet.java	/^  static final public String[] str(int x[]) {$/;"	m	class:PApplet
strategy	core/PGraphicsJava2D.java	/^  BufferStrategy strategy;$/;"	f	class:PGraphicsJava2D
stream	core/PFont.java	/^  protected boolean stream;$/;"	f	class:PFont
stringToValue	data/JSONObject.java	/^  static protected Object stringToValue(String string) {$/;"	m	class:JSONObject
stroke	core/PApplet.java	/^  public void stroke(float gray) {$/;"	m	class:PApplet
stroke	core/PApplet.java	/^  public void stroke(float gray, float alpha) {$/;"	m	class:PApplet
stroke	core/PApplet.java	/^  public void stroke(float v1, float v2, float v3) {$/;"	m	class:PApplet
stroke	core/PApplet.java	/^  public void stroke(float v1, float v2, float v3, float alpha) {$/;"	m	class:PApplet
stroke	core/PApplet.java	/^  public void stroke(int rgb) {$/;"	m	class:PApplet
stroke	core/PApplet.java	/^  public void stroke(int rgb, float alpha) {$/;"	m	class:PApplet
stroke	core/PGraphics.java	/^  public boolean stroke;$/;"	f	class:PGraphics
stroke	core/PGraphics.java	/^  public void stroke(float gray) {$/;"	m	class:PGraphics
stroke	core/PGraphics.java	/^  public void stroke(float gray, float alpha) {$/;"	m	class:PGraphics
stroke	core/PGraphics.java	/^  public void stroke(float v1, float v2, float v3) {$/;"	m	class:PGraphics
stroke	core/PGraphics.java	/^  public void stroke(float v1, float v2, float v3, float alpha) {$/;"	m	class:PGraphics
stroke	core/PGraphics.java	/^  public void stroke(int rgb) {$/;"	m	class:PGraphics
stroke	core/PGraphics.java	/^  public void stroke(int rgb, float alpha) {$/;"	m	class:PGraphics
stroke	core/PShape.java	/^  protected boolean stroke;$/;"	f	class:PShape
stroke	core/PShape.java	/^  public void stroke(float gray) {$/;"	m	class:PShape
stroke	core/PShape.java	/^  public void stroke(float gray, float alpha) {$/;"	m	class:PShape
stroke	core/PShape.java	/^  public void stroke(float x, float y, float z) {$/;"	m	class:PShape
stroke	core/PShape.java	/^  public void stroke(float x, float y, float z, float alpha) {$/;"	m	class:PShape
stroke	core/PShape.java	/^  public void stroke(int rgb) {$/;"	m	class:PShape
stroke	core/PShape.java	/^  public void stroke(int rgb, float alpha) {$/;"	m	class:PShape
stroke	core/PStyle.java	/^  public boolean stroke;$/;"	f	class:PStyle
stroke	opengl/PGraphicsOpenGL.java	/^    boolean stroke;$/;"	f	class:PGraphicsOpenGL.Tessellator
strokeA	core/PGraphics.java	/^  protected float strokeR, strokeG, strokeB, strokeA;$/;"	f	class:PGraphics
strokeAi	core/PGraphics.java	/^  protected int strokeRi, strokeGi, strokeBi, strokeAi;$/;"	f	class:PGraphics
strokeAlpha	core/PGraphics.java	/^  protected boolean strokeAlpha;$/;"	f	class:PGraphics
strokeB	core/PGraphics.java	/^  protected float strokeR, strokeG, strokeB, strokeA;$/;"	f	class:PGraphics
strokeBi	core/PGraphics.java	/^  protected int strokeRi, strokeGi, strokeBi, strokeAi;$/;"	f	class:PGraphics
strokeCap	core/PApplet.java	/^  public void strokeCap(int cap) {$/;"	m	class:PApplet
strokeCap	core/PGraphics.java	/^  public int strokeCap = DEFAULT_STROKE_CAP;$/;"	f	class:PGraphics
strokeCap	core/PGraphics.java	/^  public void strokeCap(int cap) {$/;"	m	class:PGraphics
strokeCap	core/PGraphicsJava2D.java	/^  public void strokeCap(int cap) {$/;"	m	class:PGraphicsJava2D
strokeCap	core/PShape.java	/^  protected int strokeCap;$/;"	f	class:PShape
strokeCap	core/PShape.java	/^  public void strokeCap(int cap) {$/;"	m	class:PShape
strokeCap	core/PStyle.java	/^  public int strokeCap;$/;"	f	class:PStyle
strokeCap	opengl/PGraphicsOpenGL.java	/^    int strokeCap;$/;"	f	class:PGraphicsOpenGL.Tessellator
strokeCap	opengl/PGraphicsOpenGL.java	/^  public void strokeCap(int cap) {$/;"	m	class:PGraphicsOpenGL
strokeColor	core/PGraphics.java	/^  public int strokeColor = 0xff000000;$/;"	f	class:PGraphics
strokeColor	core/PShape.java	/^  protected int strokeColor;$/;"	f	class:PShape
strokeColor	core/PStyle.java	/^  public int strokeColor;$/;"	f	class:PStyle
strokeColor	opengl/PGraphicsOpenGL.java	/^    int strokeColor;$/;"	f	class:PGraphicsOpenGL.InGeometry
strokeColor	opengl/PGraphicsOpenGL.java	/^    int strokeColor;$/;"	f	class:PGraphicsOpenGL.Tessellator
strokeColorObject	core/PGraphicsJava2D.java	/^  protected Color strokeColorObject;$/;"	f	class:PGraphicsJava2D
strokeColors	opengl/PGraphicsOpenGL.java	/^    int[] strokeColors;$/;"	f	class:PGraphicsOpenGL.InGeometry
strokeColors	opengl/PGraphicsOpenGL.java	/^    int[] strokeColors;$/;"	f	class:PGraphicsOpenGL.Tessellator
strokeFromCalc	core/PGraphics.java	/^  protected void strokeFromCalc() {$/;"	m	class:PGraphics
strokeFromCalc	core/PGraphicsJava2D.java	/^  protected void strokeFromCalc() {$/;"	m	class:PGraphicsJava2D
strokeG	core/PGraphics.java	/^  protected float strokeR, strokeG, strokeB, strokeA;$/;"	f	class:PGraphics
strokeGi	core/PGraphics.java	/^  protected int strokeRi, strokeGi, strokeBi, strokeAi;$/;"	f	class:PGraphics
strokeGradient	core/PGraphicsJava2D.java	/^  public boolean strokeGradient;$/;"	f	class:PGraphicsJava2D
strokeGradient	core/PShapeSVG.java	/^  Gradient strokeGradient;$/;"	f	class:PShapeSVG
strokeGradientObject	core/PGraphicsJava2D.java	/^  public Paint strokeGradientObject;$/;"	f	class:PGraphicsJava2D
strokeGradientPaint	core/PShapeSVG.java	/^  Paint strokeGradientPaint;$/;"	f	class:PShapeSVG
strokeImpl	core/PGraphicsJava2D.java	/^  protected void strokeImpl() {$/;"	m	class:PGraphicsJava2D
strokeJoin	core/PApplet.java	/^  public void strokeJoin(int join) {$/;"	m	class:PApplet
strokeJoin	core/PGraphics.java	/^  public int strokeJoin = DEFAULT_STROKE_JOIN;$/;"	f	class:PGraphics
strokeJoin	core/PGraphics.java	/^  public void strokeJoin(int join) {$/;"	m	class:PGraphics
strokeJoin	core/PGraphicsJava2D.java	/^  public void strokeJoin(int join) {$/;"	m	class:PGraphicsJava2D
strokeJoin	core/PShape.java	/^  protected int strokeJoin;$/;"	f	class:PShape
strokeJoin	core/PShape.java	/^  public void strokeJoin(int join) {$/;"	m	class:PShape
strokeJoin	core/PStyle.java	/^  public int strokeJoin;$/;"	f	class:PStyle
strokeJoin	opengl/PGraphicsOpenGL.java	/^    int strokeJoin;$/;"	f	class:PGraphicsOpenGL.Tessellator
strokeJoin	opengl/PGraphicsOpenGL.java	/^  public void strokeJoin(int join) {$/;"	m	class:PGraphicsOpenGL
strokeName	core/PShapeSVG.java	/^  String strokeName;  \/\/ id of another object, gradients only?$/;"	f	class:PShapeSVG
strokeOpacity	core/PShapeSVG.java	/^  float strokeOpacity;$/;"	f	class:PShapeSVG
strokeR	core/PGraphics.java	/^  protected float strokeR, strokeG, strokeB, strokeA;$/;"	f	class:PGraphics
strokeRi	core/PGraphics.java	/^  protected int strokeRi, strokeGi, strokeBi, strokeAi;$/;"	f	class:PGraphics
strokeShape	core/PGraphicsJava2D.java	/^  protected void strokeShape(Shape s) {$/;"	m	class:PGraphicsJava2D
strokeTess	opengl/PGraphicsOpenGL.java	/^      boolean strokeTess;$/;"	f	class:PGraphicsOpenGL.Tessellator.TessellatorCallback
strokeTo	opengl/LinePath.java	/^  private static void strokeTo(LinePath src, float width, int caps, int join,$/;"	m	class:LinePath	file:
strokeVertices	opengl/PGraphicsOpenGL.java	/^    float[] strokeVertices;$/;"	f	class:PGraphicsOpenGL.Tessellator
strokeWeight	core/PApplet.java	/^  public void strokeWeight(float weight) {$/;"	m	class:PApplet
strokeWeight	core/PGraphics.java	/^  public float strokeWeight = DEFAULT_STROKE_WEIGHT;$/;"	f	class:PGraphics
strokeWeight	core/PGraphics.java	/^  public void strokeWeight(float weight) {$/;"	m	class:PGraphics
strokeWeight	core/PGraphicsJava2D.java	/^  public void strokeWeight(float weight) {$/;"	m	class:PGraphicsJava2D
strokeWeight	core/PShape.java	/^  protected float strokeWeight; \/\/ default is 1$/;"	f	class:PShape
strokeWeight	core/PShape.java	/^  public void strokeWeight(float weight) {$/;"	m	class:PShape
strokeWeight	core/PStyle.java	/^  public float strokeWeight;$/;"	f	class:PStyle
strokeWeight	opengl/PGraphicsOpenGL.java	/^    float strokeWeight;$/;"	f	class:PGraphicsOpenGL.InGeometry
strokeWeight	opengl/PGraphicsOpenGL.java	/^    float strokeWeight;$/;"	f	class:PGraphicsOpenGL.Tessellator
strokeWeight	opengl/PGraphicsOpenGL.java	/^  public void strokeWeight(float weight) {$/;"	m	class:PGraphicsOpenGL
strokeWeights	opengl/PGraphicsOpenGL.java	/^    float[] strokeWeights;$/;"	f	class:PGraphicsOpenGL.InGeometry
strokeWeights	opengl/PGraphicsOpenGL.java	/^    float[] strokeWeights;$/;"	f	class:PGraphicsOpenGL.Tessellator
strokedTexture	opengl/PShapeOpenGL.java	/^  protected boolean strokedTexture;$/;"	f	class:PShapeOpenGL
strokedTexture	opengl/PShapeOpenGL.java	/^  protected void strokedTexture(boolean newValue) {$/;"	m	class:PShapeOpenGL
style	core/PApplet.java	/^  public void style(PStyle s) {$/;"	m	class:PApplet
style	core/PGraphics.java	/^  public void style(PStyle s) {$/;"	m	class:PGraphics
style	core/PShape.java	/^  protected boolean style = true;$/;"	f	class:PShape
styleStack	core/PGraphics.java	/^  PStyle[] styleStack = new PStyle[STYLE_STACK_DEPTH];$/;"	f	class:PGraphics
styleStackDepth	core/PGraphics.java	/^  int styleStackDepth;$/;"	f	class:PGraphics
styles	core/PShape.java	/^  protected void styles(PGraphics g) {$/;"	m	class:PShape
styles	core/PShapeSVG.java	/^  protected void styles(PGraphics g) {$/;"	m	class:PShapeSVG
styles	opengl/PShapeOpenGL.java	/^  protected void styles(PGraphics g) {$/;"	m	class:PShapeOpenGL
sub	core/PVector.java	/^  public void sub(PVector v) {$/;"	m	class:PVector
sub	core/PVector.java	/^  public void sub(float x, float y, float z) {$/;"	m	class:PVector
sub	core/PVector.java	/^  static public PVector sub(PVector v1, PVector v2) {$/;"	m	class:PVector
sub	core/PVector.java	/^  static public PVector sub(PVector v1, PVector v2, PVector target) {$/;"	m	class:PVector
sub	data/FloatDict.java	/^  public void sub(String key, float amount) {$/;"	m	class:FloatDict
sub	data/FloatList.java	/^  public void sub(int index, float amount) {$/;"	m	class:FloatList
sub	data/IntDict.java	/^  public void sub(String key, int amount) {$/;"	m	class:IntDict
sub	data/IntList.java	/^  public void sub(int index, int amount) {$/;"	m	class:IntList
subPixelStroke	opengl/PGraphicsOpenGL.java	/^    boolean subPixelStroke(float weight) {$/;"	m	class:PGraphicsOpenGL.Tessellator
subset	core/PApplet.java	/^  static public Object subset(Object list, int start) {$/;"	m	class:PApplet
subset	core/PApplet.java	/^  static public Object subset(Object list, int start, int count) {$/;"	m	class:PApplet
subset	core/PApplet.java	/^  static public String[] subset(String list[], int start) {$/;"	m	class:PApplet
subset	core/PApplet.java	/^  static public String[] subset(String list[], int start, int count) {$/;"	m	class:PApplet
subset	core/PApplet.java	/^  static public boolean[] subset(boolean list[], int start) {$/;"	m	class:PApplet
subset	core/PApplet.java	/^  static public boolean[] subset(boolean list[], int start, int count) {$/;"	m	class:PApplet
subset	core/PApplet.java	/^  static public byte[] subset(byte list[], int start) {$/;"	m	class:PApplet
subset	core/PApplet.java	/^  static public byte[] subset(byte list[], int start, int count) {$/;"	m	class:PApplet
subset	core/PApplet.java	/^  static public char[] subset(char list[], int start) {$/;"	m	class:PApplet
subset	core/PApplet.java	/^  static public char[] subset(char list[], int start, int count) {$/;"	m	class:PApplet
subset	core/PApplet.java	/^  static public float[] subset(float list[], int start) {$/;"	m	class:PApplet
subset	core/PApplet.java	/^  static public float[] subset(float list[], int start, int count) {$/;"	m	class:PApplet
subset	core/PApplet.java	/^  static public int[] subset(int list[], int start) {$/;"	m	class:PApplet
subset	core/PApplet.java	/^  static public int[] subset(int list[], int start, int count) {$/;"	m	class:PApplet
subsetting	core/PFont.java	/^  protected boolean subsetting;$/;"	f	class:PFont
sum	data/FloatList.java	/^  public float sum() {$/;"	m	class:FloatList
sum	data/IntList.java	/^  public int sum() {$/;"	m	class:IntList
supportLighting	opengl/PShader.java	/^  protected boolean supportLighting() {$/;"	m	class:PShader
supportsTexturing	opengl/PShader.java	/^  protected boolean supportsTexturing() {$/;"	m	class:PShader
swap	data/FloatDict.java	/^  public void swap(int a, int b) {$/;"	m	class:FloatDict
swap	data/IntDict.java	/^  public void swap(int a, int b) {$/;"	m	class:IntDict
swap	data/Sort.java	/^  abstract public void swap(int a, int b);$/;"	m	class:Sort
swap	data/StringDict.java	/^  public void swap(int a, int b) {$/;"	m	class:StringDict
swapBuffers	opengl/PGL.java	/^  protected abstract void swapBuffers();$/;"	m	class:PGL
swapBuffers	opengl/PJOGL.java	/^  protected void swapBuffers() {$/;"	m	class:PJOGL
swapColorBuffers	opengl/FrameBuffer.java	/^  public void swapColorBuffers() {$/;"	m	class:FrameBuffer
swapOffscreenTextures	opengl/PGraphicsOpenGL.java	/^  protected void swapOffscreenTextures() {$/;"	m	class:PGraphicsOpenGL
swapTris	opengl/PGraphicsOpenGL.java	/^  private void swapTris(int a, int b) {$/;"	m	class:PGraphicsOpenGL	file:
sx0	opengl/LineStroker.java	/^  private int sx0, sy0, sx1, sy1, x0, y0;$/;"	f	class:LineStroker	file:
sx1	opengl/LineStroker.java	/^  private int sx0, sy0, sx1, sy1, x0, y0;$/;"	f	class:LineStroker	file:
sy0	opengl/LineStroker.java	/^  private int sx0, sy0, sx1, sy1, x0, y0;$/;"	f	class:LineStroker	file:
sy1	opengl/LineStroker.java	/^  private int sx0, sy0, sx1, sy1, x0, y0;$/;"	f	class:LineStroker	file:
syncBackTexture	opengl/PGL.java	/^  protected void syncBackTexture() {$/;"	m	class:PGL
syncBackTexture	opengl/PJOGL.java	/^  protected void syncBackTexture() {$/;"	m	class:PJOGL
table	data/Table.java	/^    Table table;$/;"	f	class:Table.RowIndexIterator
table	data/Table.java	/^    Table table;$/;"	f	class:Table.RowIterator
table	data/Table.java	/^    Table table;$/;"	f	class:Table.RowPointer
tan	core/PApplet.java	/^  static public final float tan(float angle) {$/;"	m	class:PApplet
tan	core/PMatrix2D.java	/^  static private final float tan(float angle) {$/;"	m	class:PMatrix2D	file:
target	opengl/Texture.java	/^    public int target;$/;"	f	class:Texture.Parameters
targetFps	opengl/PGL.java	/^  protected float targetFps = 60;$/;"	f	class:PGL
tcmat	opengl/PShader.java	/^  protected float[] tcmat;$/;"	f	class:PShader
tempFbo	opengl/Texture.java	/^  protected FrameBuffer tempFbo = null;$/;"	f	class:Texture
tess	opengl/PGraphicsOpenGL.java	/^    TessGeometry tess;$/;"	f	class:PGraphicsOpenGL.Tessellator
tess	opengl/PJOGL.java	/^    protected GLUtessellator tess;$/;"	f	class:PJOGL.Tessellator
tessError	opengl/PGL.java	/^  protected String tessError(int err) {$/;"	m	class:PGL
tessError	opengl/PJOGL.java	/^  protected String tessError(int err) {$/;"	m	class:PJOGL
tessGeo	opengl/PGraphicsOpenGL.java	/^  protected TessGeometry tessGeo;$/;"	f	class:PGraphicsOpenGL
tessGeo	opengl/PShapeOpenGL.java	/^  protected TessGeometry tessGeo;$/;"	f	class:PShapeOpenGL
tessellate	opengl/PGraphicsOpenGL.java	/^  protected void tessellate(int mode) {$/;"	m	class:PGraphicsOpenGL
tessellate	opengl/PGraphicsOpenGL.java	/^  protected void tessellate(int[] indices) {$/;"	m	class:PGraphicsOpenGL
tessellate	opengl/PShapeOpenGL.java	/^  protected void tessellate() {$/;"	m	class:PShapeOpenGL
tessellateArc	opengl/PShapeOpenGL.java	/^  protected void tessellateArc() {$/;"	m	class:PShapeOpenGL
tessellateBox	opengl/PShapeOpenGL.java	/^  protected void tessellateBox() {$/;"	m	class:PShapeOpenGL
tessellateEdges	opengl/PGraphicsOpenGL.java	/^    void tessellateEdges() {$/;"	m	class:PGraphicsOpenGL.Tessellator
tessellateEdges2D	opengl/PGraphicsOpenGL.java	/^    void tessellateEdges2D() {$/;"	m	class:PGraphicsOpenGL.Tessellator
tessellateEdges3D	opengl/PGraphicsOpenGL.java	/^    void tessellateEdges3D() {$/;"	m	class:PGraphicsOpenGL.Tessellator
tessellateEllipse	opengl/PShapeOpenGL.java	/^  protected void tessellateEllipse() {$/;"	m	class:PShapeOpenGL
tessellateImpl	opengl/PShapeOpenGL.java	/^  protected void tessellateImpl() {$/;"	m	class:PShapeOpenGL
tessellateLine	opengl/PShapeOpenGL.java	/^  protected void tessellateLine() {$/;"	m	class:PShapeOpenGL
tessellateLineLoop	opengl/PGraphicsOpenGL.java	/^    void tessellateLineLoop() {$/;"	m	class:PGraphicsOpenGL.Tessellator
tessellateLineLoop2D	opengl/PGraphicsOpenGL.java	/^    void tessellateLineLoop2D(int lineCount) {$/;"	m	class:PGraphicsOpenGL.Tessellator
tessellateLineLoop3D	opengl/PGraphicsOpenGL.java	/^    void tessellateLineLoop3D(int lineCount) {$/;"	m	class:PGraphicsOpenGL.Tessellator
tessellateLinePath	opengl/PGraphicsOpenGL.java	/^    public void tessellateLinePath(LinePath path) {$/;"	m	class:PGraphicsOpenGL.Tessellator
tessellateLineStrip	opengl/PGraphicsOpenGL.java	/^    void tessellateLineStrip() {$/;"	m	class:PGraphicsOpenGL.Tessellator
tessellateLineStrip2D	opengl/PGraphicsOpenGL.java	/^    void tessellateLineStrip2D(int lineCount) {$/;"	m	class:PGraphicsOpenGL.Tessellator
tessellateLineStrip3D	opengl/PGraphicsOpenGL.java	/^    void tessellateLineStrip3D(int lineCount) {$/;"	m	class:PGraphicsOpenGL.Tessellator
tessellateLines	opengl/PGraphicsOpenGL.java	/^    void tessellateLines() {$/;"	m	class:PGraphicsOpenGL.Tessellator
tessellateLines2D	opengl/PGraphicsOpenGL.java	/^    void tessellateLines2D(int lineCount) {$/;"	m	class:PGraphicsOpenGL.Tessellator
tessellateLines3D	opengl/PGraphicsOpenGL.java	/^    void tessellateLines3D(int lineCount) {$/;"	m	class:PGraphicsOpenGL.Tessellator
tessellatePath	opengl/PShapeOpenGL.java	/^  protected void tessellatePath() {$/;"	m	class:PShapeOpenGL
tessellatePoint	opengl/PShapeOpenGL.java	/^  protected void tessellatePoint() {$/;"	m	class:PShapeOpenGL
tessellatePoints	opengl/PGraphicsOpenGL.java	/^    void tessellatePoints() {$/;"	m	class:PGraphicsOpenGL.Tessellator
tessellatePolygon	opengl/PGraphicsOpenGL.java	/^    void tessellatePolygon(boolean solid, boolean closed, boolean calcNormals) {$/;"	m	class:PGraphicsOpenGL.Tessellator
tessellateQuad	opengl/PShapeOpenGL.java	/^  protected void tessellateQuad() {$/;"	m	class:PShapeOpenGL
tessellateQuadStrip	opengl/PGraphicsOpenGL.java	/^    void tessellateQuadStrip() {$/;"	m	class:PGraphicsOpenGL.Tessellator
tessellateQuads	opengl/PGraphicsOpenGL.java	/^    void tessellateQuads() {$/;"	m	class:PGraphicsOpenGL.Tessellator
tessellateRect	opengl/PShapeOpenGL.java	/^  protected void tessellateRect() {$/;"	m	class:PShapeOpenGL
tessellateRoundPoints	opengl/PGraphicsOpenGL.java	/^    void tessellateRoundPoints() {$/;"	m	class:PGraphicsOpenGL.Tessellator
tessellateRoundPoints2D	opengl/PGraphicsOpenGL.java	/^    void tessellateRoundPoints2D(int nvertTot, int nindTot, int nPtVert) {$/;"	m	class:PGraphicsOpenGL.Tessellator
tessellateRoundPoints3D	opengl/PGraphicsOpenGL.java	/^    void tessellateRoundPoints3D(int nvertTot, int nindTot, int nPtVert) {$/;"	m	class:PGraphicsOpenGL.Tessellator
tessellateSphere	opengl/PShapeOpenGL.java	/^  protected void tessellateSphere() {$/;"	m	class:PShapeOpenGL
tessellateSquarePoints	opengl/PGraphicsOpenGL.java	/^    void tessellateSquarePoints() {$/;"	m	class:PGraphicsOpenGL.Tessellator
tessellateSquarePoints2D	opengl/PGraphicsOpenGL.java	/^    void tessellateSquarePoints2D(int nvertTot, int nindTot) {$/;"	m	class:PGraphicsOpenGL.Tessellator
tessellateSquarePoints3D	opengl/PGraphicsOpenGL.java	/^    void tessellateSquarePoints3D(int nvertTot, int nindTot) {$/;"	m	class:PGraphicsOpenGL.Tessellator
tessellateStrokePath	opengl/PGraphicsOpenGL.java	/^    void tessellateStrokePath() {$/;"	m	class:PGraphicsOpenGL.Tessellator
tessellateTriangle	opengl/PShapeOpenGL.java	/^  protected void tessellateTriangle() {$/;"	m	class:PShapeOpenGL
tessellateTriangleFan	opengl/PGraphicsOpenGL.java	/^    void tessellateTriangleFan() {$/;"	m	class:PGraphicsOpenGL.Tessellator
tessellateTriangleStrip	opengl/PGraphicsOpenGL.java	/^    void tessellateTriangleStrip() {$/;"	m	class:PGraphicsOpenGL.Tessellator
tessellateTriangles	opengl/PGraphicsOpenGL.java	/^    void tessellateTriangles() {$/;"	m	class:PGraphicsOpenGL.Tessellator
tessellateTriangles	opengl/PGraphicsOpenGL.java	/^    void tessellateTriangles(int[] indices) {$/;"	m	class:PGraphicsOpenGL.Tessellator
tessellated	opengl/PShapeOpenGL.java	/^  protected boolean tessellated;$/;"	f	class:PShapeOpenGL
tessellator	opengl/PGraphicsOpenGL.java	/^  static protected Tessellator tessellator;$/;"	f	class:PGraphicsOpenGL
tessellator	opengl/PShapeOpenGL.java	/^  protected Tessellator tessellator;$/;"	f	class:PShapeOpenGL
testValidity	data/JSONObject.java	/^  static protected void testValidity(Object o) {$/;"	m	class:JSONObject
tex	opengl/PGraphicsOpenGL.java	/^    PImage tex;$/;"	f	class:PGraphicsOpenGL.Triangle
tex2DFragShader	opengl/PGL.java	/^  protected static int tex2DFragShader;$/;"	f	class:PGL
tex2DFragShaderSource	opengl/PGL.java	/^  protected static String[] tex2DFragShaderSource = {$/;"	f	class:PGL
tex2DSamplerLoc	opengl/PGL.java	/^  protected static int tex2DSamplerLoc;$/;"	f	class:PGL
tex2DShaderContext	opengl/PGL.java	/^  protected static int tex2DShaderContext;$/;"	f	class:PGL
tex2DShaderProgram	opengl/PGL.java	/^  protected static int tex2DShaderProgram;$/;"	f	class:PGL
tex2DTCoordLoc	opengl/PGL.java	/^  protected static int tex2DTCoordLoc;$/;"	f	class:PGL
tex2DVertLoc	opengl/PGL.java	/^  protected static int tex2DVertLoc;$/;"	f	class:PGL
tex2DVertShader	opengl/PGL.java	/^  protected static int tex2DVertShader;$/;"	f	class:PGL
texCache	opengl/PGraphicsOpenGL.java	/^    TexCache texCache;$/;"	f	class:PGraphicsOpenGL.Tessellator
texCache	opengl/PGraphicsOpenGL.java	/^  protected TexCache texCache;$/;"	f	class:PGraphicsOpenGL
texCoordLoc	opengl/PShader.java	/^  protected int texCoordLoc;$/;"	f	class:PShader
texCoords	opengl/PGL.java	/^  protected static float[] texCoords = {$/;"	f	class:PGL
texData	opengl/PGL.java	/^  protected static FloatBuffer texData;$/;"	f	class:PGL
texGeoVBO	opengl/PGL.java	/^  protected static int texGeoVBO;$/;"	f	class:PGL
texIdx	core/PShapeOBJ.java	/^    ArrayList<Integer> texIdx;$/;"	f	class:PShapeOBJ.OBJFace
texImage2D	opengl/PGL.java	/^  public abstract void texImage2D(int target, int level, int internalFormat, int width, int height, int border, int format, int type, Buffer data);$/;"	m	class:PGL
texImage2D	opengl/PJOGL.java	/^  public void texImage2D(int target, int level, int internalFormat, int width, int height, int border, int format, int type, Buffer data) {$/;"	m	class:PJOGL
texIndex	opengl/FontTexture.java	/^    int texIndex;$/;"	f	class:FontTexture.TextureInfo
texMatrixLoc	opengl/PShader.java	/^  protected int texMatrixLoc;$/;"	f	class:PShader
texOffsetLoc	opengl/PShader.java	/^  protected int texOffsetLoc;$/;"	f	class:PShader
texParameterf	opengl/PGL.java	/^  public abstract void texParameterf(int target, int pname, float param);$/;"	m	class:PGL
texParameterf	opengl/PJOGL.java	/^  public void texParameterf(int target, int pname, float param) {$/;"	m	class:PJOGL
texParameterfv	opengl/PGL.java	/^  public abstract void texParameterfv(int target, int pname, FloatBuffer params);$/;"	m	class:PGL
texParameterfv	opengl/PJOGL.java	/^  public void texParameterfv(int target, int pname, FloatBuffer params) {$/;"	m	class:PJOGL
texParameteri	opengl/PGL.java	/^  public abstract void texParameteri(int target, int pname, int param);$/;"	m	class:PGL
texParameteri	opengl/PJOGL.java	/^  public void texParameteri(int target, int pname, int param) {$/;"	m	class:PJOGL
texParameteriv	opengl/PGL.java	/^  public abstract void texParameteriv(int target, int pname, IntBuffer params);$/;"	m	class:PGL
texParameteriv	opengl/PJOGL.java	/^  public void texParameteriv(int target, int pname, IntBuffer params) {$/;"	m	class:PJOGL
texRectFragShader	opengl/PGL.java	/^  protected static int texRectFragShader;$/;"	f	class:PGL
texRectFragShaderSource	opengl/PGL.java	/^  protected static String[] texRectFragShaderSource = {$/;"	f	class:PGL
texRectSamplerLoc	opengl/PGL.java	/^  protected static int texRectSamplerLoc;$/;"	f	class:PGL
texRectShaderContext	opengl/PGL.java	/^  protected static int texRectShaderContext;$/;"	f	class:PGL
texRectShaderProgram	opengl/PGL.java	/^  protected static int texRectShaderProgram;$/;"	f	class:PGL
texRectTCoordLoc	opengl/PGL.java	/^  protected static int texRectTCoordLoc;$/;"	f	class:PGL
texRectVertLoc	opengl/PGL.java	/^  protected static int texRectVertLoc;$/;"	f	class:PGL
texRectVertShader	opengl/PGL.java	/^  protected static int texRectVertShader;$/;"	f	class:PGL
texShaderDefRegexp	opengl/PShader.java	/^  static protected String texShaderDefRegexp =$/;"	f	class:PShader
texSubImage2D	opengl/PGL.java	/^  public abstract void texSubImage2D(int target, int level, int xOffset, int yOffset, int width, int height, int format, int type, Buffer data);$/;"	m	class:PGL
texSubImage2D	opengl/PJOGL.java	/^  public void texSubImage2D(int target, int level, int xOffset, int yOffset, int width, int height, int format, int type, Buffer data) {$/;"	m	class:PJOGL
texUnit	opengl/PShader.java	/^  protected int texUnit;$/;"	f	class:PShader
texUnits	opengl/PShader.java	/^  protected HashMap<Integer, Integer> texUnits;$/;"	f	class:PShader
texVertShaderSource	opengl/PGL.java	/^  protected static String[] texVertShaderSource = {$/;"	f	class:PGL
texcoords	opengl/PGraphicsOpenGL.java	/^    float[] texcoords;$/;"	f	class:PGraphicsOpenGL.InGeometry
texinfoMap	opengl/FontTexture.java	/^  protected HashMap<PFont.Glyph, TextureInfo> texinfoMap;$/;"	f	class:FontTexture
texlightShaderDefRegexp	opengl/PShader.java	/^  static protected String texlightShaderDefRegexp =$/;"	f	class:PShader
text	core/PApplet.java	/^  public void text(String str, float x, float y) {$/;"	m	class:PApplet
text	core/PApplet.java	/^  public void text(String str, float x, float y, float z) {$/;"	m	class:PApplet
text	core/PApplet.java	/^  public void text(String str, float x1, float y1, float x2, float y2) {$/;"	m	class:PApplet
text	core/PApplet.java	/^  public void text(char c, float x, float y) {$/;"	m	class:PApplet
text	core/PApplet.java	/^  public void text(char c, float x, float y, float z) {$/;"	m	class:PApplet
text	core/PApplet.java	/^  public void text(char[] chars, int start, int stop, float x, float y) {$/;"	m	class:PApplet
text	core/PApplet.java	/^  public void text(char[] chars, int start, int stop,$/;"	m	class:PApplet
text	core/PApplet.java	/^  public void text(float num, float x, float y) {$/;"	m	class:PApplet
text	core/PApplet.java	/^  public void text(float num, float x, float y, float z) {$/;"	m	class:PApplet
text	core/PApplet.java	/^  public void text(int num, float x, float y) {$/;"	m	class:PApplet
text	core/PApplet.java	/^  public void text(int num, float x, float y, float z) {$/;"	m	class:PApplet
text	core/PGraphics.java	/^  public void text(String str, float x, float y) {$/;"	m	class:PGraphics
text	core/PGraphics.java	/^  public void text(String str, float x, float y, float z) {$/;"	m	class:PGraphics
text	core/PGraphics.java	/^  public void text(String str, float x1, float y1, float x2, float y2) {$/;"	m	class:PGraphics
text	core/PGraphics.java	/^  public void text(char c, float x, float y) {$/;"	m	class:PGraphics
text	core/PGraphics.java	/^  public void text(char c, float x, float y, float z) {$/;"	m	class:PGraphics
text	core/PGraphics.java	/^  public void text(char[] chars, int start, int stop, float x, float y) {$/;"	m	class:PGraphics
text	core/PGraphics.java	/^  public void text(char[] chars, int start, int stop,$/;"	m	class:PGraphics
text	core/PGraphics.java	/^  public void text(float num, float x, float y) {$/;"	m	class:PGraphics
text	core/PGraphics.java	/^  public void text(float num, float x, float y, float z) {$/;"	m	class:PGraphics
text	core/PGraphics.java	/^  public void text(int num, float x, float y) {$/;"	m	class:PGraphics
text	core/PGraphics.java	/^  public void text(int num, float x, float y, float z) {$/;"	m	class:PGraphics
textAlign	core/PApplet.java	/^  public void textAlign(int alignX) {$/;"	m	class:PApplet
textAlign	core/PApplet.java	/^  public void textAlign(int alignX, int alignY) {$/;"	m	class:PApplet
textAlign	core/PGraphics.java	/^  public int textAlign = LEFT;$/;"	f	class:PGraphics
textAlign	core/PGraphics.java	/^  public void textAlign(int alignX) {$/;"	m	class:PGraphics
textAlign	core/PGraphics.java	/^  public void textAlign(int alignX, int alignY) {$/;"	m	class:PGraphics
textAlign	core/PStyle.java	/^  public int textAlign;$/;"	f	class:PStyle
textAlignY	core/PGraphics.java	/^  public int textAlignY = BASELINE;$/;"	f	class:PGraphics
textAlignY	core/PStyle.java	/^  public int textAlignY;$/;"	f	class:PStyle
textAscent	core/PApplet.java	/^  public float textAscent() {$/;"	m	class:PApplet
textAscent	core/PGraphics.java	/^  public float textAscent() {$/;"	m	class:PGraphics
textAscent	core/PGraphicsJava2D.java	/^  public float textAscent() {$/;"	m	class:PGraphicsJava2D
textAscent	opengl/PGraphicsOpenGL.java	/^  public float textAscent() {$/;"	m	class:PGraphicsOpenGL
textBreakCount	core/PGraphics.java	/^  protected int textBreakCount;$/;"	f	class:PGraphics
textBreakStart	core/PGraphics.java	/^  protected int[] textBreakStart;$/;"	f	class:PGraphics
textBreakStop	core/PGraphics.java	/^  protected int[] textBreakStop;$/;"	f	class:PGraphics
textBuffer	core/PGraphics.java	/^  protected char[] textBuffer = new char[8 * 1024];$/;"	f	class:PGraphics
textCharImpl	core/PGraphics.java	/^  protected void textCharImpl(char ch, float x, float y) { \/\/, float z) {$/;"	m	class:PGraphics
textCharImpl	opengl/PGraphicsOpenGL.java	/^  protected void textCharImpl(char ch, float x, float y) {$/;"	m	class:PGraphicsOpenGL
textCharModelImpl	core/PGraphics.java	/^  protected void textCharModelImpl(PImage glyph,$/;"	m	class:PGraphics
textCharModelImpl	opengl/PGraphicsOpenGL.java	/^  protected void textCharModelImpl(FontTexture.TextureInfo info,$/;"	m	class:PGraphicsOpenGL
textCharScreenImpl	core/PGraphics.java	/^  protected void textCharScreenImpl(PImage glyph,$/;"	m	class:PGraphics
textCharShapeImpl	opengl/PGraphicsOpenGL.java	/^  protected void textCharShapeImpl(char ch, float x, float y) {$/;"	m	class:PGraphicsOpenGL
textDescent	core/PApplet.java	/^  public float textDescent() {$/;"	m	class:PApplet
textDescent	core/PGraphics.java	/^  public float textDescent() {$/;"	m	class:PGraphics
textDescent	core/PGraphicsJava2D.java	/^  public float textDescent() {$/;"	m	class:PGraphicsJava2D
textDescent	opengl/PGraphicsOpenGL.java	/^  public float textDescent() {$/;"	m	class:PGraphicsOpenGL
textFont	core/PApplet.java	/^  public void textFont(PFont which) {$/;"	m	class:PApplet
textFont	core/PApplet.java	/^  public void textFont(PFont which, float size) {$/;"	m	class:PApplet
textFont	core/PGraphics.java	/^  public PFont textFont;$/;"	f	class:PGraphics
textFont	core/PGraphics.java	/^  public void textFont(PFont which) {$/;"	m	class:PGraphics
textFont	core/PGraphics.java	/^  public void textFont(PFont which, float size) {$/;"	m	class:PGraphics
textFont	core/PStyle.java	/^  public PFont textFont;$/;"	f	class:PStyle
textLeading	core/PApplet.java	/^  public void textLeading(float leading) {$/;"	m	class:PApplet
textLeading	core/PGraphics.java	/^  public float textLeading;$/;"	f	class:PGraphics
textLeading	core/PGraphics.java	/^  public void textLeading(float leading) {$/;"	m	class:PGraphics
textLeading	core/PStyle.java	/^  public float textLeading;$/;"	f	class:PStyle
textLineAlignImpl	core/PGraphics.java	/^  protected void textLineAlignImpl(char buffer[], int start, int stop,$/;"	m	class:PGraphics
textLineImpl	core/PGraphics.java	/^  protected void textLineImpl(char buffer[], int start, int stop,$/;"	m	class:PGraphics
textLineImpl	core/PGraphicsJava2D.java	/^  protected void textLineImpl(char buffer[], int start, int stop,$/;"	m	class:PGraphicsJava2D
textLineImpl	opengl/PGraphicsOpenGL.java	/^  protected void textLineImpl(char buffer[], int start, int stop,$/;"	m	class:PGraphicsOpenGL
textMode	core/PApplet.java	/^  public void textMode(int mode) {$/;"	m	class:PApplet
textMode	core/PGraphics.java	/^  public int textMode = MODEL;$/;"	f	class:PGraphics
textMode	core/PGraphics.java	/^  public void textMode(int mode) {$/;"	m	class:PGraphics
textMode	core/PStyle.java	/^  public int textMode;$/;"	f	class:PStyle
textModeCheck	core/PGraphics.java	/^  protected boolean textModeCheck(int mode) {$/;"	m	class:PGraphics
textModeCheck	core/PGraphicsJava2D.java	/^  protected boolean textModeCheck(int mode) {$/;"	m	class:PGraphicsJava2D
textModeCheck	opengl/PGraphicsOpenGL.java	/^  protected boolean textModeCheck(int mode) {$/;"	m	class:PGraphicsOpenGL
textSentence	core/PGraphics.java	/^  protected boolean textSentence(char[] buffer, int start, int stop,$/;"	m	class:PGraphics
textSentenceBreak	core/PGraphics.java	/^  protected void textSentenceBreak(int start, int stop) {$/;"	m	class:PGraphics
textSize	core/PApplet.java	/^  public void textSize(float size) {$/;"	m	class:PApplet
textSize	core/PGraphics.java	/^  public float textSize;$/;"	f	class:PGraphics
textSize	core/PGraphics.java	/^  public void textSize(float size) {$/;"	m	class:PGraphics
textSize	core/PGraphicsJava2D.java	/^  public void textSize(float size) {$/;"	m	class:PGraphicsJava2D
textSize	core/PStyle.java	/^  public float textSize;$/;"	f	class:PStyle
textSize	opengl/PGraphicsOpenGL.java	/^  public void textSize(float size) {$/;"	m	class:PGraphicsOpenGL
textTex	opengl/PGraphicsOpenGL.java	/^  FontTexture textTex;$/;"	f	class:PGraphicsOpenGL
textWidth	core/PApplet.java	/^  public float textWidth(String str) {$/;"	m	class:PApplet
textWidth	core/PApplet.java	/^  public float textWidth(char c) {$/;"	m	class:PApplet
textWidth	core/PApplet.java	/^  public float textWidth(char[] chars, int start, int length) {$/;"	m	class:PApplet
textWidth	core/PGraphics.java	/^  public float textWidth(String str) {$/;"	m	class:PGraphics
textWidth	core/PGraphics.java	/^  public float textWidth(char c) {$/;"	m	class:PGraphics
textWidth	core/PGraphics.java	/^  public float textWidth(char[] chars, int start, int length) {$/;"	m	class:PGraphics
textWidth	core/PShapeSVG.java	/^    public float textWidth(String str, float size) {$/;"	m	class:PShapeSVG.Font
textWidthBuffer	core/PGraphics.java	/^  protected char[] textWidthBuffer = new char[8 * 1024];$/;"	f	class:PGraphics
textWidthImpl	core/PGraphics.java	/^  protected float textWidthImpl(char buffer[], int start, int stop) {$/;"	m	class:PGraphics
textWidthImpl	core/PGraphicsJava2D.java	/^  protected float textWidthImpl(char buffer[], int start, int stop) {$/;"	m	class:PGraphicsJava2D
textWidthImpl	opengl/PGraphicsOpenGL.java	/^  protected float textWidthImpl(char buffer[], int start, int stop) {$/;"	m	class:PGraphicsOpenGL
texture	core/PApplet.java	/^  public void texture(PImage image) {$/;"	m	class:PApplet
texture	core/PGraphics.java	/^  public void texture(PImage image) {$/;"	m	class:PGraphics
texture	core/PGraphicsJava2D.java	/^  public void texture(PImage image) {$/;"	m	class:PGraphicsJava2D
texture	core/PShape.java	/^  public void texture(PImage tex) {$/;"	m	class:PShape
texture	opengl/PGraphicsOpenGL.java	/^  protected Texture texture;$/;"	f	class:PGraphicsOpenGL
texture	opengl/PShader.java	/^  protected Texture texture;$/;"	f	class:PShader
textureImage	core/PGraphics.java	/^  public PImage textureImage;$/;"	f	class:PGraphics
textureImage0	opengl/PGraphicsOpenGL.java	/^  protected PImage textureImage0;$/;"	f	class:PGraphicsOpenGL
textureIsBound	opengl/PGL.java	/^  protected boolean textureIsBound(int target, int id) {$/;"	m	class:PGL
textureLoc	opengl/PShader.java	/^  protected int textureLoc;$/;"	f	class:PShader
textureMode	core/PApplet.java	/^  public void textureMode(int mode) {$/;"	m	class:PApplet
textureMode	core/PGraphics.java	/^  public int textureMode    = IMAGE;$/;"	f	class:PGraphics
textureMode	core/PGraphics.java	/^  public void textureMode(int mode) {$/;"	m	class:PGraphics
textureMode	core/PShape.java	/^  protected int textureMode;$/;"	f	class:PShape
textureMode	core/PShape.java	/^  public void textureMode(int mode) {$/;"	m	class:PShape
textureSampling	opengl/PGraphicsOpenGL.java	/^  protected int textureSampling = Texture.TRILINEAR;$/;"	f	class:PGraphicsOpenGL
textureSampling	opengl/PGraphicsOpenGL.java	/^  public void textureSampling(int sampling) {$/;"	m	class:PGraphicsOpenGL
textureU	core/PGraphics.java	/^  public float textureU;$/;"	f	class:PGraphics
textureV	core/PGraphics.java	/^  public float textureV;$/;"	f	class:PGraphics
textureWrap	core/PApplet.java	/^  public void textureWrap(int wrap) {$/;"	m	class:PApplet
textureWrap	core/PGraphics.java	/^  public void textureWrap(int wrap) {$/;"	m	class:PGraphics
textureWrap	opengl/PGraphicsOpenGL.java	/^  protected int textureWrap     = CLAMP;$/;"	f	class:PGraphicsOpenGL
textureWrap	opengl/PGraphicsOpenGL.java	/^  public void textureWrap(int wrap) {$/;"	m	class:PGraphicsOpenGL
textures	opengl/FontTexture.java	/^  protected Texture[] textures = null;$/;"	f	class:FontTexture
textures	opengl/PGraphicsOpenGL.java	/^    PImage[] textures;$/;"	f	class:PGraphicsOpenGL.TexCache
textures	opengl/PShader.java	/^  protected HashMap<Integer, Texture> textures;$/;"	f	class:PShader
textures	opengl/PShapeOpenGL.java	/^  protected HashSet<PImage> textures;$/;"	f	class:PShapeOpenGL
texturingIsEnabled	opengl/PGL.java	/^  protected boolean texturingIsEnabled(int target) {$/;"	m	class:PGL
texturingTargets	opengl/PGL.java	/^  protected static boolean[] texturingTargets = { false, false };$/;"	f	class:PGL
thread	core/PApplet.java	/^  Thread thread;$/;"	f	class:PApplet
thread	core/PApplet.java	/^  public void thread(final String name) {$/;"	m	class:PApplet
threadIsCurrent	opengl/PGL.java	/^  protected boolean threadIsCurrent()  {$/;"	m	class:PGL
tint	core/PApplet.java	/^  public void tint(float gray) {$/;"	m	class:PApplet
tint	core/PApplet.java	/^  public void tint(float gray, float alpha) {$/;"	m	class:PApplet
tint	core/PApplet.java	/^  public void tint(float v1, float v2, float v3) {$/;"	m	class:PApplet
tint	core/PApplet.java	/^  public void tint(float v1, float v2, float v3, float alpha) {$/;"	m	class:PApplet
tint	core/PApplet.java	/^  public void tint(int rgb) {$/;"	m	class:PApplet
tint	core/PApplet.java	/^  public void tint(int rgb, float alpha) {$/;"	m	class:PApplet
tint	core/PGraphics.java	/^  public boolean tint;$/;"	f	class:PGraphics
tint	core/PGraphics.java	/^  public void tint(float gray) {$/;"	m	class:PGraphics
tint	core/PGraphics.java	/^  public void tint(float gray, float alpha) {$/;"	m	class:PGraphics
tint	core/PGraphics.java	/^  public void tint(float v1, float v2, float v3) {$/;"	m	class:PGraphics
tint	core/PGraphics.java	/^  public void tint(float v1, float v2, float v3, float alpha) {$/;"	m	class:PGraphics
tint	core/PGraphics.java	/^  public void tint(int rgb) {$/;"	m	class:PGraphics
tint	core/PGraphics.java	/^  public void tint(int rgb, float alpha) {$/;"	m	class:PGraphics
tint	core/PShape.java	/^  protected boolean tint;$/;"	f	class:PShape
tint	core/PShape.java	/^  public void tint(float gray) {$/;"	m	class:PShape
tint	core/PShape.java	/^  public void tint(float gray, float alpha) {$/;"	m	class:PShape
tint	core/PShape.java	/^  public void tint(float x, float y, float z) {$/;"	m	class:PShape
tint	core/PShape.java	/^  public void tint(float x, float y, float z, float alpha) {$/;"	m	class:PShape
tint	core/PShape.java	/^  public void tint(int rgb) {$/;"	m	class:PShape
tint	core/PShape.java	/^  public void tint(int rgb, float alpha) {$/;"	m	class:PShape
tint	core/PStyle.java	/^  public boolean tint;$/;"	f	class:PStyle
tintA	core/PGraphics.java	/^  protected float tintR, tintG, tintB, tintA;$/;"	f	class:PGraphics
tintAi	core/PGraphics.java	/^  protected int tintRi, tintGi, tintBi, tintAi;$/;"	f	class:PGraphics
tintAlpha	core/PGraphics.java	/^  protected boolean tintAlpha;$/;"	f	class:PGraphics
tintB	core/PGraphics.java	/^  protected float tintR, tintG, tintB, tintA;$/;"	f	class:PGraphics
tintBi	core/PGraphics.java	/^  protected int tintRi, tintGi, tintBi, tintAi;$/;"	f	class:PGraphics
tintColor	core/PGraphics.java	/^  public int tintColor;$/;"	f	class:PGraphics
tintColor	core/PShape.java	/^  protected int tintColor;$/;"	f	class:PShape
tintColor	core/PStyle.java	/^  public int tintColor;$/;"	f	class:PStyle
tintColorObject	core/PGraphicsJava2D.java	/^  protected Color tintColorObject;$/;"	f	class:PGraphicsJava2D
tintFromCalc	core/PGraphics.java	/^  protected void tintFromCalc() {$/;"	m	class:PGraphics
tintFromCalc	core/PGraphicsJava2D.java	/^  protected void tintFromCalc() {$/;"	m	class:PGraphicsJava2D
tintG	core/PGraphics.java	/^  protected float tintR, tintG, tintB, tintA;$/;"	f	class:PGraphics
tintGi	core/PGraphics.java	/^  protected int tintRi, tintGi, tintBi, tintAi;$/;"	f	class:PGraphics
tintR	core/PGraphics.java	/^  protected float tintR, tintG, tintB, tintA;$/;"	f	class:PGraphics
tintRi	core/PGraphics.java	/^  protected int tintRi, tintGi, tintBi, tintAi;$/;"	f	class:PGraphics
tinted	core/PGraphicsJava2D.java	/^    boolean tinted;$/;"	f	class:PGraphicsJava2D.ImageCache
tintedColor	core/PGraphicsJava2D.java	/^    int tintedColor;$/;"	f	class:PGraphicsJava2D.ImageCache
tintedTemp	core/PGraphicsJava2D.java	/^    int[] tintedTemp;  \/\/ one row of tinted pixels$/;"	f	class:PGraphicsJava2D.ImageCache
toString	core/PVector.java	/^  public String toString() {$/;"	m	class:PVector
toString	data/FloatDict.java	/^  public String toString() {$/;"	m	class:FloatDict
toString	data/FloatList.java	/^  public String toString() {$/;"	m	class:FloatList
toString	data/IntDict.java	/^  public String toString() {$/;"	m	class:IntDict
toString	data/IntList.java	/^  public String toString() {$/;"	m	class:IntList
toString	data/JSONArray.java	/^  public String toString() {$/;"	m	class:JSONArray
toString	data/JSONObject.java	/^    public String toString() {$/;"	m	class:JSONObject.Null
toString	data/JSONObject.java	/^  public String toString() {$/;"	m	class:JSONObject
toString	data/JSONTokener.java	/^  public String toString() {$/;"	m	class:JSONTokener
toString	data/StringDict.java	/^  public String toString() {$/;"	m	class:StringDict
toString	data/StringList.java	/^  public String toString() {$/;"	m	class:StringList
toString	data/XML.java	/^  public String toString() {$/;"	m	class:XML
topExtent	core/PFont.java	/^    public int topExtent;$/;"	f	class:PFont.Glyph
transform	core/PGraphicsJava2D.java	/^  double[] transform = new double[6];$/;"	f	class:PGraphicsJava2D
transform	core/PShapeSVG.java	/^    AffineTransform transform;$/;"	f	class:PShapeSVG.Gradient
transform	opengl/PGraphicsOpenGL.java	/^    PMatrix transform;$/;"	f	class:PGraphicsOpenGL.Tessellator
transform	opengl/PShapeOpenGL.java	/^  protected PMatrix transform;$/;"	f	class:PShapeOpenGL
transform	opengl/PShapeOpenGL.java	/^  protected void transform(int type, float... args) {$/;"	m	class:PShapeOpenGL
transformCount	core/PGraphicsJava2D.java	/^  int transformCount;$/;"	f	class:PGraphicsJava2D
transformMatLoc	opengl/PShader.java	/^  protected int transformMatLoc;$/;"	f	class:PShader
transformScale	opengl/PGraphicsOpenGL.java	/^    float transformScale() {$/;"	m	class:PGraphicsOpenGL.Tessellator
transformScale	opengl/PGraphicsOpenGL.java	/^    float transformScale;$/;"	f	class:PGraphicsOpenGL.Tessellator
transformStack	core/PGraphicsJava2D.java	/^  AffineTransform transformStack[] =$/;"	f	class:PGraphicsJava2D
transformStack	opengl/PShapeOpenGL.java	/^  protected Stack<PMatrix> transformStack;$/;"	f	class:PShapeOpenGL
translate	core/PApplet.java	/^  public void translate(float x, float y) {$/;"	m	class:PApplet
translate	core/PApplet.java	/^  public void translate(float x, float y, float z) {$/;"	m	class:PApplet
translate	core/PGraphics.java	/^  public void translate(float x, float y) {$/;"	m	class:PGraphics
translate	core/PGraphics.java	/^  public void translate(float x, float y, float z) {$/;"	m	class:PGraphics
translate	core/PGraphicsJava2D.java	/^  public void translate(float tx, float ty) {$/;"	m	class:PGraphicsJava2D
translate	core/PMatrix.java	/^  public void translate(float tx, float ty);$/;"	m	interface:PMatrix
translate	core/PMatrix.java	/^  public void translate(float tx, float ty, float tz);$/;"	m	interface:PMatrix
translate	core/PMatrix2D.java	/^  public void translate(float tx, float ty) {$/;"	m	class:PMatrix2D
translate	core/PMatrix2D.java	/^  public void translate(float x, float y, float z) {$/;"	m	class:PMatrix2D
translate	core/PMatrix3D.java	/^  public void translate(float tx, float ty) {$/;"	m	class:PMatrix3D
translate	core/PMatrix3D.java	/^  public void translate(float tx, float ty, float tz) {$/;"	m	class:PMatrix3D
translate	core/PShape.java	/^  public void translate(float x, float y) {$/;"	m	class:PShape
translate	core/PShape.java	/^  public void translate(float x, float y, float z) {$/;"	m	class:PShape
translate	opengl/PGraphics2D.java	/^  public void translate(float tx, float ty, float tz) {$/;"	m	class:PGraphics2D
translate	opengl/PGraphicsOpenGL.java	/^  public void translate(float tx, float ty) {$/;"	m	class:PGraphicsOpenGL
translate	opengl/PGraphicsOpenGL.java	/^  public void translate(float tx, float ty, float tz) {$/;"	m	class:PGraphicsOpenGL
translate	opengl/PShapeOpenGL.java	/^  public void translate(float tx, float ty) {$/;"	m	class:PShapeOpenGL
translate	opengl/PShapeOpenGL.java	/^  public void translate(float tx, float ty, float tz) {$/;"	m	class:PShapeOpenGL
translateImpl	opengl/PGraphicsOpenGL.java	/^  protected void translateImpl(float tx, float ty, float tz) {$/;"	m	class:PGraphicsOpenGL
transpose	core/PMatrix.java	/^  public void transpose();$/;"	m	interface:PMatrix
transpose	core/PMatrix2D.java	/^  public void transpose() {$/;"	m	class:PMatrix2D
transpose	core/PMatrix3D.java	/^  public void transpose() {$/;"	m	class:PMatrix3D
triShaderAttrRegexp	opengl/PShader.java	/^  static protected String triShaderAttrRegexp =$/;"	f	class:PShader
triangle	core/PApplet.java	/^  public void triangle(float x1, float y1, float x2, float y2,$/;"	m	class:PApplet
triangle	core/PGraphics.java	/^  public void triangle(float x1, float y1, float x2, float y2,$/;"	m	class:PGraphics
triangle	core/PGraphicsJava2D.java	/^  public void triangle(float x1, float y1, float x2, float y2,$/;"	m	class:PGraphicsJava2D
triangle	opengl/PGraphicsOpenGL.java	/^  public void triangle(float x1, float y1, float x2, float y2,$/;"	m	class:PGraphicsOpenGL
trim	core/PApplet.java	/^  static public String trim(String str) {$/;"	m	class:PApplet
trim	core/PApplet.java	/^  static public String[] trim(String[] array) {$/;"	m	class:PApplet
trim	data/Table.java	/^  public void trim() {$/;"	m	class:Table
trim	data/Table.java	/^  public void trim(String columnName) {$/;"	m	class:Table
trim	data/Table.java	/^  public void trim(int column) {$/;"	m	class:Table
trim	opengl/PGraphicsOpenGL.java	/^    void trim() {$/;"	m	class:PGraphicsOpenGL.InGeometry
trim	opengl/PGraphicsOpenGL.java	/^    void trim() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
trimAmbient	opengl/PGraphicsOpenGL.java	/^    void trimAmbient() {$/;"	m	class:PGraphicsOpenGL.InGeometry
trimCodes	opengl/PGraphicsOpenGL.java	/^    void trimCodes() {$/;"	m	class:PGraphicsOpenGL.InGeometry
trimColors	opengl/PGraphicsOpenGL.java	/^    void trimColors() {$/;"	m	class:PGraphicsOpenGL.InGeometry
trimEdges	opengl/PGraphicsOpenGL.java	/^    void trimEdges() {$/;"	m	class:PGraphicsOpenGL.InGeometry
trimEmissive	opengl/PGraphicsOpenGL.java	/^    void trimEmissive() {$/;"	m	class:PGraphicsOpenGL.InGeometry
trimLineColors	opengl/PGraphicsOpenGL.java	/^    void trimLineColors() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
trimLineDirections	opengl/PGraphicsOpenGL.java	/^    void trimLineDirections() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
trimLineIndices	opengl/PGraphicsOpenGL.java	/^    void trimLineIndices() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
trimLineVertices	opengl/PGraphicsOpenGL.java	/^    void trimLineVertices() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
trimNormals	opengl/PGraphicsOpenGL.java	/^    void trimNormals() {$/;"	m	class:PGraphicsOpenGL.InGeometry
trimPointColors	opengl/PGraphicsOpenGL.java	/^    void trimPointColors() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
trimPointIndices	opengl/PGraphicsOpenGL.java	/^    void trimPointIndices() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
trimPointOffsets	opengl/PGraphicsOpenGL.java	/^    void trimPointOffsets() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
trimPointVertices	opengl/PGraphicsOpenGL.java	/^    void trimPointVertices() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
trimPolyAmbient	opengl/PGraphicsOpenGL.java	/^    void trimPolyAmbient() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
trimPolyColors	opengl/PGraphicsOpenGL.java	/^    void trimPolyColors() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
trimPolyEmissive	opengl/PGraphicsOpenGL.java	/^    void trimPolyEmissive() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
trimPolyIndices	opengl/PGraphicsOpenGL.java	/^    void trimPolyIndices() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
trimPolyNormals	opengl/PGraphicsOpenGL.java	/^    void trimPolyNormals() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
trimPolyShininess	opengl/PGraphicsOpenGL.java	/^    void trimPolyShininess() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
trimPolySpecular	opengl/PGraphicsOpenGL.java	/^    void trimPolySpecular() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
trimPolyTexCoords	opengl/PGraphicsOpenGL.java	/^    void trimPolyTexCoords() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
trimPolyVertices	opengl/PGraphicsOpenGL.java	/^    void trimPolyVertices() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
trimShininess	opengl/PGraphicsOpenGL.java	/^    void trimShininess() {$/;"	m	class:PGraphicsOpenGL.InGeometry
trimSpecular	opengl/PGraphicsOpenGL.java	/^    void trimSpecular() {$/;"	m	class:PGraphicsOpenGL.InGeometry
trimStrokeColors	opengl/PGraphicsOpenGL.java	/^    void trimStrokeColors() {$/;"	m	class:PGraphicsOpenGL.InGeometry
trimStrokeWeights	opengl/PGraphicsOpenGL.java	/^    void trimStrokeWeights() {$/;"	m	class:PGraphicsOpenGL.InGeometry
trimTexCoords	opengl/PGraphicsOpenGL.java	/^    void trimTexCoords() {$/;"	m	class:PGraphicsOpenGL.InGeometry
trimVertices	opengl/PGraphicsOpenGL.java	/^    void trimVertices() {$/;"	m	class:PGraphicsOpenGL.InGeometry
tx1	core/PShapeSVG.java	/^      float tx1, ty1, tx2, ty2;$/;"	f	class:PShapeSVG.LinearGradientPaint.LinearGradientContext
tx2	core/PShapeSVG.java	/^      float tx1, ty1, tx2, ty2;$/;"	f	class:PShapeSVG.LinearGradientPaint.LinearGradientContext
ty1	core/PShapeSVG.java	/^      float tx1, ty1, tx2, ty2;$/;"	f	class:PShapeSVG.LinearGradientPaint.LinearGradientContext
ty2	core/PShapeSVG.java	/^      float tx1, ty1, tx2, ty2;$/;"	f	class:PShapeSVG.LinearGradientPaint.LinearGradientContext
type	opengl/PShader.java	/^    int type;$/;"	f	class:PShader.UniformValue
type	opengl/PShader.java	/^  protected int type;$/;"	f	class:PShader
typeIdx	opengl/LinePath.java	/^    int typeIdx;$/;"	f	class:LinePath.PathIterator
typedParse	data/Table.java	/^  public Table typedParse(InputStream input, String options) throws IOException {$/;"	m	class:Table
u0	opengl/FontTexture.java	/^    float u0, u1;$/;"	f	class:FontTexture.TextureInfo
u1	core/PImage.java	/^  private int fracU, ifU, fracV, ifV, u1, u2, v1, v2, sX, sY, iw, iw1, ih1;$/;"	f	class:PImage	file:
u1	opengl/FontTexture.java	/^    float u0, u1;$/;"	f	class:FontTexture.TextureInfo
u2	core/PImage.java	/^  private int fracU, ifU, fracV, ifV, u1, u2, v1, v2, sX, sY, iw, iw1, ih1;$/;"	f	class:PImage	file:
ul	core/PImage.java	/^  private int ul, ll, ur, lr, cUL, cLL, cUR, cLR;$/;"	f	class:PImage	file:
unbinary	core/PApplet.java	/^  static final public int unbinary(String value) {$/;"	m	class:PApplet
unbind	opengl/PShader.java	/^  public void unbind() {$/;"	m	class:PShader
unbind	opengl/Texture.java	/^  public void unbind() {$/;"	m	class:Texture
unbindFrontTexture	opengl/PGL.java	/^  protected void unbindFrontTexture() {$/;"	m	class:PGL
unbindFrontTexture	opengl/PGraphicsOpenGL.java	/^  protected void unbindFrontTexture() {$/;"	m	class:PGraphicsOpenGL
unbindFrontTexture	opengl/PJOGL.java	/^  protected void unbindFrontTexture() {$/;"	m	class:PJOGL
unbindLineBuffers	opengl/PGraphicsOpenGL.java	/^  protected void unbindLineBuffers() {$/;"	m	class:PGraphicsOpenGL
unbindPointBuffers	opengl/PGraphicsOpenGL.java	/^  protected void unbindPointBuffers() {$/;"	m	class:PGraphicsOpenGL
unbindPolyBuffers	opengl/PGraphicsOpenGL.java	/^  protected void unbindPolyBuffers() {$/;"	m	class:PGraphicsOpenGL
unbindTextures	opengl/PShader.java	/^  protected void unbindTextures() {$/;"	m	class:PShader
unbindTyped	opengl/PShader.java	/^  protected void unbindTyped() {$/;"	m	class:PShader
unclampLine2D	opengl/PGraphicsOpenGL.java	/^    void unclampLine2D(int tessIdx, float x, float y) {$/;"	m	class:PGraphicsOpenGL.Tessellator
underlinePosition	core/PShapeSVG.java	/^    int underlinePosition;$/;"	f	class:PShapeSVG.FontFace
underlineThickness	core/PShapeSVG.java	/^    int underlineThickness;$/;"	f	class:PShapeSVG.FontFace
unhex	core/PApplet.java	/^  static final public int unhex(String value) {$/;"	m	class:PApplet
unicode	core/PShapeSVG.java	/^    char unicode;$/;"	f	class:PShapeSVG.FontGlyph
unicodeGlyphs	core/PShapeSVG.java	/^    public HashMap<Character,FontGlyph> unicodeGlyphs;$/;"	f	class:PShapeSVG.Font
uniform1f	opengl/PGL.java	/^  public abstract void uniform1f(int location, float value);$/;"	m	class:PGL
uniform1f	opengl/PJOGL.java	/^  public void uniform1f(int location, float value) {$/;"	m	class:PJOGL
uniform1fv	opengl/PGL.java	/^  public abstract void uniform1fv(int location, int count, FloatBuffer v);$/;"	m	class:PGL
uniform1fv	opengl/PJOGL.java	/^  public void uniform1fv(int location, int count, FloatBuffer v) {$/;"	m	class:PJOGL
uniform1i	opengl/PGL.java	/^  public abstract void uniform1i(int location, int value);$/;"	m	class:PGL
uniform1i	opengl/PJOGL.java	/^  public void uniform1i(int location, int value) {$/;"	m	class:PJOGL
uniform1iv	opengl/PGL.java	/^  public abstract void uniform1iv(int location, int count, IntBuffer v);$/;"	m	class:PGL
uniform1iv	opengl/PJOGL.java	/^  public void uniform1iv(int location, int count, IntBuffer v) {$/;"	m	class:PJOGL
uniform2f	opengl/PGL.java	/^  public abstract void uniform2f(int location, float value0, float value1);$/;"	m	class:PGL
uniform2f	opengl/PJOGL.java	/^  public void uniform2f(int location, float value0, float value1) {$/;"	m	class:PJOGL
uniform2fv	opengl/PGL.java	/^  public abstract void uniform2fv(int location, int count, FloatBuffer v);$/;"	m	class:PGL
uniform2fv	opengl/PJOGL.java	/^  public void uniform2fv(int location, int count, FloatBuffer v) {$/;"	m	class:PJOGL
uniform2i	opengl/PGL.java	/^  public abstract void uniform2i(int location, int value0, int value1);$/;"	m	class:PGL
uniform2i	opengl/PJOGL.java	/^  public void uniform2i(int location, int value0, int value1) {$/;"	m	class:PJOGL
uniform2iv	opengl/PGL.java	/^  public abstract void uniform2iv(int location, int count, IntBuffer v);$/;"	m	class:PGL
uniform2iv	opengl/PJOGL.java	/^  public void uniform2iv(int location, int count, IntBuffer v) {$/;"	m	class:PJOGL
uniform3f	opengl/PGL.java	/^  public abstract void uniform3f(int location, float value0, float value1, float value2);$/;"	m	class:PGL
uniform3f	opengl/PJOGL.java	/^  public void uniform3f(int location, float value0, float value1, float value2) {$/;"	m	class:PJOGL
uniform3fv	opengl/PGL.java	/^  public abstract void uniform3fv(int location, int count, FloatBuffer v);$/;"	m	class:PGL
uniform3fv	opengl/PJOGL.java	/^  public void uniform3fv(int location, int count, FloatBuffer v) {$/;"	m	class:PJOGL
uniform3i	opengl/PGL.java	/^  public abstract void uniform3i(int location, int value0, int value1, int value2);$/;"	m	class:PGL
uniform3i	opengl/PJOGL.java	/^  public void uniform3i(int location, int value0, int value1, int value2) {$/;"	m	class:PJOGL
uniform3iv	opengl/PGL.java	/^  public abstract void uniform3iv(int location, int count, IntBuffer v);$/;"	m	class:PGL
uniform3iv	opengl/PJOGL.java	/^  public void uniform3iv(int location, int count, IntBuffer v) {$/;"	m	class:PJOGL
uniform4f	opengl/PGL.java	/^  public abstract void uniform4f(int location, float value0, float value1, float value2, float value3);$/;"	m	class:PGL
uniform4f	opengl/PJOGL.java	/^  public void uniform4f(int location, float value0, float value1, float value2, float value3) {$/;"	m	class:PJOGL
uniform4fv	opengl/PGL.java	/^  public abstract void uniform4fv(int location, int count, FloatBuffer v);$/;"	m	class:PGL
uniform4fv	opengl/PJOGL.java	/^  public void uniform4fv(int location, int count, FloatBuffer v) {$/;"	m	class:PJOGL
uniform4i	opengl/PGL.java	/^  public abstract void uniform4i(int location, int value0, int value1, int value2, int value3);$/;"	m	class:PGL
uniform4i	opengl/PJOGL.java	/^  public void uniform4i(int location, int value0, int value1, int value2, int value3) {$/;"	m	class:PJOGL
uniform4iv	opengl/PGL.java	/^  public abstract void uniform4iv(int location, int count, IntBuffer v);$/;"	m	class:PGL
uniform4iv	opengl/PJOGL.java	/^  public void uniform4iv(int location, int count, IntBuffer v) {$/;"	m	class:PJOGL
uniformMatrix2fv	opengl/PGL.java	/^  public abstract void uniformMatrix2fv(int location, int count, boolean transpose, FloatBuffer mat);$/;"	m	class:PGL
uniformMatrix2fv	opengl/PJOGL.java	/^  public void uniformMatrix2fv(int location, int count, boolean transpose, FloatBuffer mat) {$/;"	m	class:PJOGL
uniformMatrix3fv	opengl/PGL.java	/^  public abstract void uniformMatrix3fv(int location, int count, boolean transpose, FloatBuffer mat);$/;"	m	class:PGL
uniformMatrix3fv	opengl/PJOGL.java	/^  public void uniformMatrix3fv(int location, int count, boolean transpose, FloatBuffer mat) {$/;"	m	class:PJOGL
uniformMatrix4fv	opengl/PGL.java	/^  public abstract void uniformMatrix4fv(int location, int count, boolean transpose, FloatBuffer mat);$/;"	m	class:PGL
uniformMatrix4fv	opengl/PJOGL.java	/^  public void uniformMatrix4fv(int location, int count, boolean transpose, FloatBuffer mat) {$/;"	m	class:PJOGL
uniformValues	opengl/PShader.java	/^  protected HashMap<Integer, UniformValue> uniformValues = null;$/;"	f	class:PShader
unitsPerEm	core/PShapeSVG.java	/^    int unitsPerEm;    \/\/ dflt 1000$/;"	f	class:PShapeSVG.FontFace
unmapBuffer	opengl/PGL.java	/^  public abstract void unmapBuffer(int target);$/;"	m	class:PGL
unmapBuffer	opengl/PJOGL.java	/^  public void unmapBuffer(int target) {$/;"	m	class:PJOGL
unregisterDispose	core/PApplet.java	/^  public void unregisterDispose(Object o) {$/;"	m	class:PApplet
unregisterDraw	core/PApplet.java	/^  public void unregisterDraw(Object o) {$/;"	m	class:PApplet
unregisterKeyEvent	core/PApplet.java	/^  public void unregisterKeyEvent(Object o) {$/;"	m	class:PApplet
unregisterMethod	core/PApplet.java	/^  public void unregisterMethod(String name, Object target) {$/;"	m	class:PApplet
unregisterMouseEvent	core/PApplet.java	/^  public void unregisterMouseEvent(Object o) {$/;"	m	class:PApplet
unregisterPost	core/PApplet.java	/^  public void unregisterPost(Object o) {$/;"	m	class:PApplet
unregisterPre	core/PApplet.java	/^  public void unregisterPre(Object o) {$/;"	m	class:PApplet
unregisterSize	core/PApplet.java	/^  public void unregisterSize(Object o) {$/;"	m	class:PApplet
update	core/PApplet.java	/^  public void update(Graphics screen) {$/;"	m	class:PApplet
update	core/PGraphicsJava2D.java	/^    public void update(PImage source, boolean tint, int tintColor) {$/;"	m	class:PGraphicsJava2D.ImageCache
updateByteBuffer	opengl/PGL.java	/^  protected static ByteBuffer updateByteBuffer(ByteBuffer buf, byte[] arr,$/;"	m	class:PGL
updateByteBuffer	opengl/PGL.java	/^  protected static void updateByteBuffer(ByteBuffer buf, byte[] arr,$/;"	m	class:PGL
updateDisplay	opengl/PGraphicsOpenGL.java	/^  public void updateDisplay() {$/;"	m	class:PGraphicsOpenGL
updateFloatBuffer	opengl/PGL.java	/^  protected static FloatBuffer updateFloatBuffer(FloatBuffer buf, float[] arr,$/;"	m	class:PGL
updateFloatBuffer	opengl/PGL.java	/^  protected static void updateFloatBuffer(FloatBuffer buf, float[] arr,$/;"	m	class:PGL
updateFloatBuffer	opengl/PShader.java	/^  protected void updateFloatBuffer(float[] vec) {$/;"	m	class:PShader
updateGLModelview	opengl/PGraphicsOpenGL.java	/^  protected void updateGLModelview() {$/;"	m	class:PGraphicsOpenGL
updateGLNormal	opengl/PGraphicsOpenGL.java	/^  protected void updateGLNormal() {$/;"	m	class:PGraphicsOpenGL
updateGLProjection	opengl/PGraphicsOpenGL.java	/^  protected void updateGLProjection() {$/;"	m	class:PGraphicsOpenGL
updateGLProjmodelview	opengl/PGraphicsOpenGL.java	/^  protected void updateGLProjmodelview() {$/;"	m	class:PGraphicsOpenGL
updateGeometry	opengl/PShapeOpenGL.java	/^  protected void updateGeometry() {$/;"	m	class:PShapeOpenGL
updateGeometryImpl	opengl/PShapeOpenGL.java	/^  protected void updateGeometryImpl() {$/;"	m	class:PShapeOpenGL
updateGlyphsTexCoords	opengl/FontTexture.java	/^  public void updateGlyphsTexCoords() {$/;"	m	class:FontTexture
updateIntBuffer	opengl/PGL.java	/^  protected static IntBuffer updateIntBuffer(IntBuffer buf, int[] arr,$/;"	m	class:PGL
updateIntBuffer	opengl/PGL.java	/^  protected static void updateIntBuffer(IntBuffer buf, int[] arr,$/;"	m	class:PGL
updateIntBuffer	opengl/PShader.java	/^  protected void updateIntBuffer(int[] vec) {$/;"	m	class:PShader
updateLineBuffers	opengl/PGraphicsOpenGL.java	/^  protected void updateLineBuffers() {$/;"	m	class:PGraphicsOpenGL
updateLineColorsBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updateLineColorsBuffer() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updateLineColorsBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updateLineColorsBuffer(int offset, int size) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updateLineDirectionsBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updateLineDirectionsBuffer() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updateLineDirectionsBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updateLineDirectionsBuffer(int offset, int size) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updateLineIndexCache	opengl/PShapeOpenGL.java	/^  protected void updateLineIndexCache() {$/;"	m	class:PShapeOpenGL
updateLineIndicesBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updateLineIndicesBuffer() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updateLineIndicesBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updateLineIndicesBuffer(int offset, int size) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updateLineVerticesBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updateLineVerticesBuffer() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updateLineVerticesBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updateLineVerticesBuffer(int offset, int size) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updateListeners	core/PApplet.java	/^  public void updateListeners(Component comp) {$/;"	m	class:PApplet
updatePixelBuffer	opengl/Texture.java	/^  protected void updatePixelBuffer(int[] pixels) {$/;"	m	class:Texture
updatePixels	core/PApplet.java	/^  public void updatePixels() {$/;"	m	class:PApplet
updatePixels	core/PApplet.java	/^  public void updatePixels(int x1, int y1, int x2, int y2) {$/;"	m	class:PApplet
updatePixels	core/PGraphicsJava2D.java	/^  public void updatePixels(int x, int y, int c, int d) {$/;"	m	class:PGraphicsJava2D
updatePixels	core/PGraphicsRetina2D.java	/^  public void updatePixels() {$/;"	m	class:PGraphicsRetina2D
updatePixels	core/PGraphicsRetina2D.java	/^  public void updatePixels(int ux, int uy, int uw, int uh) {$/;"	m	class:PGraphicsRetina2D
updatePixels	core/PImage.java	/^  public void updatePixels() {  \/\/ ignore$/;"	m	class:PImage
updatePixels	core/PImage.java	/^  public void updatePixels(int x, int y, int w, int h) {  \/\/ ignore$/;"	m	class:PImage
updatePointBuffers	opengl/PGraphicsOpenGL.java	/^  protected void updatePointBuffers() {$/;"	m	class:PGraphicsOpenGL
updatePointColorsBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updatePointColorsBuffer() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updatePointColorsBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updatePointColorsBuffer(int offset, int size) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updatePointIndexCache	opengl/PShapeOpenGL.java	/^  protected void updatePointIndexCache() {$/;"	m	class:PShapeOpenGL
updatePointIndicesBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updatePointIndicesBuffer() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updatePointIndicesBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updatePointIndicesBuffer(int offset, int size) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updatePointOffsetsBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updatePointOffsetsBuffer() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updatePointOffsetsBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updatePointOffsetsBuffer(int offset, int size) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updatePointVerticesBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updatePointVerticesBuffer() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updatePointVerticesBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updatePointVerticesBuffer(int offset, int size) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updatePolyAmbientBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updatePolyAmbientBuffer() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updatePolyAmbientBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updatePolyAmbientBuffer(int offset, int size) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updatePolyBuffers	opengl/PGraphicsOpenGL.java	/^  protected void updatePolyBuffers(boolean lit, boolean tex,$/;"	m	class:PGraphicsOpenGL
updatePolyColorsBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updatePolyColorsBuffer() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updatePolyColorsBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updatePolyColorsBuffer(int offset, int size) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updatePolyEmissiveBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updatePolyEmissiveBuffer() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updatePolyEmissiveBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updatePolyEmissiveBuffer(int offset, int size) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updatePolyIndexCache	opengl/PShapeOpenGL.java	/^  protected void updatePolyIndexCache() {$/;"	m	class:PShapeOpenGL
updatePolyIndicesBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updatePolyIndicesBuffer() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updatePolyIndicesBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updatePolyIndicesBuffer(int offset, int size) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updatePolyNormalsBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updatePolyNormalsBuffer() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updatePolyNormalsBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updatePolyNormalsBuffer(int offset, int size) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updatePolyShininessBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updatePolyShininessBuffer() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updatePolyShininessBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updatePolyShininessBuffer(int offset, int size) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updatePolySpecularBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updatePolySpecularBuffer() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updatePolySpecularBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updatePolySpecularBuffer(int offset, int size) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updatePolyTexCoordsBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updatePolyTexCoordsBuffer() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updatePolyTexCoordsBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updatePolyTexCoordsBuffer(int offset, int size) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updatePolyVerticesBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updatePolyVerticesBuffer() {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updatePolyVerticesBuffer	opengl/PGraphicsOpenGL.java	/^    protected void updatePolyVerticesBuffer(int offset, int size) {$/;"	m	class:PGraphicsOpenGL.TessGeometry
updateProjmodelview	opengl/PGraphicsOpenGL.java	/^  public void updateProjmodelview() {$/;"	m	class:PGraphicsOpenGL
updateRoot	opengl/PShapeOpenGL.java	/^  protected void updateRoot(PShape root) {$/;"	m	class:PShapeOpenGL
updateShortBuffer	opengl/PGL.java	/^  protected static ShortBuffer updateShortBuffer(ShortBuffer buf, short[] arr,$/;"	m	class:PGL
updateShortBuffer	opengl/PGL.java	/^  protected static void updateShortBuffer(ShortBuffer buf, short[] arr,$/;"	m	class:PGL
updateTessellation	opengl/PShapeOpenGL.java	/^  protected void updateTessellation() {$/;"	m	class:PShapeOpenGL
updateTex	opengl/FontTexture.java	/^    void updateTex() {$/;"	m	class:FontTexture.TextureInfo
updateTex	opengl/PGraphicsOpenGL.java	/^    void updateTex() {$/;"	m	class:PGraphicsOpenGL.Tessellator
updateTexels	opengl/Texture.java	/^  public void updateTexels() {$/;"	m	class:Texture
updateTexels	opengl/Texture.java	/^  public void updateTexels(int x, int y, int w, int h) {$/;"	m	class:Texture
updateTexelsImpl	opengl/Texture.java	/^  protected void updateTexelsImpl(int x, int y, int w, int h) {$/;"	m	class:Texture
updateTexture	opengl/PGraphicsOpenGL.java	/^  protected void updateTexture(PImage img, Texture tex) {$/;"	m	class:PGraphicsOpenGL
updateTexture	opengl/PGraphicsOpenGL.java	/^  public void updateTexture() {$/;"	m	class:PGraphicsOpenGL
updateTexture	opengl/PGraphicsOpenGL.java	/^  public void updateTexture(int x, int y, int w, int h) {$/;"	m	class:PGraphicsOpenGL
updateUV	opengl/FontTexture.java	/^    void updateUV() {$/;"	m	class:FontTexture.TextureInfo
upper	data/StringList.java	/^  public void upper() {$/;"	m	class:StringList
ur	core/PImage.java	/^  private int ul, ll, ur, lr, cUL, cLL, cUR, cLR;$/;"	f	class:PImage	file:
urlDecode	core/PApplet.java	/^  static public String urlDecode(String str) {$/;"	m	class:PApplet
urlEncode	core/PApplet.java	/^  static public String urlEncode(String str) {$/;"	m	class:PApplet
useActive	core/PApplet.java	/^  boolean useActive = true;$/;"	f	class:PApplet
useCanvas	core/PGraphicsJava2D.java	/^  boolean useCanvas = false;$/;"	f	class:PGraphicsJava2D
useNativeSelect	core/PApplet.java	/^  static public boolean useNativeSelect = (platform != LINUX);$/;"	f	class:PApplet
useOffscreen	core/PGraphicsJava2D.java	/^  boolean useOffscreen = false;$/;"	f	class:PGraphicsJava2D
usePrevious	data/JSONTokener.java	/^  private boolean usePrevious;$/;"	f	class:JSONTokener	file:
useProgram	opengl/PGL.java	/^  public abstract void useProgram(int program);$/;"	m	class:PGL
useProgram	opengl/PJOGL.java	/^  public void useProgram(int program) {$/;"	m	class:PJOGL
useQuartz	core/PApplet.java	/^  static public boolean useQuartz = false;$/;"	f	class:PApplet
useStrategy	core/PApplet.java	/^  boolean useStrategy = false;$/;"	f	class:PApplet
usedBuffers	opengl/Texture.java	/^  protected LinkedList<BufferData> usedBuffers = null;$/;"	f	class:Texture
usingFrontTex	opengl/PGL.java	/^  protected boolean usingFrontTex = false;$/;"	f	class:PGL
usingMipmaps	opengl/Texture.java	/^  protected boolean usingMipmaps;$/;"	f	class:Texture
usingMipmaps	opengl/Texture.java	/^  public boolean usingMipmaps()  {$/;"	m	class:Texture
usingMipmaps	opengl/Texture.java	/^  public void usingMipmaps(boolean mipmaps, int sampling)  {$/;"	m	class:Texture
usingRepeat	opengl/Texture.java	/^  protected boolean usingRepeat;$/;"	f	class:Texture
usingRepeat	opengl/Texture.java	/^  public boolean usingRepeat()  {$/;"	m	class:Texture
usingRepeat	opengl/Texture.java	/^  public void usingRepeat(boolean repeat)  {$/;"	m	class:Texture
v0	opengl/FontTexture.java	/^    float v0, v1;$/;"	f	class:FontTexture.TextureInfo
v1	core/PImage.java	/^  private int fracU, ifU, fracV, ifV, u1, u2, v1, v2, sX, sY, iw, iw1, ih1;$/;"	f	class:PImage	file:
v1	opengl/FontTexture.java	/^    float v0, v1;$/;"	f	class:FontTexture.TextureInfo
v2	core/PImage.java	/^  private int fracU, ifU, fracV, ifV, u1, u2, v1, v2, sX, sY, iw, iw1, ih1;$/;"	f	class:PImage	file:
validateFramebuffer	opengl/PGL.java	/^  protected boolean validateFramebuffer() {$/;"	m	class:PGL
validateProgram	opengl/PGL.java	/^  public abstract void validateProgram(int program);$/;"	m	class:PGL
validateProgram	opengl/PJOGL.java	/^  public void validateProgram(int program) {$/;"	m	class:PJOGL
value	core/PFont.java	/^    public int value;$/;"	f	class:PFont.Glyph
value	data/FloatDict.java	/^  public float value(int index) {$/;"	m	class:FloatDict
value	data/IntDict.java	/^  public int value(int index) {$/;"	m	class:IntDict
value	data/StringDict.java	/^  public String value(int index) {$/;"	m	class:StringDict
value	opengl/PShader.java	/^    Object value;$/;"	f	class:PShader.UniformValue
valueArray	data/FloatDict.java	/^  public float[] valueArray() {$/;"	m	class:FloatDict
valueArray	data/FloatDict.java	/^  public float[] valueArray(float[] array) {$/;"	m	class:FloatDict
valueArray	data/IntDict.java	/^  public int[] valueArray() {$/;"	m	class:IntDict
valueArray	data/IntDict.java	/^  public int[] valueArray(int[] array) {$/;"	m	class:IntDict
valueArray	data/StringDict.java	/^  public String[] valueArray() {$/;"	m	class:StringDict
valueArray	data/StringDict.java	/^  public String[] valueArray(String[] array) {$/;"	m	class:StringDict
valueIterator	data/IntDict.java	/^  public Iterator<Integer> valueIterator() {$/;"	m	class:IntDict
valueToString	data/JSONObject.java	/^  static protected String valueToString(Object value) {$/;"	m	class:JSONObject
values	data/FloatDict.java	/^  protected float[] values;$/;"	f	class:FloatDict
values	data/FloatDict.java	/^  public Iterable<Float> values() {$/;"	m	class:FloatDict
values	data/FloatList.java	/^  public float[] values() {$/;"	m	class:FloatList
values	data/IntDict.java	/^  protected int[] values;$/;"	f	class:IntDict
values	data/IntDict.java	/^  public Iterable<Integer> values() {$/;"	m	class:IntDict
values	data/IntList.java	/^  public int[] values() {$/;"	m	class:IntList
values	data/StringDict.java	/^  protected String[] values;$/;"	f	class:StringDict
values	data/StringDict.java	/^  public Iterable<String> values() {$/;"	m	class:StringDict
values	data/StringList.java	/^  public String[] values() {$/;"	m	class:StringList
vertAdvY	core/PShapeSVG.java	/^    int vertAdvY;      \/\/ dflt 1em (unitsPerEm value)$/;"	f	class:PShapeSVG.FontFace
vertCount	opengl/PGraphicsOpenGL.java	/^      int vertCount;$/;"	f	class:PGraphicsOpenGL.Tessellator.TessellatorCallback
vertFirst	opengl/PGraphicsOpenGL.java	/^      int vertFirst;$/;"	f	class:PGraphicsOpenGL.Tessellator.TessellatorCallback
vertIdx	core/PShapeOBJ.java	/^    ArrayList<Integer> vertIdx;$/;"	f	class:PShapeOBJ.OBJFace
vertOriginX	core/PShapeSVG.java	/^    int vertOriginX;   \/\/ dflt horizAdvX\/2$/;"	f	class:PShapeSVG.FontFace
vertOriginY	core/PShapeSVG.java	/^    int vertOriginY;   \/\/ dflt ascent$/;"	f	class:PShapeSVG.FontFace
vertex	core/PApplet.java	/^  public void vertex(float x, float y) {$/;"	m	class:PApplet
vertex	core/PApplet.java	/^  public void vertex(float x, float y, float u, float v) {$/;"	m	class:PApplet
vertex	core/PApplet.java	/^  public void vertex(float x, float y, float z) {$/;"	m	class:PApplet
vertex	core/PApplet.java	/^  public void vertex(float x, float y, float z, float u, float v) {$/;"	m	class:PApplet
vertex	core/PApplet.java	/^  public void vertex(float[] v) {$/;"	m	class:PApplet
vertex	core/PGraphics.java	/^  public void vertex(float x, float y) {$/;"	m	class:PGraphics
vertex	core/PGraphics.java	/^  public void vertex(float x, float y, float u, float v) {$/;"	m	class:PGraphics
vertex	core/PGraphics.java	/^  public void vertex(float x, float y, float z) {$/;"	m	class:PGraphics
vertex	core/PGraphics.java	/^  public void vertex(float x, float y, float z, float u, float v) {$/;"	m	class:PGraphics
vertex	core/PGraphics.java	/^  public void vertex(float[] v) {$/;"	m	class:PGraphics
vertex	core/PGraphicsJava2D.java	/^  public void vertex(float x, float y) {$/;"	m	class:PGraphicsJava2D
vertex	core/PGraphicsJava2D.java	/^  public void vertex(float x, float y, float u, float v) {$/;"	m	class:PGraphicsJava2D
vertex	core/PGraphicsJava2D.java	/^  public void vertex(float x, float y, float z) {$/;"	m	class:PGraphicsJava2D
vertex	core/PGraphicsJava2D.java	/^  public void vertex(float x, float y, float z, float u, float v) {$/;"	m	class:PGraphicsJava2D
vertex	core/PGraphicsJava2D.java	/^  public void vertex(float[] v) {$/;"	m	class:PGraphicsJava2D
vertex	core/PShape.java	/^  public void vertex(float x, float y) {$/;"	m	class:PShape
vertex	core/PShape.java	/^  public void vertex(float x, float y, float u, float v) {$/;"	m	class:PShape
vertex	core/PShape.java	/^  public void vertex(float x, float y, float z) {$/;"	m	class:PShape
vertex	core/PShape.java	/^  public void vertex(float x, float y, float z, float u, float v) {$/;"	m	class:PShape
vertex	opengl/PGL.java	/^    public void vertex(Object data);$/;"	m	interface:PGL.TessellatorCallback
vertex	opengl/PGraphics2D.java	/^  public void vertex(float x, float y, float z) {$/;"	m	class:PGraphics2D
vertex	opengl/PGraphics2D.java	/^  public void vertex(float x, float y, float z, float u, float v) {$/;"	m	class:PGraphics2D
vertex	opengl/PGraphicsOpenGL.java	/^      public void vertex(Object data) {$/;"	m	class:PGraphicsOpenGL.Tessellator.TessellatorCallback
vertex	opengl/PGraphicsOpenGL.java	/^  public void vertex(float x, float y) {$/;"	m	class:PGraphicsOpenGL
vertex	opengl/PGraphicsOpenGL.java	/^  public void vertex(float x, float y, float u, float v) {$/;"	m	class:PGraphicsOpenGL
vertex	opengl/PGraphicsOpenGL.java	/^  public void vertex(float x, float y, float z) {$/;"	m	class:PGraphicsOpenGL
vertex	opengl/PGraphicsOpenGL.java	/^  public void vertex(float x, float y, float z, float u, float v) {$/;"	m	class:PGraphicsOpenGL
vertex	opengl/PJOGL.java	/^      public void vertex(Object data) {$/;"	m	class:PJOGL.Tessellator.GLUCallback
vertex	opengl/PShapeOpenGL.java	/^  public void vertex(float x, float y) {$/;"	m	class:PShapeOpenGL
vertex	opengl/PShapeOpenGL.java	/^  public void vertex(float x, float y, float u, float v) {$/;"	m	class:PShapeOpenGL
vertex	opengl/PShapeOpenGL.java	/^  public void vertex(float x, float y, float z) {$/;"	m	class:PShapeOpenGL
vertex	opengl/PShapeOpenGL.java	/^  public void vertex(float x, float y, float z, float u, float v) {$/;"	m	class:PShapeOpenGL
vertexAttri4fv	opengl/PGL.java	/^  public abstract void vertexAttri4fv(int index, FloatBuffer values);$/;"	m	class:PGL
vertexAttri4fv	opengl/PJOGL.java	/^  public void vertexAttri4fv(int index, FloatBuffer values) {$/;"	m	class:PJOGL
vertexAttrib1f	opengl/PGL.java	/^  public abstract void vertexAttrib1f(int index, float value);$/;"	m	class:PGL
vertexAttrib1f	opengl/PJOGL.java	/^  public void vertexAttrib1f(int index, float value) {$/;"	m	class:PJOGL
vertexAttrib1fv	opengl/PGL.java	/^  public abstract void vertexAttrib1fv(int index, FloatBuffer values);$/;"	m	class:PGL
vertexAttrib1fv	opengl/PJOGL.java	/^  public void vertexAttrib1fv(int index, FloatBuffer values) {$/;"	m	class:PJOGL
vertexAttrib2f	opengl/PGL.java	/^  public abstract void vertexAttrib2f(int index, float value0, float value1);$/;"	m	class:PGL
vertexAttrib2f	opengl/PJOGL.java	/^  public void vertexAttrib2f(int index, float value0, float value1) {$/;"	m	class:PJOGL
vertexAttrib2fv	opengl/PGL.java	/^  public abstract void vertexAttrib2fv(int index, FloatBuffer values);$/;"	m	class:PGL
vertexAttrib2fv	opengl/PJOGL.java	/^  public void vertexAttrib2fv(int index, FloatBuffer values) {$/;"	m	class:PJOGL
vertexAttrib3f	opengl/PGL.java	/^  public abstract void vertexAttrib3f(int index, float value0, float value1, float value2);$/;"	m	class:PGL
vertexAttrib3f	opengl/PJOGL.java	/^  public void vertexAttrib3f(int index, float value0, float value1, float value2) {$/;"	m	class:PJOGL
vertexAttrib3fv	opengl/PGL.java	/^  public abstract void vertexAttrib3fv(int index, FloatBuffer values);$/;"	m	class:PGL
vertexAttrib3fv	opengl/PJOGL.java	/^  public void vertexAttrib3fv(int index, FloatBuffer values) {$/;"	m	class:PJOGL
vertexAttrib4f	opengl/PGL.java	/^  public abstract void vertexAttrib4f(int index, float value0, float value1, float value2, float value3);$/;"	m	class:PGL
vertexAttrib4f	opengl/PJOGL.java	/^  public void vertexAttrib4f(int index, float value0, float value1, float value2, float value3) {$/;"	m	class:PJOGL
vertexAttribPointer	opengl/PGL.java	/^  public abstract void vertexAttribPointer(int index, int size, int type, boolean normalized, int stride, Buffer data);$/;"	m	class:PGL
vertexAttribPointer	opengl/PGL.java	/^  public abstract void vertexAttribPointer(int index, int size, int type, boolean normalized, int stride, int offset);$/;"	m	class:PGL
vertexAttribPointer	opengl/PJOGL.java	/^  public void vertexAttribPointer(int index, int size, int type, boolean normalized, int stride, Buffer data) {$/;"	m	class:PJOGL
vertexAttribPointer	opengl/PJOGL.java	/^  public void vertexAttribPointer(int index, int size, int type, boolean normalized, int stride, int offset) {$/;"	m	class:PJOGL
vertexBreak	opengl/PGraphicsOpenGL.java	/^  protected boolean vertexBreak() {$/;"	m	class:PGraphicsOpenGL
vertexBreak	opengl/PShapeOpenGL.java	/^  protected boolean vertexBreak() {$/;"	m	class:PShapeOpenGL
vertexCheck	core/PGraphics.java	/^  protected void vertexCheck() {$/;"	m	class:PGraphics
vertexCheck	opengl/PGraphicsOpenGL.java	/^    void vertexCheck() {$/;"	m	class:PGraphicsOpenGL.InGeometry
vertexCodeCount	core/PShape.java	/^  protected int vertexCodeCount;$/;"	f	class:PShape
vertexCodes	core/PShape.java	/^  protected int[] vertexCodes;$/;"	f	class:PShape
vertexCount	core/PGraphics.java	/^  protected int vertexCount; \/\/ total number of vertices$/;"	f	class:PGraphics
vertexCount	core/PShape.java	/^  protected int vertexCount;$/;"	f	class:PShape
vertexCount	opengl/PGraphicsOpenGL.java	/^    int vertexCount;$/;"	f	class:PGraphicsOpenGL.InGeometry
vertexCount	opengl/PGraphicsOpenGL.java	/^    int[] vertexCount;$/;"	f	class:PGraphicsOpenGL.IndexCache
vertexFilename	opengl/PShader.java	/^  protected String vertexFilename;$/;"	f	class:PShader
vertexImpl	opengl/PGraphicsOpenGL.java	/^  protected void vertexImpl(float x, float y, float z, float u, float v) {$/;"	m	class:PGraphicsOpenGL
vertexImpl	opengl/PShapeOpenGL.java	/^  protected void vertexImpl(float x, float y, float z, float u, float v) {$/;"	m	class:PShapeOpenGL
vertexLoc	opengl/PShader.java	/^  protected int vertexLoc;$/;"	f	class:PShader
vertexOffset	opengl/PGraphicsOpenGL.java	/^    int[] vertexOffset;$/;"	f	class:PGraphicsOpenGL.IndexCache
vertexShaderSource	opengl/PShader.java	/^  protected String[] vertexShaderSource;$/;"	f	class:PShader
vertexTexture	core/PGraphics.java	/^  protected void vertexTexture(float u, float v) {$/;"	m	class:PGraphics
vertexURL	opengl/PShader.java	/^  protected URL vertexURL;$/;"	f	class:PShader
vertices	core/PGraphics.java	/^  protected float vertices[][] =$/;"	f	class:PGraphics
vertices	core/PShape.java	/^  protected float[][] vertices;$/;"	f	class:PShape
vertices	opengl/PGraphicsOpenGL.java	/^    float[] vertices;$/;"	f	class:PGraphicsOpenGL.InGeometry
vessel	core/PApplet.java	/^    PImage vessel;$/;"	f	class:PApplet.AsyncImageLoader
viewBuffer	opengl/PGL.java	/^  protected IntBuffer viewBuffer;$/;"	f	class:PGL
viewport	opengl/PGL.java	/^  public abstract void viewport(int x, int y, int w, int h);$/;"	m	class:PGL
viewport	opengl/PGraphicsOpenGL.java	/^  protected IntBuffer viewport;$/;"	f	class:PGraphicsOpenGL
viewport	opengl/PJOGL.java	/^  public void viewport(int x, int y, int w, int h) {$/;"	m	class:PJOGL
viewportLoc	opengl/PShader.java	/^  protected int viewportLoc;$/;"	f	class:PShader
vimage	core/PGraphicsJava2D.java	/^  VolatileImage vimage;$/;"	f	class:PGraphicsJava2D
visible	core/PShape.java	/^  protected boolean visible = true;$/;"	f	class:PShape
w	opengl/Texture.java	/^    int w, h;$/;"	f	class:Texture.BufferData
warnings	core/PGraphics.java	/^  static protected HashMap<String, Object> warnings;$/;"	f	class:PGraphics
width	core/PApplet.java	/^  public int width;$/;"	f	class:PApplet
width	core/PFont.java	/^    public int width;$/;"	f	class:PFont.Glyph
width	core/PFont.java	/^  public float width(char c) {$/;"	m	class:PFont
width	core/PImage.java	/^  public int width;$/;"	f	class:PImage
width	core/PShape.java	/^  public float width;$/;"	f	class:PShape
width	opengl/FontTexture.java	/^    int width;$/;"	f	class:FontTexture.TextureInfo
width	opengl/FrameBuffer.java	/^  public int width;$/;"	f	class:FrameBuffer
width	opengl/Texture.java	/^  public int width, height;$/;"	f	class:Texture
windingRule	opengl/LinePath.java	/^  protected int windingRule;$/;"	f	class:LinePath
window	opengl/PJOGL.java	/^  protected static GLWindow window;$/;"	f	class:PJOGL
windowDestroyNotify	opengl/PJOGL.java	/^    public void windowDestroyNotify(com.jogamp.newt.event.WindowEvent arg0) {$/;"	m	class:PJOGL.NEWTWindowListener
windowDestroyed	opengl/PJOGL.java	/^    public void windowDestroyed(com.jogamp.newt.event.WindowEvent arg0) {$/;"	m	class:PJOGL.NEWTWindowListener
windowGainedFocus	opengl/PJOGL.java	/^    public void windowGainedFocus(com.jogamp.newt.event.WindowEvent arg0) {$/;"	m	class:PJOGL.NEWTWindowListener
windowLostFocus	opengl/PJOGL.java	/^    public void windowLostFocus(com.jogamp.newt.event.WindowEvent arg0) {$/;"	m	class:PJOGL.NEWTWindowListener
windowMoved	opengl/PJOGL.java	/^    public void windowMoved(com.jogamp.newt.event.WindowEvent arg0) {$/;"	m	class:PJOGL.NEWTWindowListener
windowRepaint	opengl/PJOGL.java	/^    public void windowRepaint(com.jogamp.newt.event.WindowUpdateEvent arg0) {$/;"	m	class:PJOGL.NEWTWindowListener
windowResized	opengl/PJOGL.java	/^    public void windowResized(com.jogamp.newt.event.WindowEvent arg0) { }$/;"	m	class:PJOGL.NEWTWindowListener
wrap	data/JSONObject.java	/^  static protected Object wrap(Object object) {$/;"	m	class:JSONObject
wrapBackTexture	opengl/PGL.java	/^  protected Texture wrapBackTexture(Texture texture) {$/;"	m	class:PGL
wrapBackTexture	opengl/PJOGL.java	/^  protected Texture wrapBackTexture(Texture texture) {$/;"	m	class:PJOGL
wrapFrontTexture	opengl/PGL.java	/^  protected Texture wrapFrontTexture(Texture texture)  {$/;"	m	class:PGL
wrapFrontTexture	opengl/PJOGL.java	/^  protected Texture wrapFrontTexture(Texture texture) {$/;"	m	class:PJOGL
wrapTexture	opengl/PGraphicsOpenGL.java	/^  protected PImage wrapTexture(Texture tex) {$/;"	m	class:PGraphicsOpenGL
wrapU	opengl/Texture.java	/^    public int wrapU;$/;"	f	class:Texture.Parameters
wrapV	opengl/Texture.java	/^    public int wrapV;$/;"	f	class:Texture.Parameters
write	data/FloatDict.java	/^  public void write(PrintWriter writer) {$/;"	m	class:FloatDict
write	data/IntDict.java	/^  public void write(PrintWriter writer) {$/;"	m	class:IntDict
write	data/JSONArray.java	/^  protected Writer write(Writer writer) {$/;"	m	class:JSONArray
write	data/JSONArray.java	/^  protected Writer write(Writer writer, int indentFactor, int indent) {$/;"	m	class:JSONArray
write	data/JSONObject.java	/^  protected Writer write(Writer writer, int indentFactor, int indent) {$/;"	m	class:JSONObject
write	data/JSONObject.java	/^  public boolean write(PrintWriter output) {$/;"	m	class:JSONObject
write	data/StringDict.java	/^  public void write(PrintWriter writer) {$/;"	m	class:StringDict
write	data/Table.java	/^    void write(DataOutputStream output) throws IOException {$/;"	m	class:Table.HashMapBlows
write	data/XML.java	/^  public boolean write(PrintWriter output) {$/;"	m	class:XML
writeBitmap	core/PFont.java	/^    protected void writeBitmap(DataOutputStream os) throws IOException {$/;"	m	class:PFont.Glyph
writeCSV	data/Table.java	/^  protected void writeCSV(PrintWriter writer) {$/;"	m	class:Table
writeEntryCSV	data/Table.java	/^  protected void writeEntryCSV(PrintWriter writer, String entry) {$/;"	m	class:Table
writeEntryHTML	data/Table.java	/^  protected void writeEntryHTML(PrintWriter writer, String entry) {$/;"	m	class:Table
writeHTML	data/Table.java	/^  protected void writeHTML(PrintWriter writer) {$/;"	m	class:Table
writeHeader	core/PFont.java	/^    protected void writeHeader(DataOutputStream os) throws IOException {$/;"	m	class:PFont.Glyph
writeTSV	data/Table.java	/^  protected void writeTSV(PrintWriter writer) {$/;"	m	class:Table
writeValue	data/JSONObject.java	/^  static final Writer writeValue(Writer writer, Object value,$/;"	m	class:JSONObject
writeln	data/Table.java	/^    private void writeln(PrintWriter writer) throws IOException {$/;"	m	class:Table.HashMapBlows	file:
x	core/PVector.java	/^  public float x;$/;"	f	class:PVector
x	event/MouseEvent.java	/^  protected int x, y;$/;"	f	class:MouseEvent
x0	opengl/LineStroker.java	/^  private int sx0, sy0, sx1, sy1, x0, y0;$/;"	f	class:LineStroker	file:
x1	core/PShapeSVG.java	/^    float x1, y1, x2, y2;$/;"	f	class:PShapeSVG.LinearGradient
x1	core/PShapeSVG.java	/^    float x1, y1, x2, y2;$/;"	f	class:PShapeSVG.LinearGradientPaint
x2	core/PShapeSVG.java	/^    float x1, y1, x2, y2;$/;"	f	class:PShapeSVG.LinearGradient
x2	core/PShapeSVG.java	/^    float x1, y1, x2, y2;$/;"	f	class:PShapeSVG.LinearGradientPaint
y	core/PVector.java	/^  public float y;$/;"	f	class:PVector
y	event/MouseEvent.java	/^  protected int x, y;$/;"	f	class:MouseEvent
y0	opengl/LineStroker.java	/^  private int sx0, sy0, sx1, sy1, x0, y0;$/;"	f	class:LineStroker	file:
y1	core/PShapeSVG.java	/^    float x1, y1, x2, y2;$/;"	f	class:PShapeSVG.LinearGradient
y1	core/PShapeSVG.java	/^    float x1, y1, x2, y2;$/;"	f	class:PShapeSVG.LinearGradientPaint
y2	core/PShapeSVG.java	/^    float x1, y1, x2, y2;$/;"	f	class:PShapeSVG.LinearGradient
y2	core/PShapeSVG.java	/^    float x1, y1, x2, y2;$/;"	f	class:PShapeSVG.LinearGradientPaint
year	core/PApplet.java	/^  static public int year() {$/;"	m	class:PApplet
z	core/PVector.java	/^  public float z;$/;"	f	class:PVector
zero	opengl/PGraphicsOpenGL.java	/^  protected static boolean zero(float a) {$/;"	m	class:PGraphicsOpenGL
